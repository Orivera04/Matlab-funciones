%  worpop2.m
% Matlab file for Part 2 of the World Population module

disp('********************************************')
disp('Part 2:  The Coalition Model')
disp('********************************************')
disp('  ')    

    format short
    disp(' ')
    disp('Explain why ')
    disp(' ( P(i+1) - P(i-1) )/( t(i+1) - t(i-1) ) ')
    disp('is a good estimate of dP/dt at time t(i).  ')
    disp('Write as MATLAB comments in your diary file.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('The following commands will construct the ')
    disp('symmetric difference quotients as a list: sdq.')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    disp(' ')
    disp('n=size(pops,2);')
    disp('for i=2:n-1 ')
    disp(' sdq(i)=(pops(i+1)-pops(i-1))/(years(i+1)-years(i-1));')
    disp('end ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('----------------------------------------------') 
    disp('To make a loglog plot of sdq versus population,')
    disp('we plot the pairs (log(pops), log(sdq)).')
    disp('Note that there is no sdq for i=1 or i=n so we ')
    disp('shorten our lists accordingly. ')
    disp(' ')
    disp('Copy the following commands and paste them at')
    disp('a MATLAB prompt, then execute them.')
    disp(' ')
    disp('  s_sdq=sdq(2:n-1); ')
    disp('  s_pops=pops(2:n-1); ')
    disp('  plot(log(s_pops),log(s_sdq),''*'') ')
    disp('  xlabel(''log(population)'')  ')
    disp('  ylabel(''log( symmetric diff quot )'')  ')
    disp('  title(''LogLog Plot of dP/dt versus P'') ')
    disp(' ')
    disp('----------------------------------------------') 
    disp('Is it possible that dP/dt is a power ')
    disp('function of P? ')
    disp('Write as MATLAB comments in your diary file.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('MATLAB has a built-in command, called polyfit')
    disp('that fits polynomial curves to data:')
    disp('   coefs=polyfit(xlist,ylist,n) ')
    disp('gives the coefficients of the best-fitting')
    disp('polynomial of degree n to the data given')
    disp('by (xlist,ylist).  For a line y = m*x + b, ')
    disp('we need n=1.')
    disp(' ')
    disp('Enter the commands below to find the best')
    disp('fit m and b values and plot the best-fitting')
    disp('line on the data plot in cyan color:')
    disp(' ')
    disp('  coefs=polyfit(log(s_pops),log(s_sdq),1)')
    disp('  m=coefs(1) ')
    disp('  b=coefs(2) ')
    disp('  hold on ')
    disp('  xmin=min(log(s_pops)); ')
    disp('  xmax=max(log(s_pops)); ')
    disp('  xstep=(xmax-xmin)/50;      ')
    disp('  x=xmin:xstep:xmax;      ')
    disp('  y=m*x+b; ')
    disp('  axis( [xmin,xmax,min(log(s_sdq)), ...')
    disp('         max(log(s_sdq))] ) ')
    disp('  plot(x,y,''c'') ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('Use your m and b values for the best-fitting ')
    disp('to calculate the parameters k and r for the ')
    disp('D.E. right hand side = k*P^(r+1). ')
    disp(' ')
    disp('Make sure your values k and r are entered')
    disp('into MATLAB. ')
    disp(' ')
    disp('  k= ?? ')
    disp('  r= ?? ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('We want to draw the slope field,')
    disp('for our differential equation:')
    disp('   dP/dt = k*P^(r+1) ')
    disp('To do so, you must edit the dfun.m file,')
    disp('(included with this module''s files)')
    disp('giving the right hand side of the')
    disp('differential equation. The original')
    disp('is set up for the D.E. dP/dt=t-P.')
    disp(' ')
    disp('Edit dfun.m, making sure to use the')
    disp('numerical values of r and k in it.')
    disp(' ')
    disp('------------------------------------------')
    disp('The following MATLAB function:')
    disp('    slpfield(tmin,tmax,Pmin,Pmax) ')
    disp('for plotting slope fields is contained')
    disp('in a m-file provided with this module.')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    disp('     clf ')
    disp('     slpfield(1000,1985,0,5000) ')
    disp('     hold on')
    disp(' ')
    disp('Note: the ''hold on'' command saves the plot')
    disp('so we can add other data to it.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('We add a solution curve by solving the')
    disp('differential equation under the specified')
    disp('initial conditions and then plotting it')
    disp('on top of the slope field.')
    disp(' ')
    disp('For efficiency, we will use MATLAB''s')
    disp('build-in numerical DE solver:')
    disp('  [t,P]=ode23(function_name,t0,tf,P0)')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    disp('  P1850=1171;')
    disp('  [t,P]=ode23(''dfun'',[1850,1985],P1850); ')
    disp('  plot(t,P,''r'') ')
    disp(' ')
    disp('A red solution curve satisfying initial')
    disp('condition P(1850)=1171 should appear on top of')
    disp('the direction field.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('Now add the original world population data')
    disp('to the plot by entering the following commands.')
    disp(' ')
    disp('Copy the following command and paste it')
    disp('at a MATLAB prompt, then execute it.')
    disp(' ')
    disp('  plot(years,pops,''go'') ')
    disp(' ')
    disp('----------------------------------------------')
    disp('What do you think about the Coalition Model ')
    disp('as a description of the historical data? ')
    disp('Write as MATLAB comments in your diary file.')
    disp(' ')
    disp(' ')
    disp('----------------------------------------------')
    disp('To go on to Part 3 of this module,')
    disp('type: worpop3')
    disp(' ')


