function varargout= local_regstats(Action,varargin);
% LOCAL_REGSTATS local regression statistics display

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.


%   $Revision: 1.6.2.5 $  $Date: 2004/02/09 08:01:58 $

switch lower(Action)
case 'create'
   varargout{1}=i_CreateTool(varargin{:});
case 'setup'
   i_Setup(varargin{:});
case 'displaystats'
   i_DisplayStats(varargin{:})
case 'nofit'
   i_NoFit(varargin{:});
case 'statstype'
   i_StatsType;
case 'viewmodel'
   i_ViewModel;
end


function Tool=i_CreateTool(hFig)

%%--------------------------------------------------
%% Table & Popupmenu of diagnostic stats
%%--------------------------------------------------
hl=xreguicontrol('parent',hFig,...
   'style','popup',...
   'string',{'Local parameters','Local correlations','Response features','Global variables','Local diagnostics','Global covariance'},...
   'callback',[mfilename,'(''StatsType'')'],...
   'visible','off',...
   'BackGroundColor','w');
Tool.popup= hl;
tbl=xregtable(hFig,...
   'visible','off',...
   'defaultcelltype','uitext',...
   'defaultcellformat','%.4g',...
   'rows.number',5,...
   'cols.number',3,...
   'rows.fixed',1,...
   'cols.fixed',1,...
   'zeroindex',[2 2],...
   'rows.spacing',3,...
   'cols.spacing',5,...
   'frame.hborder',[5 2],...
   'frame.vborder',[5 2],...
   'frame.box','on',...
   'cols.size',70,...
   'rows.size',16,...
   'hslider.width',13,...
   'vslider.width',13,...
   'visible','off',...
   'position',[0 0 150 80],...
   'redrawmode','basic');

set(tbl,...
   'cells.rowselection',[1 1],...
   'cells.colselection',[2 3],...
   'cells.type','uitext',...
   'cells.rowselection',[2 2],...
   'cells.colselection',[1 1],...
   'cells.type','uitext',...
   'cells.horizontalalignment','left');
tbl.redrawmode='normal';

Bdr= xregborderlayout(hFig,...
   'center',tbl,...
   'north',hl,...
   'innerborder',[0 0 0 25],...
   'visible','off',...
   'packstatus','off');

diagnosticLyt= xregframetitlelayout(hFig,...
   'title','Diagnostic statistics',...
   'center',Bdr,...
   'innerborder',[10 5 5 5],...
   'visible','off');

Tool.diagnostic = diagnosticLyt;
Tool.RespFeat= tbl;

%%--------------------------------------------------
%% Table of summary stats
%%--------------------------------------------------


%% transposed version
Stbl=xregtable(hFig,...
   'visible','off',...
   'defaultcelltype','uipushbutton',...
   'defaultcellformat','%.4g',...
   'frame.hborder',[2 2],...
   'frame.vborder',[5 2],...
   'hslider.width',13,...
   'vslider.width',13,...
   'cols.size',88,...
   'rows.size',16,...   
   'rows.spacing',2,...
   'cols.spacing',3,...   
   'rows.number',2,...
   'cols.number',2,...
   'zeroindex',[1 2],...
   'frame.visible','off',...
   'position',[0 0 100 100],...
   'cells.rowselection',[1 2],...
   'cells.colselection',[1 2],...
   'cells.type','uitext',...
   'redrawmode','basic');
set(Stbl,'redrawmode','normal');


summaryLyt= xregframetitlelayout(hFig,...
   'title','Pooled statistics',...
   'Center',Stbl,...
   'innerborder',[10 5 5 5],...
   'visible','off');

Tool.Summary=Stbl;
Tool.summaryLyt = summaryLyt;


%%--------------------------------------------------
%% Sweep notes Layout
%%--------------------------------------------------
Tool.Notes=xreguicontrol('parent',hFig,...
   'style','edit',...
   'min',0,'max',2,...
   'horizontalalign','left',...
   'backgroundcolor','w',...
   'vis','off');
txt=xreguicontrol('parent',hFig,...
   'style','text',...
   'string','Test number color:',...
   'horizontalalign','left',...
   'vis','off');


csetup=xreguicontrol('parent',hFig,...
   'style','push',...
   'string','Set Color...',...
   'callback','mv_LocalReg(''Color'')',...
   'visible','off');


Tool.Color=xreguicontrol('parent',hFig,...
   'style','text',...
   'horizontalalign','left',...
   'vis','off');

flyt= xreggridlayout(hFig,...
   'dimension',[1,6],...
   'correctalg','on',...
   'elements',{txt,[],Tool.Color,[],csetup,[]},...
   'colsizes',[120,15,15,10,80,-1],...
   'visible','off');

BdrN= xreggridlayout(hFig,...
   'dimension',[2 1],...
   'elements',{Tool.Notes,flyt},...
   'correctalg','on',...
   'rowsizes',[40 20],...
   'visible','off',...
   'gapy',3);

notesLyt= xregframetitlelayout(hFig,...
   'title','Test notes',...
   'Center',BdrN,...
   'innerborder',[10 5 5 5],...
   'visible','off');

Tool.notes = notesLyt;

FullSplit= xregsplitlayout(hFig,...
   'split',[0.66 0.34],...
   'orientation','lr',...
   'visible','off',...
   'top',summaryLyt,...
   'bottom',diagnosticLyt,...
   'visible','off',...
   'resizable','off');

Tool.layout= FullSplit;


%%---------------------------------------------
%% subfunction i_Setup
%%---------------------------------------------
function i_Setup(Tool,p);

c= p.colhead;

L= p.model;
Nr= numfeats(L);

set(Tool.Summary,...
   'rows.number',length(c))
set(Tool.Summary,...
   'cells.colselection',[1 2],...
   'cells.rowselection',[1 length(c)],...
   'cells.type','uitext',...
   'cells.colselection',[1 1],...
   'cells.rowselection',[1 length(c)],...
   'cells.horizontalalignment','left',...
   'cells.colselection',[2 2],...
   'cells.rowselection',[1 length(c)],...
   'cells.horizontalalignment','right',...
   'cells.colselection',[1 1],...
   'cells.string',c);



%%---------------------------------------------
%% subfunction i_DisplayStats
%%---------------------------------------------
function i_DisplayStats(Tool,SNo,p,L,X,Y); 

if nargin<4
   mdev= info(p);
   [X,Y]= getdata(mdev);
   X=X(:,:,SNo);
   Y=Y(:,:,SNo);
   [L,OK]= LocalModel(mdev,SNo);
end


Type = get(Tool.popup,'value');
Tool.RespFeat(0:end,0:end).visible= 'on';

[OK,Stats,InSig,labs,head,ls]=localstats(p.info,SNo,Type,L,X,Y);
%% deTeX the labels (empty if this test not fitted)
if ~isempty(labs), labs = strrep(labs,'\',''); end;
if ~isempty(head), head = strrep(head,'\',''); end;

if OK
   set(Tool.RespFeat,...
      'rows.number',size(Stats,1)+1,...
      'cols.number',size(Stats,2)+1);
   
   set(Tool.RespFeat,...
      'cells.rowselection',[1 1],...
      'cells.colselection',[2 size(Stats,2)+1],...
      'cells.type','uitext',...
      'cells.horizontalalignment','center',...
      'cells.string',head,...
      'cells.rowselection',[2 size(Stats,1)+1],...
      'cells.colselection',[1 1],...
      'cells.type','uitext',...
      'cells.horizontalalignment','left',...
      'cells.string',labs(:),...
      'cells.rowselection',[2 size(Stats,1)+1],...
      'cells.colselection',[2 size(Stats,2)+1],...
      'cells.horizontalalignment','right');
   
   %% trying to get all the info into the fixed rows/cols and looking half decent
   
   set(Tool.RespFeat,'redrawmode','basic');
   
   switch Type
   case {1,3,4}
      for i = 1:size(Stats,1)
         set(Tool.RespFeat,...
            'cells.rowselection',[i+1 i+1],...
            'cells.colselection',[1 1],...
            'cells.tooltipstring',labs{i});
      end
      for i = 1:size(Stats,2)
         set(Tool.RespFeat,...
            'cells.colselection',[i+1 i+1],...
            'cells.rowselection',[1 1],...
            'cells.tooltipstring','');
      end
   case 2 %% correlations
      for i = 1:size(Stats,1)
         set(Tool.RespFeat,...
            'cells.rowselection',[i+1 i+1],...
            'cells.colselection',[1 1],...
            'cells.tooltipstring',labs{i});
      end
      for i = 1:size(Stats,2)
         set(Tool.RespFeat,...
            'cells.colselection',[i+1 i+1],...
            'cells.rowselection',[1 1],...
            'cells.tooltipstring',head{i});
      end
		ind= (triu(ones(size(Stats)),1)~=0);
		Tool.RespFeat(ind).visible='off';
   case 5
      for i = 1:size(Stats,1)
         set(Tool.RespFeat,...
            'cells.rowselection',[i+1 i+1],...
            'cells.colselection',[1 1],...
            'cells.tooltipstring','');
      end
      for i = 1:size(Stats,2)
         set(Tool.RespFeat,...
            'cells.colselection',[i+1 i+1],...
            'cells.rowselection',[1 1],...
            'cells.tooltipstring','');
      end
	case 6
		ind= (triu(ones(size(Stats)),1)~=0);
		Tool.RespFeat(ind).visible='off';
		
   end
   
   set(Tool.RespFeat,'redrawmode','normal');
   
   
   Tool.RespFeat(:,:)= Stats;
   Tool.RespFeat(InSig,1:2).FontWeight= 'bold';
   Tool.RespFeat(~InSig,1:2).FontWeight= 'normal';
   %Tool.RespFeat.redraw;
   
%    % summary stats table
%    st= p.statistics;
%    %% do this differently depending on orientation of table
%    if size(Tool.Summary,1)< length(st)
%       st= st(1:size(Tool.Summary,1));
%    elseif size(Tool.Summary,1)> length(st)
%       st = [st repmat(NaN,1,size(Tool.Summary,1)-length(st))];
%    end
%    Tool.Summary(:,1).type='uitext';
%    Tool.Summary(:,1)= st;
else
   i_NoFit(Tool)   
end
% summary stats table
st= p.statistics;
%% do this differently depending on orientation of table
if size(Tool.Summary,1)< length(st)
    st= st(1:size(Tool.Summary,1));
elseif size(Tool.Summary,1)> length(st)
    st = [st repmat(NaN,1,size(Tool.Summary,1)-length(st))];
end
Tool.Summary(:,1).type='uitext';
Tool.Summary(:,1)= st;


function i_NoFit(Tool)
%% remove numbers from all tables 
% Tool.Summary(:)=NaN;
Tool.RespFeat(:,:)= NaN;
Tool.RespFeat(0:end,0:end).visible= 'off';


function i_StatsType

mbH= MBrowser;
p= mbH.CurrentNode;
View= mbH.GetViewData;

i_DisplayStats(View.Reg,View.SweepPos,p);



function i_ViewModel

mbH= MBrowser;
p= mbH.CurrentNode;
View= mbH.GetViewData;
mvH = mvf('mvModelView');

tab = mbH.GetViewData.ChildTab;
if get(tab,'currentcard')==3
   if p.hasbest
      mvH= view(p.BestModel);
   else
      return
   end
else 
   [L,OK]= LocalModel(p.info,View.SweepPos);
   X= p.getdata('X');
   X= X(:,:,View.SweepPos);
   if OK
      % summary stats
      ms= p.mle_stats;
      Pooled_RMSE= sqrt(ms.Pooled_MSE);
      mvH= view(L,p.fullname,testnum(X),Pooled_RMSE);
   else %% if not OK
      if ~isempty(mvH)
         close(mvH);
      end
   end
   mbH.RegisterSubFigure(mvH);
end
