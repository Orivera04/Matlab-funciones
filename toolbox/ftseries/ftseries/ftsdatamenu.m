function varargout = ftsdatamenu(varargin)
%FTSDATAMENU The Data menu item of FTS GUI.
%
%   FTSDATAMENU generates the Data menu item of the financial time series GUI,
%   ftsgui.  Please start the GUI from the MATLAB command line using
%
%      ftsgui
%
%   See also FTSGUI.

%   NOTE: Need to be called from ftsgui.m.

%   Author: P. N. Secakusuma, 01-10-2000
%   Copyright 1995-2003 The MathWorks, Inc.
%   $Revision: 1.8.2.3 $   $Date: 2004/04/06 01:09:23 $

switch nargin,
    case 0,   % Setup the DATA menu items.
        mainFTSGUIWindow = findall(0, 'Type', 'figure', ...
            'Tag' , 'FTSGUIMainWindow');
        MenuItems = {'&Data'             , ''                 , 'dataMenuItem'                   ;
            '>&Fill Missing Data'        , 'ftsdatamenu(1)'   , 'dataFillTSMenuItem'             ;
            '>&Smooth Data'              , 'ftsdatamenu(2)'   , 'dataSmoothTSMenuItem'           ;
            '>-----'                     , ''                 , ''                               ;
            '>L&ag Data'                 , 'ftsdatamenu(3)'   , 'dataLagTSMenuItem'              ;
            '>L&ead Data'                , 'ftsdatamenu(4)'   , 'dataLeadTSMenuItem'             ;
            '>-----'                     , ''                 , ''                               ;
            '>F&ilter Data'              , 'ftsdatamenu(5)'   , 'dataFilterMenuItem'             ;
            '>&Box-Cox Transformation'   , 'ftsdatamenu(6)'   , 'dataBoxCoxMenuItem'             ;
            '>-----'                     , ''                 , ''                               ;
            '>&Resample data'            , 'ftsdatamenu(7)'   , 'dataResampleMenuItem'           ;
            '>&Convert Data Frequency To', ''                 , 'dataConvertToMenuItem'          ;
            '>>To &Daily'                , 'ftsdatamenu(8, 1)', 'dataConvertToDailyMenuItem'     ;
            '>>To &Weekly'               , 'ftsdatamenu(8, 2)', 'dataConvertToWeeklyMenuItem'    ;
            '>>To &Monthly'              , 'ftsdatamenu(8, 3)', 'dataConvertToMonthlyMenuItem'   ;
            '>>To &Quarterly'            , 'ftsdatamenu(8, 4)', 'dataConvertToQuarterlyMenuItem' ;
            '>>To &Semi-annual'          , 'ftsdatamenu(8, 5)', 'dataConvertToSemiannualMenuItem';
            '>>To &Annual'               , 'ftsdatamenu(8, 6)', 'dataConvertToAnnualMenuItem'    };
        hDataMenuItems = makemenu(mainFTSGUIWindow, str2mat(MenuItems{:, 1}), str2mat(MenuItems{:, 2}), str2mat(MenuItems{:, 3}));

        varargout{1} = hDataMenuItems;

    case {1, 2, 3},   % Callbacks for the DATA menu items
        mainFTSGUIWindow = findall(0, 'Type', 'figure', ...
            'Tag', 'FTSGUIMainWindow');
        infostorage = getappdata(mainFTSGUIWindow, 'FTS_Data');

        % If there is no active figure selected
        if isempty(infostorage.activefts)
            errordlg('No data loaded or no active FTS is selected.', 'No Active FTS', 'modal');
            return
        end

        [MAT_data, data_names, data_info] = getftsguidata(infostorage.activefts);

        switch varargin{1},
            case 0,   % Unimplemented feature message
                warndlg('Feature not yet implemented', 'No Feature');

            case 1,   % FILLTS
                if nargin == 1,
                    hfilltsfig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Fill Missing Data (fillts)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.4 0.4 0.2 0.15], ...
                        'HandleVisibility', 'callback', ...
                        'Tag', 'filltsdlg');

                    hfmethtb  = uicontrol('Style', 'text', ...
                        'String', 'Fill method: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.1 0.620 0.4 0.125], ...
                        'Tag', 'filltsfmethtb');
                    hfmethpm = uicontrol('Style', 'popupmenu', ...
                        'BackgroundColor', 'w', ...
                        'String', {'Linear'; 'Cubic'; 'Spline'; 'Nearest'; 'Pchip'; 'Constant'}, ...
                        'Callback', 'ftsdatamenu(1, 2)', ...
                        'Value', 1, ...
                        'Units', 'normal', ...
                        'Position', [0.5 0.635 0.25 0.125], ...
                        'Tag', 'filltsfmethpm');

                    hfmethConstName  = uicontrol('Style', 'text', ...
                        'String', 'Constant: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.1 0.43 0.4 0.125], ...
                        'Tag', 'filltsfmethConstName');

                    hfmethConstBox = uicontrol('Style', 'edit', ...
                        'Enable', 'off', ...
                        'backgroundcolor', get(0, 'defaultuicontrolbackgroundcolor'), ...
                        'foregroundcolor', 'k', ...
                        'Units', 'normal', ...
                        'Position', [0.5 0.43 0.25 0.125], ...
                        'Tag', 'filltsfmethConstNum');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.175], ...
                        'Callback', 'ftsdatamenu(1, 1)', ...
                        'Tag', 'filltsokbutton');

                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.175], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'filltscancelbutton');

                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.175], ...
                        'Callback', 'doc fillts', ...
                        'Tag', 'filltshelpbutton');
                elseif nargin == 2,
                    switch varargin{2}
                        case 1
                            hfmethpm_val  = get(findall(0, 'Tag', 'filltsfmethpm'), 'Value');
                            if isempty(hfmethpm_val)
                                hfmethpm_val = 'linear';
                            else
                                switch hfmethpm_val,
                                    case 1
                                        hfmethpm_val = 'linear';
                                    case 2
                                        hfmethpm_val = 'cubic';
                                    case 3
                                        hfmethpm_val = 'spline';
                                    case 4
                                        hfmethpm_val = 'nearest';
                                    case 5
                                        hfmethpm_val = 'pchip';
                                    case 6 % PW 1/31/02
                                        constStr = get(findall(0, 'Tag', 'filltsfmethConstNum'), 'string');

                                        % Check to see if the str is '' or ' '
                                        if strcmp('',constStr) | strcmp(' ',constStr)
                                            closereq;
                                            errordlg('Please enter a constant.', 'Input error', 'modal');
                                            return
                                        end

                                        % Make sure its a number
                                        hfmethpm_val = str2num(constStr);
                                        if  isempty(hfmethpm_val)
                                            closereq;
                                            errordlg(sprintf(['''', constStr, '''', ' is not a valid constant.\n', ...
                                                'Please enter a constant.']), 'Input error', 'modal');
                                            return
                                        end
                                end
                            end
                            opt_param = hfmethpm_val;
                            closereq;

                            try
                                [ftsData, ftsName] = execftsdatafcn('fillts', opt_param);

                            catch
                                errMsg = lasterror;
                                errorFillts = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Fill Missing Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'fillts');
                            updateftsguistatus(1, ['fillts: ', deblank(MAT_data.desc)]);
                            drawnow;
                        case 2
                            % Enabling/disabling the fillts constant edit box.
                            % PW 1/31/02
                            hfmethpm_val  = get(findall(0, 'Tag', 'filltsfmethpm'), 'Value');

                            if hfmethpm_val == 6
                                set(findall(0, 'Tag', 'filltsfmethConstNum'), 'enable', 'on', ...
                                    'backgroundcolor', 'w');
                            else
                                set(findall(0, 'Tag', 'filltsfmethConstNum'), 'enable', 'off', ...
                                    'backgroundcolor', get(0, 'defaultuicontrolbackgroundcolor'));
                            end
                    end
                end

            case 2,   % SMOOTHTS
                if nargin == 1,
                    hsmoothtsfig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Periodic Average (peravg)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.375 0.4 0.25 0.15], ...
                        'HandleVisibility', 'on', ...
                        'Tag', 'peravgdlg');

                    hboxrb = uicontrol('Style', 'radiobutton', ...
                        'String', 'Box (simple, linear) method, window size: ', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.8 0.9 0.125], ...
                        'Value', 1, ...
                        'Callback', 'ftsdatamenu(2, 1);', ...
                        'Tag', 'smoothtsboxrb');
                    hboxetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '5', ...
                        'Units', 'normal', ...
                        'Position', [0.72 0.795 0.15 0.125], ...
                        'Enable', 'on', ...
                        'Tag', 'smoothtsboxetb');

                    hgaussrb = uicontrol('Style', 'radiobutton', ...
                        'String', 'Gauss method, window size: ', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.6 0.9 0.125], ...
                        'Value', 0, ...
                        'Callback', 'ftsdatamenu(2, 2);', ...
                        'Tag', 'smoothtsgaussrb');
                    hgaussetb1 = uicontrol('Style', 'edit', ...
                        'BackgroundColor', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'String', '5', ...
                        'Units', 'normal', ...
                        'Position', [0.54 0.605 0.1 0.125], ...
                        'Enable', 'off', ...
                        'Tag', 'smoothtsgaussetb1');
                    hgausstb = uicontrol('Style', 'text', ...
                        'BackgroundColor', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'String', ', std. dev: ', ...
                        'Units', 'normal', ...
                        'Position', [0.64 0.6 0.15 0.125], ...
                        'Enable', 'on', ...
                        'Tag', 'smoothtsgausstb');
                    hgaussetb2 = uicontrol('Style', 'edit', ...
                        'BackgroundColor', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'String', '0.65', ...
                        'Units', 'normal', ...
                        'Position', [0.80 0.605 0.15 0.125], ...
                        'Enable', 'off', ...
                        'Tag', 'smoothtsgaussetb2');

                    hexprb = uicontrol('Style', 'radiobutton', ...
                        'String', 'Exponential method, windows size/ALPHA: ', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.4 0.9 0.125], ...
                        'Value', 0, ...
                        'Callback', 'ftsdatamenu(2, 3);', ...
                        'Tag', 'smoothtsexprb');
                    hexpetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'String', '5', ...
                        'Units', 'normal', ...
                        'Position', [0.76 0.405 0.15 0.125], ...
                        'Enable', 'off', ...
                        'Tag', 'smoothtsexpetb');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.175], ...
                        'Callback', 'ftsdatamenu(2, 4);', ...
                        'Tag', 'smoothtsokbutton');
                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.175], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'smoothtscancelbutton');
                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.175], ...
                        'Callback', 'doc smoothts', ...
                        'Tag', 'smoothtshelpbutton');
                elseif nargin == 2,
                    switch varargin{2},
                        case 1,   % Box method radiobutton callback
                            hboxrb     = findall(0, 'Tag', 'smoothtsboxrb');
                            hboxetb    = findall(0, 'Tag', 'smoothtsboxetb');
                            hgaussrb   = findall(0, 'Tag', 'smoothtsgaussrb');
                            hgaussetb1 = findall(0, 'Tag', 'smoothtsgaussetb1');
                            hgaussetb2 = findall(0, 'Tag', 'smoothtsgaussetb2');
                            hexprb     = findall(0, 'Tag', 'smoothtsexprb');
                            hexpetb    = findall(0, 'Tag', 'smoothtsexpetb');

                            if get(hboxrb, 'Value') == 1,
                                set(hboxetb, 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                                set([hgaussrb; hexprb], 'Value', 0);
                                set([hgaussetb1; hgaussetb2; hexpetb], 'Enable', 'off', ...
                                    'Backgroundcolor', get(0, 'DefaultUIControlBackgroundColor'));
                            elseif get(hboxrb, 'Value') == 0,
                                set(hboxrb, 'Value', 1);
                                set(hboxetb, 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                            end

                        case 2,   % Gaussian method radiobutton callback
                            hboxrb     = findall(0, 'Tag', 'smoothtsboxrb');
                            hboxetb    = findall(0, 'Tag', 'smoothtsboxetb');
                            hgaussrb   = findall(0, 'Tag', 'smoothtsgaussrb');
                            hgaussetb1 = findall(0, 'Tag', 'smoothtsgaussetb1');
                            hgaussetb2 = findall(0, 'Tag', 'smoothtsgaussetb2');
                            hexprb     = findall(0, 'Tag', 'smoothtsexprb');
                            hexpetb    = findall(0, 'Tag', 'smoothtsexpetb');

                            if get(hgaussrb, 'Value') == 1,
                                set([hgaussetb1; hgaussetb2], 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                                set([hboxrb; hexprb], 'Value', 0);
                                set([hboxetb; hexpetb], 'Enable', 'off', ...
                                    'Backgroundcolor', get(0, 'DefaultUIControlBackgroundColor'));
                            elseif get(hgaussrb, 'Value') == 0,
                                set(hgaussrb, 'Value', 1);
                                set([hgaussetb1; hgaussetb2], 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                            end

                        case 3,   % Exponential method radiobutton callback
                            hboxrb     = findall(0, 'Tag', 'smoothtsboxrb');
                            hboxetb    = findall(0, 'Tag', 'smoothtsboxetb');
                            hgaussrb   = findall(0, 'Tag', 'smoothtsgaussrb');
                            hgaussetb1 = findall(0, 'Tag', 'smoothtsgaussetb1');
                            hgaussetb2 = findall(0, 'Tag', 'smoothtsgaussetb2');
                            hexprb     = findall(0, 'Tag', 'smoothtsexprb');
                            hexpetb    = findall(0, 'Tag', 'smoothtsexpetb');

                            if get(hexprb, 'Value') == 1,
                                set(hexpetb, 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                                set([hgaussrb; hboxrb], 'Value', 0);
                                set([hgaussetb1; hgaussetb2; hboxetb], 'Enable', 'off', ...
                                    'Backgroundcolor', get(0, 'DefaultUIControlBackgroundColor'));
                            elseif get(hexprb, 'Value') == 0,
                                set(hexprb, 'Value', 1);
                                set(hexpetb, 'Enable', 'on', ...
                                    'Backgroundcolor', 'w', ...
                                    'String', '5');
                            end

                        case 4,   % OK pushbutton callback
                            hboxrb     = findall(0, 'Tag', 'smoothtsboxrb');
                            hgaussrb   = findall(0, 'Tag', 'smoothtsgaussrb');
                            hexprb     = findall(0, 'Tag', 'smoothtsexprb');

                            if get(hboxrb, 'Value') == 1,
                                hboxetb     = findall(0, 'Tag', 'smoothtsboxetb');
                                hboxetb_val = str2double(get(hboxetb, 'String'));
                                if isempty(hboxetb_val),
                                    hboxetb_val = 5;
                                end
                                smethod = 'b';
                                wsize   = hboxetb_val;
                                opt_param = {smethod, wsize};
                            elseif get(hgaussrb, 'Value') == 1,
                                hgaussetb1     = findall(0, 'Tag', 'smoothtsgaussetb1');
                                hgaussetb2     = findall(0, 'Tag', 'smoothtsgaussetb2');
                                hgaussetb1_val = str2double(get(hgaussetb1, 'String'));
                                hgaussetb2_val = str2double(get(hgaussetb2, 'String'));
                                if isempty(hgaussetb1_val),
                                    hgaussetb1_val = 5;
                                end
                                if isempty(hgaussetb2_val),
                                    hgaussetb2_val = 0.65;
                                end
                                smethod = 'g';
                                wsize   = hgaussetb1_val;
                                stdev   = hgaussetb2_val;
                                opt_param = {smethod, wsize, stdev};
                            elseif get(hexprb, 'Value') == 1,
                                hexpetb     = findall(0, 'Tag', 'smoothtsexpetb');
                                hexpetb_val = str2double(get(hexpetb, 'String'));
                                if isempty(hexpetb_val),
                                    hexpetb_val = 5;
                                end
                                smethod = 'e';
                                wsize   = hexpetb_val;
                                opt_param = {smethod, wsize};
                            end
                            closereq;

                            try
                                [ftsData, ftsName] = execftsdatafcn('smoothts', opt_param{:});

                            catch
                                errMsg = lasterror;
                                errorSmoothts = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Smooth Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'smooth');
                            updateftsguistatus(1, ['smoothts: ', deblank(MAT_data.desc)]);
                            drawnow;
                    end
                end

            case 3,   % LAGTS
                if nargin == 1,
                    hlagtsfig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Lag Time Series Data (lagts)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.4 0.4 0.2 0.15], ...
                        'HandleVisibility', 'callback', ...
                        'Tag', 'lagtsdlg');

                    hlpertb  = uicontrol('Style', 'text', ...
                        'String', 'Length of lag period: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.71 0.4 0.125], ...
                        'Tag', 'lagtslpertb');
                    hlperetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '1', ...
                        'Units', 'normal', ...
                        'Position', [0.45 0.725 0.15 0.125], ...
                        'Tag', 'lagtslperetb');
                    hpmodtb  = uicontrol('Style', 'text', ...
                        'String', 'Pad with: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.535 0.4 0.125], ...
                        'Tag', 'lagtspmodtb');
                    hpmodpm = uicontrol('Style', 'popupmenu', ...
                        'BackgroundColor', 'w', ...
                        'String', {'Value'; 'NaN'; 'Inf'}, ...
                        'Value', 1, ...
                        'Callback', ['hpmodpm  = findall(0, ''Tag'', ''lagtspmodpm''); ', ...
                        'hpmodetb = findall(0, ''Tag'', ''lagtspmodetb''); ', ...
                        'if get(hpmodpm, ''Value'') ~= 1, ', ...
                        '   set(hpmodetb, ''BackgroundColor'', get(0, ''DefaultUIControlBackgroundColor''), ', ...
                        '                 ''Enable'', ''off''); ', ...
                        '   if get(hpmodpm, ''Value'') == 2, ', ...
                        '      set(hpmodetb, ''String'', ''NaN''); ', ...
                        '   elseif get(hpmodpm, ''Value'') == 3, ', ...
                        '      set(hpmodetb, ''String'', ''Inf''); ', ...
                        '   end; ', ...
                        'elseif get(hpmodpm, ''Value'') == 1, ', ...
                        '   set(hpmodetb, ''BackgroundColor'', ''w'', ', ...
                        '                 ''Enable'', ''on'', ', ...
                        '                 ''String'', ''0''); ', ...
                        'end;'], ...
                        'Units', 'normal', ...
                        'Position', [0.45 0.550 0.25 0.125], ...
                        'Tag', 'lagtspmodpm');
                    hpmodetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '0', ...
                        'Units', 'normal', ...
                        'Position', [0.725 0.550 0.15 0.125], ...
                        'Tag', 'lagtspmodetb');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.175], ...
                        'Callback', 'ftsdatamenu(3, 1)', ...
                        'Tag', 'lagtsokbutton');
                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.175], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'lagtscancelbutton');
                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.175], ...
                        'Callback', 'doc lagts', ...
                        'Tag', 'lagtshelpbutton');
                elseif nargin == 2,
                    switch varargin{2},
                        case 1,
                            hlperetb_val  = str2double(get(findall(0, 'Tag', 'lagtslperetb'), 'String'));
                            hpmodetb_val  = str2double(get(findall(0, 'Tag', 'lagtspmodetb'), 'String'));
                            if isempty(hlperetb_val),
                                hlperetb_val = 1;
                            end
                            if isempty(hpmodetb_val),
                                hpmodetb_val = 0;
                            end
                            opt_param = {hlperetb_val, hpmodetb_val};
                            closereq;

                            try
                                [ftsData, ftsName] = execftsdatafcn('lagts', opt_param{:});

                            catch
                                errMsg = lasterror;
                                errorLagts = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Lag Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'lagts');
                            updateftsguistatus(1, ['lagts: ', deblank(MAT_data.desc)]);
                            drawnow;
                    end
                end

            case 4,   % LEADTS
                if nargin == 1,
                    hleadtsfig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Lead Time Series Data (leadts)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.4 0.4 0.2 0.15], ...
                        'HandleVisibility', 'callback', ...
                        'Tag', 'leadtsdlg');

                    hlpertb  = uicontrol('Style', 'text', ...
                        'String', 'Length of lead period: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.71 0.5 0.125], ...
                        'Tag', 'leadtslpertb');
                    hlperetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '1', ...
                        'Units', 'normal', ...
                        'Position', [0.55 0.725 0.15 0.125], ...
                        'Tag', 'leadtslperetb');
                    hpmodtb  = uicontrol('Style', 'text', ...
                        'String', 'Pad with: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.535 0.4 0.125], ...
                        'Tag', 'leadtspmodtb');
                    hpmodpm = uicontrol('Style', 'popupmenu', ...
                        'BackgroundColor', 'w', ...
                        'String', {'Value'; 'NaN'; 'Inf'}, ...
                        'Value', 1, ...
                        'Callback', ['hpmodpm  = findall(0, ''Tag'', ''leadtspmodpm''); ', ...
                        'hpmodetb = findall(0, ''Tag'', ''leadtspmodetb''); ', ...
                        'if get(hpmodpm, ''Value'') ~= 1, ', ...
                        '   set(hpmodetb, ''BackgroundColor'', get(0, ''DefaultUIControlBackgroundColor''), ', ...
                        '                 ''Enable'', ''off''); ', ...
                        '   if get(hpmodpm, ''Value'') == 2, ', ...
                        '      set(hpmodetb, ''String'', ''NaN''); ', ...
                        '   elseif get(hpmodpm, ''Value'') == 3, ', ...
                        '      set(hpmodetb, ''String'', ''Inf''); ', ...
                        '   end; ', ...
                        'elseif get(hpmodpm, ''Value'') == 1, ', ...
                        '   set(hpmodetb, ''BackgroundColor'', ''w'', ', ...
                        '                 ''Enable'', ''on'', ', ...
                        '                 ''String'', ''0''); ', ...
                        'end;'], ...
                        'Units', 'normal', ...
                        'Position', [0.45 0.550 0.25 0.125], ...
                        'Tag', 'leadtspmodpm');
                    hpmodetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '0', ...
                        'Units', 'normal', ...
                        'Position', [0.725 0.550 0.15 0.125], ...
                        'Tag', 'leadtspmodetb');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.175], ...
                        'Callback', 'ftsdatamenu(4, 1)', ...
                        'Tag', 'leadtsokbutton');
                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.175], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'leadtscancelbutton');
                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.175], ...
                        'Callback', 'doc leadts', ...
                        'Tag', 'leadtshelpbutton');
                elseif nargin == 2,
                    switch varargin{2},
                        case 1,
                            hlperetb_val  = str2double(get(findall(0, 'Tag', 'leadtslperetb'), 'String'));
                            hpmodetb_val  = str2double(get(findall(0, 'Tag', 'leadtspmodetb'), 'String'));
                            if isempty(hlperetb_val),
                                hlperetb_val = 1;
                            end
                            if isempty(hpmodetb_val),
                                hpmodetb_val = 0;
                            end
                            opt_param = {hlperetb_val, hpmodetb_val};
                            closereq;

                            try
                                [ftsData, ftsName] = execftsdatafcn('leadts', opt_param{:});

                            catch
                                errMsg = lasterror;
                                errorLeadts = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Lead Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'leadts');
                            updateftsguistatus(1, ['leadts: ', deblank(MAT_data.desc)]);
                            drawnow;
                    end
                end

            case 5,   % FILTER
                if nargin == 1,
                    hfilterfig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Filter data (filter)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.35 0.4 0.3 0.2], ...
                        'HandleVisibility', 'on', ...
                        'Tag', 'filterdlg');

                    load filtertfeq.mat
                    heqimage  = image(filtertfeq, 'Visible', 'on');
                    axis image;
                    axis off;
                    heqimaxes = get(heqimage, 'Parent');
                    set(heqimaxes, 'Units', 'normal', ...
                        'Position', [0.05 0.3 0.9 1]);

                    hbcoeftb1 = uicontrol('Style', 'text', ...
                        'String', 'B coefficients: [ ', ...
                        'horizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.425 0.25 0.125], ...
                        'Tag', 'filterbcoeftb1');
                    hbcoefetb = uicontrol('Style', 'edit', ...
                        'backgroundColor', 'w', ...
                        'String', '-0.25   0.5   -0.25', ...
                        'Units', 'normal', ...
                        'Position', [0.3 0.45 0.3 0.115], ...
                        'Tag', 'filterbcoefetb');
                    hbcoeftb2 = uicontrol('Style', 'text', ...
                        'String', ' ]       e.g.: [-0.2 0.5 -0.2]', ...
                        'horizontalAlignment', 'left', ...
                        'Units', 'normal', ...
                        'Position', [0.6 0.425 0.3 0.125], ...
                        'Tag', 'filterbcoeftb2');
                    hacoeftb1 = uicontrol('Style', 'text', ...
                        'String', 'A coefficients: [ ', ...
                        'horizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.05 0.275 0.25 0.125], ...
                        'Tag', 'filteracoeftb1');
                    hacoefetb = uicontrol('Style', 'edit', ...
                        'backgroundColor', 'w', ...
                        'String', '1 0 0', ...
                        'Units', 'normal', ...
                        'Position', [0.3 0.3 0.3 0.115], ...
                        'Tag', 'filteracoefetb');
                    hacoeftb2 = uicontrol('Style', 'text', ...
                        'String', ' ]       e.g.: [1 0 0]', ...
                        'horizontalAlignment', 'left', ...
                        'Units', 'normal', ...
                        'Position', [0.6 0.275 0.3 0.125], ...
                        'Tag', 'filteracoeftb2');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.15], ...
                        'Callback', 'ftsdatamenu(5, 1)', ...
                        'Tag', 'filterokbutton');
                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.15], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'filtercancelbutton');
                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.15], ...
                        'Callback', 'doc fints/filter', ...
                        'Tag', 'filterhelpbutton');
                elseif nargin == 2,
                    switch varargin{2},
                        case 1,
                            hbcoefetb_val = str2double(get(findall(0, 'Tag', 'filterbcoefetb'), 'String'));
                            hacoefetb_val = str2double(get(findall(0, 'Tag', 'filteracoefetb'), 'String'));
                            if isempty(hbcoefetb_val),
                                hbcoefetb_val = [-0.2 0.5 -0.2];
                            end
                            if isempty(hacoefetb_val),
                                hacoefetb_val = 1;
                            end
                            opt_param = {hbcoefetb_val, hacoefetb_val};
                            closereq;

                            try
                                ftsData = filter(opt_param{:}, MAT_data);

                            catch
                                errMsg = lasterror;
                                errorFilter = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Filter Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            ftsName = ['filter_', data_names];
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'filter');
                            updateftsguistatus(1, ['filter: ', deblank(MAT_data.desc)]);
                            drawnow;
                    end
                end

            case 6,   % BOXCOX
                try
                    [ftsData, ftsName] = execftsdatafcn('boxcox');

                catch
                    errMsg = lasterror;
                    errorBoxcox = errordlg(cleanerrormsg(errMsg.message), ...
                        'FTSGUI (Box-Cox Transformation) error', 'modal');

                    ftsData = []; ftsName = [];
                    return
                end
                hpfig = displayftsfcnresult(ftsData, ftsName, 'boxcox');
                updateftsguistatus(1, ['boxcox: ', deblank(MAT_data.desc)]);
                ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                drawnow;

            case 7,   % RESAMPLETS
                if nargin == 2,
                    hresamplefig = figure('Color', get(0, 'DefaultUIControlBackgroundColor'), ...
                        'NumberTitle', 'off', ...
                        'MenuBar', 'none', ...
                        'Name', 'Resample Time Series Data (resamplets)', ...
                        'Resize', 'off', ...
                        'WindowStyle', 'modal', ...
                        'Units', 'normal', ...
                        'Position', [0.4 0.4 0.2 0.15], ...
                        'HandleVisibility', 'callback', ...
                        'Tag', 'resampletsdlg');

                    hnpertb  = uicontrol('Style', 'text', ...
                        'String', 'Number of sampling periods: ', ...
                        'HorizontalAlignment', 'right', ...
                        'Units', 'normal', ...
                        'Position', [0.1 0.535 0.5 0.125], ...
                        'Tag', 'resampletsnpertb');
                    hnperetb = uicontrol('Style', 'edit', ...
                        'BackgroundColor', 'w', ...
                        'String', '2', ...
                        'Units', 'normal', ...
                        'Position', [0.6 0.550 0.15 0.125], ...
                        'Tag', 'resampletsnperetb');

                    hokbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'OK', ...
                        'Units', 'normal', ...
                        'Position', [0.10 0.075 0.2 0.175], ...
                        'Callback', 'ftsanalysismenu(7, 1)', ...
                        'Tag', 'resampletsokbutton');
                    hcancelbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Cancel', ...
                        'Units', 'normal', ...
                        'Position', [0.40 0.075 0.2 0.175], ...
                        'Callback', 'closereq;', ...
                        'Tag', 'resampletscancelbutton');
                    hhelpbutton = uicontrol('Style', 'pushbutton', ...
                        'String', 'Help', ...
                        'Units', 'normal', ...
                        'Position', [0.70 0.075 0.2 0.175], ...
                        'Callback', 'doc resamplets', ...
                        'Tag', 'resampletshelpbutton');
                elseif nargin == 2,
                    switch varargin{2},
                        case 1,
                            hnperetb_val  = str2double(get(findall(0, 'Tag', 'resampletsnperetb'), 'String'));
                            if isempty(hnperetb_val),
                                hnperetb_val = 2;
                            end
                            opt_param = hnperetb_val;
                            closereq;

                            try
                                [ftsData, ftsName] = execftsdatafcn('resamplets', opt_param);

                            catch
                                errMsg = lasterror;
                                errorResamplets = errordlg(cleanerrormsg(errMsg.message), ...
                                    'FTSGUI (Resample Data) error', 'modal');

                                ftsData = []; ftsName = [];
                                return
                            end
                            hpfig = displayftsfcnresult(ftsData, ftsName, 'resamplets');
                            updateftsguistatus(1, ['resamplets: ', deblank(MAT_data.desc)]);
                            drawnow;
                    end
                end

            case 8,   % CONVERTTO
                switch varargin{2},
                    case 1,   % To Daily
                        try
                            [ftsData, ftsName] = execftsdatafcn('todaily');

                        catch
                            errMsg = lasterror;
                            errorTodaily = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Daily) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'todaily');
                        updateftsguistatus(1, ['todaily: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    case 2,   % To Weekly
                        try
                            [ftsData, ftsName] = execftsdatafcn('toweekly');

                        catch
                            errMsg = lasterror;
                            errorToweekly = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Weekly) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'toweekly');
                        updateftsguistatus(1, ['toweekly: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    case 3,   % To Monthly
                        try
                            [ftsData, ftsName] = execftsdatafcn('tomonthly');

                        catch
                            errMsg = lasterror;
                            errorTomonthly = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Monthly) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'tomonthly');
                        updateftsguistatus(1, ['tomonthly: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    case 4,   % To Quarterly
                        try
                            [ftsData, ftsName] = execftsdatafcn('toquarterly');

                        catch
                            errMsg = lasterror;
                            errorToquarterly = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Quarterly) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'quarterly');
                        updateftsguistatus(1, ['toquarterly: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    case 5,   % To Semi-annual
                        try
                            [ftsData, ftsName] = execftsdatafcn('tosemi');

                        catch
                            errMsg = lasterror;
                            errorTosemi = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Semi-annual) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'semiannual');
                        updateftsguistatus(1, ['tosemi: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    case 6,   % To Annual
                        try
                            [ftsData, ftsName] = execftsdatafcn('toannual');

                        catch
                            errMsg = lasterror;
                            errorToannual = errordlg(cleanerrormsg(errMsg.message), ...
                                'FTSGUI (To Anual) error', 'modal');

                            ftsData = []; ftsName = [];
                            return
                        end
                        hpfig = displayftsfcnresult(ftsData, ftsName, 'annual');
                        updateftsguistatus(1, ['toannual: ', deblank(MAT_data.desc)]);
                        ftsfilemenu(1, 3, {ftsName, ftsData.desc})
                        drawnow;

                    otherwise,
                        errordlg('Invalid Data menu choice.',' Error', 'modal');
                end   % End of SWITCH VARARGIN{2} block.

            otherwise,
                errordlg('Valid flags are 1 thru 8.  Thank you...', 'modal');

        end   % End of SWITCH VARARGIN{1} block.

    otherwise,
        errordlg('Invalid number of input arguments.', 'FTSDATAMENU:', 'modal');

end   % End of SWITCH NARGIN block.

% [EOF]
