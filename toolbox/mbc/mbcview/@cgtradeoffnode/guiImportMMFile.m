function [obj, OK] = guiImportMMFile(obj, file)
%GUIIMPORTMMFILE Display dialog for importing a multimodel tradeoff file
%
%  [OBJ, OK] = GUIIMPORTMMFILE(OBJ, FILE) loads the multimodel file FILE
%  and displays a dialog for editing the tables and models that will be
%  created.

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.1.6.3 $    $Date: 2004/04/04 03:36:31 $ 

hFig = xregdialog('Name', 'Import Multimodel Tradeoff File', ...
    'MinimumSize', [300 200], ...
    'Pointer', 'watch');
xregcenterfigure(hFig, [540 600]);

% Create basic buttons 
hOK = uicontrol('style', 'pushbutton', ...
    'parent', hFig, ...
    'string', 'OK', ...
    'enable', 'off', ...
    'callback', 'set(gcbf, ''tag'', ''ok'', ''visible'', ''off'');');
hCancel = uicontrol('style', 'pushbutton', ...
    'parent', hFig, ...
    'string', 'Cancel', ...
    'enable', 'off', ...
    'callback', 'set(gcbf, ''visible'', ''off'');');
hHelp = cghelpbutton(hFig, 'CGTRADEOFFMMIMPORT');

% Temporary text item for loading feedback
hText = uicontrol('Parent', hFig, ...
    'style', 'text', ...
    'String', 'Loading models from multimodel file...', ...
    'Fontweight', 'bold', ...
    'enable', 'inactive', ...
    'horizontalalignment', 'left');
buttonlyt = xreggridbaglayout(hFig, ...
    'packstatus', 'off', ...
    'dimension', [1 4], ...
    'colsizes', [-1 65 65 65], ...
    'gapx', 7, ...
    'elements', {[], hOK, hCancel, hHelp});
mainlyt = xreggridbaglayout(hFig, ...
    'dimension', [3 3], ...
    'colsizes', [210 300 -1], ...
    'rowsizes', [-1 -1 25], ...
    'rowratios', [200 255 0], ...
    'gapx', 10, ...
    'gapy', 10, ...
    'Border', [7 7 7 10], ...
    'mergeblock', {[1 1], [1 3]}, ...
    'mergeblock', {[2 2], [2 3]}, ...
    'mergeblock', {[3 3], [1 3]}, ...
    'elements', {hText, [], buttonlyt});


hFig.LayoutManager = mainlyt;
set(mainlyt, 'packstatus', 'on');
hFig.Visible = 'on'; drawnow('expose');
OK = false;

% Create the multimodel loading helper object
hLoader = cgtradeoffgui.mmeditor;
[OK, msg] = load(hLoader, file);
if ~OK
    % Error during load: inform the user and terminate the dialog
    hError = errordlg(sprintf(['Unable to read multimodel data from file ' ...
        '%s:\n%s'], file, msg) , ...
        'Multimodel Import Error', 'modal');
    waitfor(hError);
    delete(hFig);
    delete(hLoader);
    return
end

% Create multimodel editing objects
hTableSetup = cgtradeoffgui.mmTableSetupView('Parent', hFig, ...
    'Visible', 'off', ...
    'MessageService', hLoader);
hModelSetup = cgtradeoffgui.mmModelSetupView('Parent', hFig, ...
    'Visible', 'off', ...
    'MessageService', hLoader);
hSiteGraph = cgtradeoffgui.mmSiteGraphView('Parent', hFig, ...
    'Visible', 'off', ...
    'MessageService', hLoader);
frame1 = hModelSetup.createTitledPane;
frame2 = hTableSetup.createTitledPane;

% Insert objects into display and make them visible
set(mainlyt, 'elements', {hSiteGraph, frame1, buttonlyt, [], frame2});
delete(hText);
set(mainlyt, 'visible', 'on');

% Enable OK/Cancel
set([hOK;hCancel], 'enable', 'on');

% Set normal pointer
hFig.Pointer = 'arrow';

% Block code execution while dialog is active
hFig.showDialog(hOK);

tg = get(hFig, 'tag');
if strcmp(tg, 'ok')
    % Ask load helper to update tradeoff object 
    hLoader.addToTradeoff(address(obj), true);
    
    % Get latest heap copy of object for output
    obj = info(obj);
    OK = true;
else
    OK = false;
end

delete(hFig);
delete(hLoader);
