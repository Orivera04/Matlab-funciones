function [data,factors,specialPlots,olIndex]= diagnosticStats(m,X,Y)
% xreglinear/diagnosticStats
% 
% [data,factors, specialPlots]= diagnosticStats(m)
%
% This is an overloaded function to return
% stats and factors for the diagnostic plots

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.
%   $Revision: 1.4.4.3 $  $Date: 2004/02/09 07:49:24 $



% This gets the standard statistics
p= get(MBrowser,'CurrentNode');
if nargin < 3
   [X,Y]= getdata(p.info);
end	
[Xm,Ym,DataOk]= checkdata(m,X,Y);

dstats= stats(m,'diagnostics');
[cookd,...
      leverage,...
      residuals,...
      response,...
      Xv,...
      studres,...
      yhat,...
      ci_hi,...
      ci_lo]= deal(dstats{:});
% Plot indexes.
obs=[1:length(response)]';
% Get the global variables.
Xm= invcode(m,Xm);

data= [yhat,...
      studres,...
      residuals,...
      cookd,...
      leverage,...
      obs,...  
      response,...
      Xm];

% This returns the names of the statistics
sname = InputLabels(m);
snameY= ResponseLabel(m);
% make it a row
[r,c]= size(sname);
if r>c
   sname= sname';
end

if isTransOneSide(m) |  isTBS(m)
    snameY= [snameY ' (transformed)',];
    factors={['Predicted ',snameY],...
            'Studentized residuals',...
            'Residuals (transformed)',...
            'Cook''s distance',...
            'Leverage',...
            'Obs. number',...
            snameY};
else
    factors={['Predicted ',snameY],...
            'Studentized residuals',...
            'Residuals',...
            'Cook''s distance',...
            'Leverage',...
            'Obs. number',...
            snameY};
end

factors= [factors,sname];

% This is a list of special plots. This can be empty
specialPlots= {'Predicted/Observed',...
      'Normal plot'};

% outlier index.
olIndex= outliers(m,data,factors);
