function fastawrite(filename,header,seq)
%FASTAWRITE writes FASTA format file.
%
%   FASTAWRITE(FILENAME, DATA) writes the contents of DATA to file FILENAME
%   in the FASTA format. DATA can be a sequence (or sequences) represented
%   as a character array, a sequence object, a structure containing the
%   fields sequence and header, or a GenBank/GenPept structure.
%
%   FASTAWRITE(FILENAME, HEADER, SEQ) writes a FASTA file with header
%   information HEADER and sequence SEQ.
%
%
%   Example:
%
%      %get the sequence for the human p53 gene from GenBank.
%      seq = getgenbank('NM_000546')
%
%      %find the CDS line in the FEATURES information.
%      cdsline = strmatch('CDS',seq.Features)
%
%      %read the coordinates of the coding region.
%      [start,stop] = strread(seq.Features(cdsline,:),'%*s%d..%d')
%
%      %extract the coding region.
%      codingSeq = seq.Sequence(start:stop)
%
%      %write just the coding region to a FASTA file.
%      fastawrite('p53coding.txt','Coding region of p53 gene',codingSeq);
%
%      %You can also write multiple sequences from a structure with
%      %FASTAWRITE.
%      data(1).Sequence = 'ACACAGGAAA'
%      data(1).Header = 'First sequence'
%      data(2).Sequence = 'ACACAGGAAA'
%      data(2).Header = 'Second sequence'
%      fastawrite('twoSequences.fa',data)
%      type('twoSequences.fa')
%
%   See also FASTAREAD.

%   Copyright 2003-2004 The MathWorks, Inc.
%   $Revision: 1.11.6.6 $  $Date: 2004/03/22 23:53:24 $

%FASTA format specified here:
%http://www.ncbi.nlm.nih.gov/BLAST/fasta.html

if nargin < 2
    error('Bioinfo:NotEnoughInputs','Not enough input arguments.');
end

if ~ischar(filename),
    error('Bioinfo:FilenameMustBeString','FILENAME must be a string.');
end

fid = fopen(filename,'wt');

if fid == (-1)
    error('Bioinfo:CouldNotOpenFile','Could not open file %s.', filename);
end

try
    if nargin == 2
        % see if we have a sequence or a structure
        if ischar(header)
            seq = header;
            header = sprintf('Generated by MATLAB %s',datestr(now));
            numSequences = size(seq,1);
        elseif isstruct(header)
            try
                seq = char(header.Sequence);
            catch
                error('Bioinfo:BadStructure','Data structure does not have field ''Sequence''.');
            end
            try
                numSequences = size(seq,1);
                if isfield(header,'Header')
                    header = char(header.Header);
                else
                    for i=1:numSequences
                        newheader{i} = ['gi|' header(i).GI '|gb|' header(i).Version '| ' header(i).Definition];
                    end
                    header = char(newheader);
                end
            catch
                error('Bioinfo:BadStructure','Data structure does not have field ''Header'' or GenBank/GenPept data.');
            end
        else
            error('Bioinfo:BadData','Data is not a valid sequence or structure.')
        end
    else
        seq = char(seq);
        numSequences = size(seq,1);
        header = char(header);
    end
    
    for i=1:numSequences
        currseq = deblank(char(seq(i,:)));
        currheader = deblank(char(header(i,:)));
        len = size(currseq,2);
        if len == 0
            error('Bioinfo:EmptySeq','Sequence is empty.');
        end
        
        fprintf(fid,'>%s\n',currheader);
        
        maxcols = 70; % NCBI uses 70 columns for their FASTA files
        for line = 1:ceil(len/maxcols);
            start = ((line - 1) * maxcols) + 1;
            stop = min((line * maxcols),len);
            fprintf(fid,'%s\n',currseq(start:stop));
        end
        fprintf(fid,'\n');
    end
    fclose(fid);
catch
    % close and delete the file if there was an error
    fclose(fid)
    delete(filename);
    
    %rethrow the error
    rethrow(lasterror);
end
