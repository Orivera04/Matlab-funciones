function lyt=designgui(des,action,figh,p,varargin)
% DES_RESPSURF/DESIGNGUI   Design checking GUI creation
%   H=DESIGNGUI(D,'create',FIGH,OBJH,POS) creates a gui for creating
%   the design matrix in the figure FIGH, using the object in
%   OBJH for callbacks and contained within the area POS.
%   The output H is a handle pointing to the userdata for the
%   gui.

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.


%   $Revision: 1.2.2.3 $  $Date: 2004/02/09 07:03:30 $



switch lower(action)
case 'layout'
   lyt=i_createlyt(figh,p,varargin{:});
case 'popupinfo'
   i_newwind(figh,p);
case 'finalise'
   lyt='';
end
return


function lyt=i_createlyt(figh,p,varargin)

if ~isa(figh,'xregcontainer');
   mnm=mfilename;
   [pth,mnm,ext,ver]=fileparts(mnm);
   
   % currently just display a mvgraph1d object :)
   ud.gr1=mvgraph1d('visible','off');
   
   ud.optimtp=uicontrol('parent',figh,...
      'style','text',...
      'horizontalalignment','left',...
      'visible','off',...
      'userdata',des_respsurf);
   txt1=uicontrol('parent',figh,...
      'style','text',...
      'string','D-optimality value:',...
      'horizontalalignment','left',...
      'visible','off');
   txt2=uicontrol('parent',figh,...
      'style','text',...
      'string','V-optimality value:',...
      'horizontalalignment','left',...
      'visible','off');
   txt3=uicontrol('parent',figh,...
      'style','text',...
      'string','G-optimality value:',...
      'horizontalalignment','left',...
      'visible','off');
   txt4=uicontrol('parent',figh,...
      'style','text',...
      'visible','off');
   ud.dopt=uicontrol('parent',figh,...
      'style','text',...
      'string','......',...
      'horizontalalignment','left',...
      'visible','off');
   ud.vopt=uicontrol('parent',figh,...
      'style','text',...
      'string','......',...
      'horizontalalignment','left',...
      'visible','off');
   ud.gopt=uicontrol('parent',figh,...
      'style','text',...
      'string','......',...
      'horizontalalignment','left',...
      'visible','off');
   
   ims=load('wiz_images.mat');
   ud.gr2d=uicontrol('parent',figh,...
      'style','pushbutton',...
      'cdata',ims.im2d,...
      'visible','off',...
      'position',[0 0 60 60],...
      'interruptible','off');
   ud.gr3d=uicontrol('parent',figh,...
      'style','pushbutton',...
      'cdata',ims.im3d,...
      'visible','off',...
      'position',[0 0 60 60],...
      'interruptible','off');
   ud.gr4d=uicontrol('parent',figh,...
      'style','pushbutton',...
      'cdata',ims.im4d,...
      'visible','off',...
      'position',[0 0 60 60],...
      'interruptible','off');
   ud.pev=uicontrol('parent',figh,...
      'style','pushbutton',...
      'cdata',ims.pev,...
      'visible','off',...
      'position',[0 0 60 60],...
      'interruptible','off');
   
   ud.pointer=p;
   ud.figure=figh;
   
   udht=sprintf('%20.15f',txt1);
   objht=sprintf('%20.15f',ud.optimtp);
   
   cbstr=[mnm '(get(' objht ',''userdata''),''popupinfo'',' udht ','];
   set(ud.gr2d,'callback',[cbstr '''2d'');']);
   set(ud.gr3d,'callback',[cbstr '''3d'');']);
   set(ud.gr4d,'callback',[cbstr '''4d'');']);
   set(ud.pev,'callback',[cbstr '''pev'');']);
   
   grd=xreggridlayout(figh,'correctalg','on','dimension',[4 2],...
      'elements',{ud.optimtp,txt1,txt2,txt3,txt4,ud.dopt,ud.vopt,ud.gopt},...
      'packstatus','off');
   frm1=xregframetitlelayout(figh,'title','Final Design',...
      'visible','off','center',grd,'innerborder',[10 10 10 10],...
      'border',[0 0 5 0]);
   flw=xregflowlayout(figh,'orientation','left/center',...
      'elements',{ud.gr2d,ud.gr3d,ud.gr4d,ud.pev},'gap',15,...
      'border',[-15 0 0 0]);
   frm2=xregframetitlelayout(figh,'title','Additional Information',...
      'innerborder',[10 10 10 20],'border',[5 0 0 0],'center',flw,...
      'visible','off');
   spl=xregsplitlayout(figh,'resizable','off','left',frm1,'right',frm2,...
      'split',[.5 .5],'border',[0 10 0 0]);
   lyt=xregborderlayout(figh,'north',spl,'center',ud.gr1,...
      'innerborder',[0 0 0 105]);
   ud=i_setvalues(ud);
   set(txt1,'userdata',ud);
else
   lyt=figh;
   el=get(get(get(get(lyt,'north'),'left'),'center'),'elements');
   el=el{2};
   ud=get(el,'userdata');
   ud.pointer=p;
   ud=i_setvalues(ud);
   set(el,'userdata',ud);
end
return



function ud=i_setvalues(ud)
des=ud.pointer.info;
str=optimisetype(des);
if isempty(str)
   str = 'not optimal';
end
set(ud.optimtp,'string',['Design is ' str '.']);
set(ud.dopt,'string',dcalc(des));
set(ud.vopt,'string',vcalc(des));
set(ud.gopt,'string',gcalc(des));
fs=factorsettings(des);
fs=invcode(model(des),fs);
set(ud.gr1,'data',fs,'limits',designlimits(des,'natural'),'factors',factors(des));
ud.pointer.info=des;
return



function i_newwind(udh,tp)
ud=get(udh,'userdata');
switch tp
case '2d'
   previewdesign(ud.pointer.info,2,'windowstyle','modal');
case '3d'
   previewdesign(ud.pointer.info,3,'windowstyle','modal');
case '4d'
   previewdesign(ud.pointer.info,4,'windowstyle','modal');
case 'pev'
   h=mv_PEVView('create',ud.pointer.info);
   set(h,'windowstyle','modal');
end
return

   
