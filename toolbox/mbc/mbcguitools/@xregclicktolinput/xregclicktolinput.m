function obj = xregclicktolinput(varargin)
%%xregtextinput Constructor for the text control/input object.
%%   Usage:
%%   C=xregclicktolinput
%%   C=xregclicktolinput(FIG)
%%   C=xregclicktolinput('Property1',Value1,...)
%%   C=xregclicktolinput(FIG,'Property1',Value1,...)

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.


%   $Revision: 1.4.2.3 $  $Date: 2004/04/04 03:29:09 $

obj.text = [];
obj.clickedit=[];
obj.tolerancetext = [];
obj.tolerance = [];
obj.layout=[];

if nargin>0 & ishandle(varargin{1}) & strcmp(get(varargin{1},'type'),'figure')
   fh=varargin{1};
   varargin(1)=[];
else
   fh=gcf;
end

%% default position; set called at end if position input
pos = [10 10 200 17];
bgc = get(fh,'color');

obj.text = xreguicontrol('style','text',...
   'visible','off',...
   'parent',fh,...
   'string','xregclickinput',...
   'horizontalAlignment','left',...
   'backgroundcolor',bgc);
obj.clickedit = xregGui.clickedit(fh,...
   'visible','off',...
   'style','leftright',...
   'fontsize',get(fh,'defaultuicontrolfontsize'),...
   'position',pos);
obj.tolerancetext = xreguicontrol('style','text',...
   'visible','off',...
   'parent',fh,...
   'string','Tol:',...
   'horizontalAlignment','right',...
   'backgroundcolor',bgc);
obj.tolerance = xreguicontrol('style','edit',...
   'visible','off',...
   'parent',fh,...
   'string','',...
   'userdata','',...
   'backgroundcolor','w');
obj.layout = xreggridbaglayout(fh,...
   'dimension',[2 4],....
   'elements',{[],obj.text,...
      obj.clickedit,[],...
      [],obj.tolerancetext,...
      obj.tolerance,[]},...
   'mergeblock',{[1 2],[2 2]},...
   'mergeblock',{[1 2],[4 4]},...
   'rowsizes',[-1 17],...
   'colsizes',[-1,70,20,40],...
   'gapx',5,...
   'position',pos);

obj = class(obj,'xregclicktolinput');

set(obj.tolerance,'callback',{@i_toleranceCb,obj.clickedit});

if length(varargin)
   obj=set(obj,varargin{:});
end

function i_toleranceCb(src,event,clickedit)
%% check edit contents are sensible
%% then call the clickedit callback if there is one

tol= get(src,'string');
oldTol = get(src,'userdata');
if isempty(str2num(tol))
   %% return to last sensible tolerance
   set(src,'string',oldTol);
else
   %% keep new tolerance in userdata
   set(src,'userdata',tol);
   % call clickedit callback
   cb=get(clickedit,'callback');
   if ~isempty(cb)
      xregcallback(cb);
   end
end