%  orthog4.m
% Matlab file for Part 4 of the Orthogonality module

disp('*********************************************')
disp('Part 4:  Orthogonal matrices ')
disp('*********************************************')
disp('  ')    

    format short

    disp('Enter the commands to generate four random')
    disp('vectors in 4-space.')
    disp(' ')
    disp('Enter: ')
    disp(' ')
    disp(' v1 = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' v2 = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' v3 = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' v4 = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;   
    disp(' ')
    
    disp('----------------------------------------------')
    disp('Step 1:')
    disp('Now we use the standard Gram-Schmidt process')
    disp('on the set v1, v2, v3, and v4 to form an ')
    disp('orthogonal set of vectors. ')
    disp(' ')
    disp('Notice that each stage in the construction')
    disp('we are substracting from v(i) its projection ')
    disp('on the subspace spanned by the previously ')
    disp('computed u(i)''s. ')
    disp(' ')
    disp('Enter these commands one at a time and think ')
    disp('about what is being calculated in each one: ')
    disp(' ')
    disp(' u1 = v1   ')
    disp(' ')
    disp(' u2 = v2 - (dot(v2,u1)/dot(u1,u1))*u1 ')
    disp(' ')
    disp(' u3 = v3 - (dot(v3,u1)/dot(u1,u1))*u1 - ... ')
    disp('           (dot(v3,u2)/dot(u2,u2))*u2  ')
    disp(' ')
    disp(' u4 = v4 - (dot(v4,u1)/dot(u1,u1))*u1 - ... ')
    disp('           (dot(v4,u2)/dot(u2,u2))*u2 - ... ')
    disp('           (dot(v4,u3)/dot(u3,u3))*u3 ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;   
    disp(' ')
    
    disp('----------------------------------------------')
    disp('Step 1 (cont.):')
    disp('Now we make these unit vectors by dividing each ')
    disp('by its length.  The matrix A is formed by the ')
    disp('resulting column vectors. ')
    disp('  (Note that MATLAB has a command that forms ')
    disp('   the A matrix automatically from the v''s.) ')   
    disp(' A1 = u1/norm(u1); ')
    disp(' A2 = u2/norm(u2); ')
    disp(' A3 = u3/norm(u3); ')
    disp(' A4 = u4/norm(u4); ')
    disp(' A = [A1, A2, A3, A4] ')
    disp(' ')
    disp(' [Q,R] = qr([v1, v2, v3, v4], 0); ')
    disp(' Q ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;   
    disp(' ')
    
    disp('----------------------------------------------')
    disp('Step 3 and 4: ')
    disp('Enter the commands to generate random 4-vectors')
    disp('x and y.  Then compute dot(x,y) and dot(A*x,A*y),')
    disp('norm(x) and norm(A*x). ')
    disp('State your deductions by using MATLAB comments.')
    disp(' ')
    disp('Enter: ')
    disp(' ')
    disp(' x = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' y = floor( 100*(2*rand(4,1)-1) ) ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;   
    disp(' ')

    disp('----------------------------------------------')
    disp('Steps 5 thru 7: ')
    disp('The following commands compute the eigenvalues ')
    disp('of A and their absolute values, as well as the ')
    disp('determinant of A.')
    disp(' ')
    disp('Enter: ')
    disp(' ')
    disp(' eivals = eig(A) ')
    disp(' abs(eivals) ')
    disp(' det(A) ')
    disp(' ')
    disp('----------------------------------------------')
    disp('Answer the questions in steps 5 thru 7 by ')
    disp('using MATLAB comments in your diary file. ')
    disp(' ')
    disp(' ')
    disp('When you have finished, in order to go on to ')
    disp('part 5 of this module, type: orthog5 ')
    disp(' ')