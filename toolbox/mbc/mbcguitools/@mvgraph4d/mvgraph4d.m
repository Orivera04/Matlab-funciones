function gr=mvgraph4d(varargin)
%MVGRAPH4D   Graph4d constructor function
%   Constructor function for a graph4d object.
%   Usage:
%   GR=MVGRAPH4D
%   GR=MVGRAPH4D(FIG)
%   GR=MVGRAPH4D('Property1',Value1,...)
%   GR=MVGRAPH4D(FIG,'Property1',Value1,...)

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.4.2.2 $  $Date: 2004/02/09 07:19:47 $

if nargin>0 & ishandle(varargin{1})
   figh=varargin{1};
else
   figh=gcf;
end
set(figh,'renderer','zbuffer');

% initial position
pos=[30 30 500 360];

% DATA STORAGE.  The different bits of data are stored as follows:
s.data = [];
s.factors = {};
s.limits = {};
s.position = pos;
s.visible = 'on';
s.factorselection = 0; % normal
s.type = 'scatter';
s.frame = 1;
s.rangepositions = [0 0.5 1];
s.datatags = 0;  % 0 = none, 1 = count, 2 = custom
s.customdatatags = {};
s.datataghandles = [];

gr.patch=xregGui.oblong('parent',figh,...
   'position',pos,...
   'facecolor',[1 1 1],...
   'visible','off',...
   'hittest','off',...
   'layer','back');

cp=floor(pos(1:2)+pos(3:4).*0.5)-15;
gr.badim=xregGui.axesimage('parent',figh,...
   'image',pr_badim,...
   'position',[cp 32 32],...
   'visible','off',...
   'hittest','off');

gr.axes=xregGui.axes('parent',figh,...
   'units','pixels',...
   'position',[pos(1)+55 pos(2)+100 pos(3)-150 pos(4)-125],...
   'layer','top',...
   'visible','off',...
   'xgrid','on',...
   'ygrid','on',...
   'zgrid','on',...
   'projection','perspective',...
   'view',[-30 30],...
   'box','on');

gr.surf=handle(patch('parent',gr.axes,...
   'hittest','off',...
   'visible','off',...
   'facecolor','none',...
   'edgecolor',get(double(gr.axes),'defaultsurfacefacecolor'),...
   'facelighting', 'none',...
   'edgelighting', 'flat',...
   'vertices',[]));

cmap=get(figh,'colormap');
clim=get(gr.axes,'clim');
gr.colorbar.axes=xregGui.axes('parent',figh,...
   'units','pixels',...
   'position',[pos(1)+pos(3)-60 pos(2)+100 20 pos(4)-125],...
   'layer','top',...
   'ylim',[0.5 size(cmap,1)+0.5],...
   'xlim',[0 1],...
   'clim',clim,...
   'visible','off',...
   'xtick',[],...
   'box','on',...
   'yaxislocation','right');
gr.colorbar.bar=handle(patch('parent',gr.colorbar.axes,...
   'vertices',[0 0 0;0 1 0;1 1 0;1 0 0],...
   'facevertexcdata',[0],...
   'visible','off',...
   'faces',[1 2 3 4],...
   'edgecolor','none',...
   'facecolor','flat',...
   'tag','cbar'));

% need to give patches a width , otherwise the buttondown fcn never fires.
clen=size(cmap,1);
delta=2*(clen)/(pos(4)-125);
gr.colorbar.minrange=handle(patch('parent',gr.colorbar.axes,...
   'visible','off',...
   'vertices',[0 (3*clen/8)+delta/4; 0.5 (3*clen/8)+2*delta; 1 (3*clen/8)+delta/4;...
      0 (3*clen/8)-delta/4; 0.5 (3*clen/8)-2*delta; 1 (3*clen/8)-delta/4],...
   'faces',[1 2 5 4;2 3 6 5],...
   'facevertexcdata',[1 1 0.7;0 0 0.7;1 1 0.7;1 1 0.7;0 0 0.7;1 1 0.7],...
   'facecolor','interp',...
   'edgecolor','none',...
   'interruptible','off',...
   'erasemode','normal',...
   'tag','minbar'));
gr.colorbar.midrange=handle(patch('parent',gr.colorbar.axes,...
   'visible','off',...
   'vertices',[0 (clen/2)+delta/4; 0.5 (clen/2)+2*delta; 1 (clen/2)+delta/4;...
      0 (clen/2)-delta/4; 0.5 (clen/2)-2*delta; 1 (clen/2)-delta/4],...
   'faces',[1 2 5 4;2 3 6 5],...
   'facevertexcdata',[1 1 0.7;0.7 0 0;1 1 0.7;1 1 0.7;0.7 0 0;1 1 0.7],...
   'facecolor','interp',...
   'edgecolor','none',...
   'interruptible','off',...
   'erasemode','normal',...
   'tag','midbar'));
gr.colorbar.maxrange=handle(patch('parent',gr.colorbar.axes,...
   'visible','off',...
   'vertices',[0 (5*clen/8)+delta/4; 0.5 (5*clen/8)+2*delta; 1 (5*clen/8)+delta/4;...
      0 (5*clen/8)-delta/4; 0.5 (5*clen/8)-2*delta; 1 (5*clen/8)-delta/4],...
   'faces',[1 2 5 4;2 3 6 5],...
   'facevertexcdata',[1 1 0.7;0 0 0.7;1 1 0.7;1 1 0.7;0 0 0.7;1 1 0.7],...
   'facecolor','interp',...
   'edgecolor','none',...
   'interruptible','off',...
   'erasemode','normal',...
   'tag','maxbar'));
s.rangepositions = [3/8 1/2 5/8].*clen;

gr.colorbar.frame1=xregGui.uicontrol('style','frame',...
   'parent',figh,...
   'position',[pos(1)+pos(3)-51 pos(2)+90 2 10],...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');
gr.colorbar.frame2=xregGui.uicontrol('style','frame',...
   'parent',figh,...
   'position',[pos(1)+pos(3)-86 pos(2)+85 72 5],...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');
gr.colorbar.userange=xregGui.uicontrol('style','checkbox',...
   'parent',figh,...
   'position',[pos(1)+pos(3)-85 pos(2)+65 70 24],...
   'backgroundcolor','w',...
   'string','Limit range',...
   'visible','off');

% set up faces for colorbar
pr_cbarfaces(gr.colorbar.bar,cmap);

% set up labels according to color limits in axis
labpoints=get(gr.colorbar.axes,'ytick');
actpoints=(labpoints-1)./(clen-1);
set(gr.colorbar.axes,'yticklabel',cellstr(num2str(actpoints','%3.2f')));

gr.xfactor=xregGui.uicontrol('style','popupmenu',...
   'parent',figh,...
   'position',[pos(1)+pos(3)/5-35 pos(2)+10 70 20],...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','1');
gr.xtext=xregGui.uicontrol('style','text',...
   'parent',figh,...
   'position',[pos(1)+pos(3)/5-35 pos(2)+32 70 16],...
   'string','X-axis factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');

gr.yfactor=xregGui.uicontrol('style','popupmenu',...
   'parent',figh,...
   'position',[pos(1)+2*pos(3)/5-35 pos(2)+10 70 20],...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','2');
gr.ytext=xregGui.uicontrol('style','text',...
   'parent',figh,...
   'position',[pos(1)+2*pos(3)/5-35 pos(2)+32 70 16],...
   'string','Y-axis factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');

gr.zfactor=xregGui.uicontrol('style','popupmenu',...
   'parent',figh,...
   'position',[pos(1)+3*pos(3)/5-35 pos(2)+10 70 20],...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','3');
gr.ztext=xregGui.uicontrol('style','text',...
   'parent',figh,...
   'position',[pos(1)+3*pos(3)/5-35 pos(2)+32 70 16],...
   'string','Z-axis factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');

gr.cfactor=xregGui.uicontrol('style','popupmenu',...
   'parent',figh,...
   'position',[pos(1)+4*pos(3)/5-35 pos(2)+10 70 20],...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','4');
gr.ctext=xregGui.uicontrol('style','text',...
   'parent',figh,...
   'position',[pos(1)+4*pos(3)/5-35 pos(2)+32 70 16],...
   'string','Color factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive');

gr.DataPointer = xregGui.RunTimePointer(s);
gr.DataPointer.LinkToObject(gr.axes);

gr=class(gr,'mvgraph4d');

set([gr.xfactor;gr.yfactor;gr.zfactor;gr.cfactor],'callback',{@i_factorchange,gr});
set(gr.colorbar.userange,'callback',{@i_chboxcb,gr});
set([gr.colorbar.minrange;gr.colorbar.midrange;gr.colorbar.maxrange;gr.colorbar.bar],{'buttondownfcn'},...
   {{@i_linedragcb,gr,'min'};{@i_linedragcb,gr,'mid'};{@i_linedragcb,gr,'max'};{@i_cmapcb,gr}});

% set extra props if specified
if nargin>1 & ishandle(varargin{1}); 
   % Set properties that are passed in
   gr=set(gr,'visible','on',varargin{2:end});
elseif nargin>0 & ~ishandle(varargin{1})
   gr=set(gr,'visible','on',varargin{:});
else
   set([gr.axes;gr.patch;gr.xfactor;gr.yfactor;gr.zfactor;gr.cfactor;gr.xtext;gr.ytext;gr.ztext;...
         gr.ctext;gr.colorbar.axes;gr.colorbar.bar;gr.surf;gr.colorbar.frame1;...
         gr.colorbar.frame2;gr.colorbar.userange],'visible','on');
   mv_rotate3d(double(gr.axes),'ON');
end



function i_factorchange(src,evt,gr)
factor_change(gr,src);
return

function i_chboxcb(src,evt,gr)
chboxcb(gr);
return

function i_linedragcb(src,evt,gr,item)
linedragcb(gr,'buttondown',item);
return

function i_cmapcb(src,evt,gr)
cmapcb(gr);
return