function grabit(fname);

%GRABIT Extracts data points from an image file.
%
% GRABIT starts a GUI program for extracting data from an image file.
% It is capable of reading in BMP, JPG, TIF, and GIF files (anything that
% is readable by IMREAD).  Multiple data sets can be extracted from a
% single image file, and the data is saved as an n-by-2 matrix variable in
% the workspace.  It can also be renamed and saved as a MAT file.
%
% Following steps should be taken:
%   1. Load the image file.
%   2. Calibrate axes dimensions.  You will be prompted to select 4 points
%      on the image.
%   3. Grab points by clicking on points.  Right-click to delete a point.
%      Image can be zoomed during this stage.
%   4. Multiple data sets will remain in memory so long as the GUI is open.
%      Variables can be renamed, saved to file, or edited in Array Editor.
% 
% This code will also work for extracting data points from a tilted or a
% skewed image (even upside-down or mirrored).  The calibration stage
% ensures that the imperfect orientation or quality of the image is
% accounted for.
%
% The types of files that will most likely work are BMP, JPG, TIF, and
% GIF (up to 8-bit) files.  Basically,  any format supported by the IMREAD
% is accepted.
%
% GRABIT(FILENAME) will start the GUI program and open the image file
% FILENAME.
%
% Type GRABIT('-sample') to load a sample image.
%
% Here are a few pointers when creating (saving) the image files:
% 1. Use RGB format.
% 2. For TIF files,  use no compression,  or PACKBITS compression.
% 3. Make sure the extension (*.bmp,  *.jpg,  *.tif,  *.gif) agrees with the file
%    format.
% 
% VERSIONS:
%   v1.0 - first version
%   v1.1 - use imshow instead of image (takes care of colormap)
%   v1.5 - convert to a GUI version
%   v1.6 - added functionality to open a file from the command window and embedded a sample image file to the function
%   v1.6.1 - changed cross cursor to crosshair
%   v1.6.2 - brought back 'image' in case the user doesn't have Image Toolbox
%   v1.6.5 - fixed zoom problem in R14
%
% Created in Matlab R13. Tested in R13 & R14SP1
%
% Copyright 2003
% Jiro Doke
%

%% Initialize
set(0, 'ShowHiddenHandles', 'on');

bgcolor = [1 1 .8];

%% close existing windows
im  =  findobj('type',  'figure',  'name',  'Grabit');
if ishandle(im)
  close(im);
end

zoomPointer = [NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN; ...
    NaN, NaN, NaN, NaN, NaN, 1, 1, 1, 1, NaN, NaN, NaN, NaN, NaN, NaN, NaN; ...
    NaN, NaN, NaN, 1, 1, 2, 2, 2, 2, 1, 1, NaN, NaN, NaN, NaN, NaN; ...
    NaN, NaN, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, NaN, NaN, NaN, NaN; ...
    NaN, NaN, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, NaN, NaN, NaN, NaN; ...
    NaN, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, NaN, NaN, NaN; ...
    NaN, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, NaN, NaN, NaN; ...
    NaN, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, NaN, NaN, NaN; ...
    NaN, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, NaN, NaN, NaN; ...
    NaN, NaN, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, NaN, NaN, NaN, NaN; ...
    NaN, NaN, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, NaN, NaN, NaN; ...
    NaN, NaN, NaN, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, NaN, NaN; ...
    NaN, NaN, NaN, NaN, NaN, 1, 1, 1, 1, NaN, 1, 1, 1, 1, 1, NaN; ...
    NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 1, 1, 1, 1; ...
    NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 1, 1, 1; ...
    NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 1, 1];

im = figure;
set(im, 'units',  'normalized', ...
  'outerposition', [.01 .05 .92 .95], ...
  'doublebuffer',  'on', ...
  'name', 'Grabit', ...
  'numbertitle', 'off', ...
  'menubar', 'none', ...
  'color', bgcolor, ...
  'defaultUicontrolUnits', 'normalized', ...
  'defaultUicontrolBackgroundColor', [0.8 0.8 0.8], ...
  'defaultUicontrolFontname', 'Verdana', ...
  'defaultUicontrolInterruptible', 'off', ...
  'defaultUicontrolBusyAction', 'cancel', ...
  'defaultAxesUnits', 'normalized', ...
  'pointershapecdata', zoomPointer, ...
  'pointershapehotspot', [8 8]);

uicontrol('style', 'frame', ...
  'position', [.01 .895 .8 .1], ...
  'backgroundcolor', bgcolor);
uicontrol('style', 'pushbutton', ...
  'string', 'Load Image...', ...
  'callback', @LoadImage, ...
  'position', [0.02 0.95 0.1 0.04], ...
  'tag', 'Load Image Btn');
uicontrol('style', 'edit', ...
  'string' ,'', ...
  'position', [0.13 0.95 0.67 0.04], ...
  'horizontalalignment', 'left', ...
  'enable', 'inactive', ...
  'tag', 'Image File Loc');
uicontrol('style', 'pushbutton', ...
  'string', 'Calibrate', ...
  'callback', @CalibrateImage, ...
  'position', [0.02 0.9 0.15 0.04], ...
  'enable', 'off', ...
  'tag', 'Calibrate Image Btn');
uicontrol('style', 'pushbutton', ...
  'string', 'Grab Points', ...
  'fontweight', 'bold', ...
  'callback', @GrabPoints, ...
  'position', [0.19 0.9 0.15 0.04], ...
  'enable', 'off', ...
  'tag', 'Grab Points Btn');
uicontrol('style', 'listbox', ...
  'callback', @SelectVariable, ...
  'position', [0.825 0.12 0.165, 0.6], ...
  'backgroundcolor', [.85 .85 .85], ...
  'tooltipstring', sprintf('Double-click to edit\nvariable in Array Editor'), ...
  'tag', 'Variable List');
uicontrol('style', 'toggle', ...
  'string', 'Zoom Off', ...
  'callback', @ZoomState, ...
  'position', [0.36 0.9 0.15 0.04], ...
  'enable', 'off', ...
  'tag', 'Zoom State Btn');
uicontrol('style', 'text', ...
  'string', 'Data in Memory', ...
  'position', [.825 .72 .165 .02], ...
  'backgroundcolor', bgcolor, ...
  'fontweight', 'bold');
uicontrol('style', 'pushbutton', ...
  'string', 'Save to file as...', ...
  'position', [.825 .08 .165 .03], ...
  'callback', @VariableManipulation, ...
  'tag', 'SaveAs');
uicontrol('style', 'pushbutton', ...
  'string', 'Rename...', ...
  'position', [.825 .05 .165 .03], ...
  'callback', @VariableManipulation, ...
  'tag', 'Rename');
uicontrol('style', 'pushbutton', ...
  'string', 'Delete from workspace...', ...
  'position', [.825 .02 .165 .03], ...
  'callback', @VariableManipulation, ...
  'tag', 'Delete');

ah1 = axes('position', [0.01 0.01 0.8 0.8], ...
  'visible', 'off', ...
  'handlevisibility', 'on', ...
  'tag', 'Image Axis');
axes('position', [.82 .01 .175 .985], ...
  'box', 'on', ...
  'color', bgcolor, ...
  'hittest', 'off', ...
  'xtick', [], ...
  'ytick', []);
ah2 = axes('position', [0.85 0.8 0.13 0.14], ...
  'box', 'on', ...
  'handlevisibility', 'callback', ...
  'tag', 'Preview Axis');

uicontrol('style', 'text', ...
  'string', 'Preview Box', ...
  'fontweight', 'bold', ...
  'position', [.85 .95 .14 .02], ...
  'backgroundcolor', bgcolor);

setappdata(gcf, 'I', []);
setappdata(gcf, 'map', []);
setappdata(gcf, 'savedVars', struct);
showAllVars(struct);

set(gcf, 'handlevisibility', 'callback');
set(0, 'ShowHiddenHandles', 'off');

if nargin == 1 & ischar(fname)
  switch lower(fname)
    case '-sample'
      fname = SampleImage;
      LoadImage([], [], fname);
      try;
        warning off;
        delete(fname);
        warning on;
      end
    otherwise
      filename = which(fname);
      if ~isempty(filename)
        LoadImage([], [], filename);
      else
        errordlg(sprintf('%s\nnot found.', fname));
        return;
      end
  end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function VariableManipulation(obj, edata);
% This callback is called when one of the three buttons under the variable
% listbox is pressed.

set(0, 'ShowHiddenHandles', 'on');

listboxH = findobj('tag', 'Variable List');
savedVars = getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'savedVars');
vars = fieldnames(savedVars);
if isempty(vars)
  set(0, 'ShowHiddenHandles', 'off');
  return;
end
listboxVal = get(listboxH, 'value');
varName = vars{listboxVal};
switch get(obj, 'string');
  case 'Save to file as...' % save the variable as a .mat file
    [fname, pname] = uiputfile('*.mat', sprintf('Save ''%s'' as:', varName), varName);
    if ischar(fname)
      [p, fname, e] = fileparts(fname); % strip off the extension
      eval(sprintf('%s = savedVars.%s;', fname, varName));
      save(fullfile(pname, fname), fname);
    end
  case 'Rename...'  % rename the variable in the base workspace
    answer = inputdlg({sprintf('Rename ''%s'' as:', varName)}, 'Rename...', 1, {varName});
    if ~isempty(answer) & ~strcmp(varName, answer{1})
      if ~(evalin('base', sprintf('exist(''%s'', ''var'')', answer{1}))) & isempty(strmatch(answer{1}, vars, 'exact'))
        newVarNames = vars;
        newVarNames{listboxVal} = answer{1};
        for id = 1:length(vars)
          tmp.(newVarNames{id}) = savedVars.(vars{id});
        end
        savedVars = tmp;
        showAllVars(savedVars);
        set(listboxH, 'value', listboxVal);
        assignin('base', answer{1}, savedVars.(answer{1}));
        evalin('base', sprintf('clear %s;', varName));
      else
        errordlg('That name is already in use.');
        set(0, 'ShowHiddenHandles', 'off');
        return;
      end
    end
  case 'Delete from workspace...' % delete the variable from the base workspace
    btn = questdlg(sprintf('Delete ''%s'' from the workspace?', varName), 'Delete from workspace...', ...
      'Yes', 'No', 'No');
    switch btn
      case 'Yes'
        savedVars = rmfield(savedVars, varName);
        showAllVars(savedVars);
        evalin('base', sprintf('clear %s;', varName));
      case 'No'
    end
end

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function SelectVariable(obj, edata);
% this callback is called when a variable is selected from the variable
% listbox.  When the variable is clicked, it will plot the data in the
% Preview Box above.  If the variable is double-clicked, it will be opened
% in the Array Editor.  It also ensures that the variable in the base
% workspace is the same copy as the variable stored in the GRABIT
% workspace.  This means that if you change the contents of a variable in
% the base workspace (via other functions), then it will allow you to
% update the variable in the GRABIT workspace.

set(0, 'ShowHiddenHandles', 'on');

sType = get(findobj('type', 'figure', 'name', 'Grabit'), 'SelectionType');
switch sType
  case {'normal', 'open'} % single click or double click
    savedVars = getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'savedVars');
    vars = fieldnames(savedVars);
    if isempty(vars)
      set(0, 'ShowHiddenHandles', 'off');
      return;
    end
    listVal = get(obj, 'value');
    varName = vars{listVal};
    % check to see if the stored var is the same as the var in the
    % workspace
    if evalin('base', sprintf('exist(''%s'', ''var'')', varName))
      if isnumeric(evalin('base', varName)) & ...
          ndims(evalin('base', varName)) == 2
        
        if size(evalin('base', varName)) == size(savedVars.(varName)) & ...
            all(evalin('base', varName) == savedVars.(varName))
        else  % may have been modified in the workspace
          btn = questdlg(sprintf('''%s'' may have been modified in the base workspace (e.g. Array Editor).\nUpdate the variable?', varName), ...
            'Modified Variable', 'Update Base Workspace', 'Update Grabit', 'Neither', 'Update Grabit');
          switch btn
            case 'Update Workspace'
              assignin('base', varName, savedVars.(varName));
            case 'Update Grabit'
              savedVars.(varName) = evalin('base', varName);
              setappdata(findobj('type', 'figure', 'name', 'Grabit'), 'savedVars', savedVars);
              showAllVars(savedVars);
              set(obj, 'value', listVal);
            case 'Neither'
          end
        end
      else
        btn = questdlg(sprintf('''%s'' in the base workspace is different from the one in Grabit.\nUpdate the base workspace variable?', varName), ...
          'Wrong Variable', 'Update Base Workspace', 'Leave Untouched', 'Update Base Workspace');
        switch btn
          case 'Update Workspace'
            assignin('base', varName, savedVars.(varName));
          case 'Leave Untouched'
        end
      end
    else
      assignin('base', varName, savedVars.(varName));
    end
    switch sType
      case 'normal' % single click
        axes(findobj('tag', 'Preview Axis'));
        set(findobj('tag', 'PreviewLine'), 'xdata', savedVars.(varName)(:, 1), ...
          'ydata', savedVars.(varName)(:, 2));
        axis auto;
      case 'open' % double click
        try
          openvar(varName);
        end
    end
end

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function LoadImage(obj, edata, filename)
% this function loads an image file

set(0, 'ShowHiddenHandles', 'on');

if nargin < 3
  [fname, pathname] = uigetfile({'*.bmp;*.jpg;*.jpeg;*.tif;*.tiff;*.gif', 'Image Files (*.bmp,  *.jpg,  *.jpeg,  *.tif,  *.tiff,  *.gif)';
    '*.bpm', 'BPM files (*.bpm)';
    '*.jpg;*jpeg', 'JPG files (*.jpg,  *.jpeg)';
    '*.tif;*tiff', 'TIFF files (*.tif,  *.tiff)';
    '*.gif', 'GIF files (*.gif)';
    '*.*', 'All files (*.*)'}, 'Select an image file');
  if ischar(fname)
    filename = fullfile(pathname, fname);
  else
    set(0, 'ShowHiddenHandles', 'off');
    return;
  end
end

set(findobj('tag', 'Image File Loc'), 'string', filename);

try
  warning off;
  [A, map] = imread(filename);
  warning on;
catch
  errordlg({sprintf('%s', lasterr)});
  set(0, 'ShowHiddenHandles', 'off');
  return;
end

if ndims(A) == 3   %some TIFF files have wrong size matrices.
  if size(A, 3)>3
    A = A(:, :, 1:3);
  elseif size(A, 3)<3
    errordlg('This is a weird image file...possibly a bad TIFF file...');
    set(0, 'ShowHiddenHandles', 'off');
    return;
  end
end

axes(findobj('tag', 'Preview Axis'));
cla;
line(NaN, NaN, 'color', 'blue', 'linestyle', '-', 'marker', '.', 'tag', 'PreviewLine');
imAxis = findobj('tag', 'Image Axis');
axes(imAxis);cla;
NP = get(gcf, 'nextplot');  % for compatibility with R14
try
  iH = imshow(A, map);
catch % probably doesn't have the image toolbox
  colormap(map);
  iH = image(A);
  set(gca, 'xtick', [], 'ytick', []);
  axis equal;
end
set(gcf, 'nextplot', NP);
set(imAxis, 'tag', 'Image Axis', 'handlevisibility', 'callback');
line(NaN, NaN, 'color', 'red', 'linestyle', 'none', 'marker', '.', 'tag', 'ImageLine');

setappdata(gcf, 'I', A);
setappdata(gcf, 'map', map);
setappdata(gcf, 'CalibVals', []);
set(iH, 'ButtonDownFcn', '');

set(findobj('tag', 'Calibrate Image Btn'), 'string', 'Calibrate', 'enable', 'on');
set(findobj('tag', 'Grab Points Btn'), 'enable', 'off');
set(findobj('tag', 'Zoom State Btn'), 'enable', 'on', 'value', 0, 'string', 'Zoom Off');zoom off;

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function CalibrateImage(obj, edata)
% this function performs calibration of the image by prompting the user to
% select 4 points on the image as reference points.

set(0, 'ShowHiddenHandles', 'on');

if isempty(getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'I'))
  set(obj, 'enable', 'off');
else
  axes(findobj('tag', 'Image Axis'));
  ht = title('Click on Origin of X-axis', 'fontsize', 20, 'color', 'red');
  [Xxo, Yxo] = ginput(1);
  if isempty(Xxo);set(0, 'ShowHiddenHandles', 'off');return;end;
  set(ht, 'string', 'Click on Maximum value of X-axis');
  [Xxm, Yxm] = ginput(1);
  if isempty(Xxm);set(0, 'ShowHiddenHandles', 'off');return;end;
  set(ht, 'string', 'Click on Origin of Y-axis');
  [Xyo, Yyo] = ginput(1);
  if isempty(Xyo);set(0, 'ShowHiddenHandles', 'off');return;end;
  set(ht, 'string', 'Click on Maximum value of Y-axis');
  [Xym, Yym] = ginput(1);
  if isempty(Xym);set(0, 'ShowHiddenHandles', 'off');return;end;
  
  set(ht, 'string', '');
  
  v1 = [Xxm - Xxo; Yxm - Yxo];
  v2 = [Xym - Xyo; Yym - Yyo];
  
  extreme_values = inputdlg({'Enter the value of the origin of x-axis', ...
      'Enter the value of the maximum of x-axis', 'Enter the value of the origin of y-axis', ...
      'Enter the value of the maximum of y-axis'}, 'Enter values', 1, {'', '', '', ''});
  
  if isempty(extreme_values)
    uiwait(errordlg('Cancelled...'));
    set(0, 'ShowHiddenHandles', 'off');
    return;
  end
  
  Xo = str2num(extreme_values{1});
  Xm = str2num(extreme_values{2});
  Yo = str2num(extreme_values{3});
  Ym = str2num(extreme_values{4});
  
  if isempty(Xo) | isempty(Xm) | isempty(Yo) | isempty(Ym)
    uiwait(errordlg('Invalid input...'));
    set(0, 'ShowHiddenHandles', 'off');
    return;
  end
  
  try;delete(findobj('tag', 'CalibPoints'));end
  line([Xxo, Xxm, Xyo, Xym], [Yxo, Yxm, Yyo, Yym], 'color', 'red', 'marker', '*', 'markersize', 20, 'linestyle', 'none', ...
    'tag', 'CalibPoints', ...
    'HitTest', 'off');
    
  Xlength = Xm - Xo;
  Ylength = Ym - Yo;
  
  % the basis vectors in the MATLAB domain
  e1 = v1 / Xlength;
  e2 = v2 / Ylength;
  
  % rearrage axes
  C = [e1 e2] \ [Xyo - Xxo; Yyo - Yxo];
  blahX = [Xxo; Yxo] + C(2) * e2; Xxo = blahX(1); Yxo = blahX(2);
  blahY = [Xyo; Yyo] - C(1) * e1; Xyo = blahY(1); Yyo = blahY(2);
  
  calib.Xo = Xo;
  calib.Xm = Xm;
  calib.Yo = Yo;
  calib.Ym = Ym;
  calib.e1 = e1;
  calib.e2 = e2;
  calib.Xxo = Xxo;
  calib.Yyo = Yyo;
  
  setappdata(findobj('type', 'figure', 'name', 'Grabit'), 'CalibVals', calib);
  set(obj, 'string', 'Re-Calibrate', 'enable', 'on');
  set(findobj('tag', 'Grab Points Btn'), 'enable', 'on');
end

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function GrabPoints(obj, edata)
% this function is used to extract data points by prompting the user to
% select points on the image.

set(0, 'ShowHiddenHandles', 'on');

switch get(obj, 'string')
  case 'Grab Points'  % initiate point grabbing
    
    calib = getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'CalibVals');
    
    axes(findobj('tag', 'Image Axis'));
    zoom out;
    set(findobj('tag', 'ImageLine'), 'xdata', NaN, 'ydata', NaN);
    title({'Grab points by clicking on data points.','Right-click to delete previous point.'}, 'fontsize', 12, 'color', 'red');
    
    set(findobj('tag', 'PreviewLine'), 'xdata', NaN, 'ydata', NaN);
    set(findobj('tag', 'Preview Axis'), 'xlim', [min([calib.Xo calib.Xm]) max([calib.Xo calib.Xm])], ...
      'ylim', [min([calib.Yo calib.Ym]) max([calib.Yo calib.Ym])]);
    
    setappdata(findobj('type', 'figure', 'name', 'Grabit'), 'ImDat', []);
    setappdata(findobj('type', 'figure', 'name', 'Grabit'), 'TrueDat', []);
    
    set(findobj('type', 'figure', 'name', 'Grabit'), 'Pointer', 'crosshair');
    
    % set ButtonDownFcn which is called when the mouse is clicked
    set(findobj('type', 'image'), 'ButtonDownFcn', {@ImagePointClick, findobj('tag', 'Image Axis')});
    set(obj, 'string', 'Finish Grabbing');
    set([findobj('tag', 'Calibrate Image Btn'), ...
        findobj('tag', 'Load Image Btn'), ...
        findobj('tag', 'SaveAs'), ...
        findobj('tag', 'Rename'), ...
        findobj('tag', 'Delete')], ...
      'enable', 'off');
  case 'Finish Grabbing'  % finish point grabbing
    try
      delete(findobj('type', 'text', 'tag', 'GrabTitle'));
    end;
    % delete ButtonDownFcn
    set(findobj('type', 'image'), 'ButtonDownFcn', '');
    set(findobj('type', 'figure', 'name', 'Grabit'), 'Pointer', 'arrow');
    set(obj, 'string', 'Grab Points');
    set([findobj('tag', 'Calibrate Image Btn'), ...
        findobj('tag', 'Load Image Btn'), ...
        findobj('tag', 'SaveAs'), ...
        findobj('tag', 'Rename'), ...
        findobj('tag', 'Delete')], ...
      'enable', 'on');
    if ~isempty(getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'TrueDat'))
      savedVars = getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'savedVars');
      varNames = fieldnames(savedVars);
      varNames{end + 1} = findNextVarName(varNames);
      savedVars.(varNames{end}) = getappdata(findobj('type', 'figure', 'name', 'Grabit'), 'TrueDat');
      assignin('base', varNames{end}, savedVars.(varNames{end}));
      showAllVars(savedVars);
    end
end  
set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function showAllVars(savedVars)
% this function shows all data set variables that exist in the GRABIT
% workspace in the variable listbox.

set(0, 'ShowHiddenHandles', 'on');

varNames = fieldnames(savedVars);

if isempty(varNames)
  listboxStr = {''};
else
  for id = 1:length(varNames)
    [m, n] = size(savedVars.(varNames{id}));
    listboxStr{id} = sprintf('%s [%dx%d]', varNames{id}, m, n);
  end
end

setappdata(findobj('type', 'figure', 'name', 'Grabit'), 'savedVars', savedVars);
set(findobj('tag', 'Variable List'), 'string', listboxStr, 'value', length(listboxStr));

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function newVarName = findNextVarName(varNames)
% this helper function determines the next available variable name by
% checking the existing variable names in the base workspace and GRABIT
% workspace.

wsVarNames = evalin('base', 'who');
vars = unique([wsVarNames(:);varNames(:)]);
idx = 1;
while 1
  if isempty(strmatch(sprintf('Data%d', idx), vars, 'exact'))
    newVarName = sprintf('Data%d', idx);
    return;
  else
    idx = idx + 1;
  end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function ImagePointClick(obj, edata, ah)
% this function is called when the mouse is clicked (during point grabbing
% mode) on the image.

figH = get(ah, 'Parent');
ImDat = getappdata(figH, 'ImDat');
TrueDat = getappdata(figH, 'TrueDat');
calib = getappdata(figH, 'CalibVals');

xy = get(ah, 'CurrentPoint');X = xy(1, 1); Y = xy(1, 2);
switch get(figH, 'SelectionType')
  case 'normal' % select point
    % the point on the image
    ImDat(end + 1, :) = [X, Y];
    
    % the true data point coordinates
    TrueDat(end + 1, :) = ([calib.Xo; calib.Yo] + [calib.e1 calib.e2] \ [X - calib.Xxo; Y - calib.Yyo])';
  case 'alt'  % delete previous point
    if isempty(ImDat)
      return;
    else
      ImDat(end, :) = [];
      TrueDat(end, :) = [];
    end
end

set(findobj('type', 'line', 'tag', 'PreviewLine'), 'xdata', TrueDat(:, 1), 'ydata', TrueDat(:, 2));
set(findobj('type', 'line', 'tag', 'ImageLine'), 'xdata', ImDat(:, 1), 'ydata', ImDat(:, 2));

setappdata(figH, 'ImDat', ImDat);
setappdata(figH, 'TrueDat', TrueDat);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function ZoomState(obj, edata)
% this function toggles the zoom state

set(0, 'ShowHiddenHandles', 'on');

switch get(obj, 'string')
  case 'Zoom Off'
    set(obj, 'string', 'Zoom On', 'enable', 'on');
    udata.titlestring = get(get(findobj('tag', 'Image Axis'), 'Title'), 'string');
    set(findobj('tag', 'Image Axis'), 'handlevisibility', 'on');
    udata.btnstate = get([findobj('tag', 'Load Image Btn');...
        findobj('tag', 'Calibrate Image Btn');...
        findobj('tag', 'Grab Points Btn');...
        findobj('tag', 'Variable List');...
        findobj('tag', 'SaveAs');...
        findobj('tag', 'Rename');...
        findobj('tag', 'Delete')],'enable');
    udata.imgstate = get(findobj('type', 'image'), 'ButtonDownFcn');
    udata.cursorstate = get(findobj('type', 'figure', 'name', 'Grabit'), 'Pointer');
    set(obj, 'userdata', udata);
    set(get(findobj('tag', 'Image Axis'), 'Title'), 'string', 'Zoom In');
    set([findobj('tag', 'Load Image Btn');...
        findobj('tag', 'Calibrate Image Btn');...
        findobj('tag', 'Grab Points Btn');...
        findobj('tag', 'Variable List');...
        findobj('tag', 'SaveAs');...
        findobj('tag', 'Rename');...
        findobj('tag', 'Delete')], 'enable', 'off');
    set(findobj('type', 'image'), 'ButtonDownFcn', '');
    set(findobj('type', 'figure', 'name', 'Grabit'), 'pointer', 'custom');
    zoom('on');
  case 'Zoom On'
    zoom('off');
    set(obj, 'string', 'Zoom Off', 'enable', 'on');
    udata = get(obj, 'userdata');
    set(get(findobj('tag', 'Image Axis'), 'Title'), 'string', udata.titlestring);
    set(findobj('tag', 'Image Axis'), 'handlevisibility', 'callback');
    set([findobj('tag', 'Load Image Btn');...
        findobj('tag', 'Calibrate Image Btn');...
        findobj('tag', 'Grab Points Btn');...
        findobj('tag', 'Variable List');...
        findobj('tag', 'SaveAs');...
        findobj('tag', 'Rename');...
        findobj('tag', 'Delete')], {'enable'}, udata.btnstate);
    set(findobj('type', 'image'), 'ButtonDownFcn', udata.imgstate);
    set(findobj('type', 'figure', 'name', 'Grabit'), 'pointer', udata.cursorstate);
end

set(0, 'ShowHiddenHandles', 'off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function fname = SampleImage;
% this function creates a temporary image file in the temp directory by
% loading in a sample binary image data.

str = [71, 73, 70, 56, 57, 97, 16, 2, 202, 1, 247, 0, 0, 0, 0, 0, 128, 0, 0, 0, ...
    128, 0, 128, 128, 0, 0, 0, 128, 128, 0, 128, 0, 128, 128, 192, 192, 192, 192, 220, 192, ...
    166, 202, 240, 64, 32, 0, 96, 32, 0, 128, 32, 0, 160, 32, 0, 192, 32, 0, 224, 32, ...
    0, 0, 64, 0, 32, 64, 0, 64, 64, 0, 96, 64, 0, 128, 64, 0, 160, 64, 0, 192, ...
    64, 0, 224, 64, 0, 0, 96, 0, 32, 96, 0, 64, 96, 0, 96, 96, 0, 128, 96, 0, ...
    160, 96, 0, 192, 96, 0, 224, 96, 0, 0, 128, 0, 32, 128, 0, 64, 128, 0, 96, 128, ...
    0, 128, 128, 0, 160, 128, 0, 192, 128, 0, 224, 128, 0, 0, 160, 0, 32, 160, 0, 64, ...
    160, 0, 96, 160, 0, 128, 160, 0, 160, 160, 0, 192, 160, 0, 224, 160, 0, 0, 192, 0, ...
    32, 192, 0, 64, 192, 0, 96, 192, 0, 128, 192, 0, 160, 192, 0, 192, 192, 0, 224, 192, ...
    0, 0, 224, 0, 32, 224, 0, 64, 224, 0, 96, 224, 0, 128, 224, 0, 160, 224, 0, 192, ...
    224, 0, 224, 224, 0, 0, 0, 64, 32, 0, 64, 64, 0, 64, 96, 0, 64, 128, 0, 64, ...
    160, 0, 64, 192, 0, 64, 224, 0, 64, 0, 32, 64, 32, 32, 64, 64, 32, 64, 96, 32, ...
    64, 128, 32, 64, 160, 32, 64, 192, 32, 64, 224, 32, 64, 0, 64, 64, 32, 64, 64, 64, ...
    64, 64, 96, 64, 64, 128, 64, 64, 160, 64, 64, 192, 64, 64, 224, 64, 64, 0, 96, 64, ...
    32, 96, 64, 64, 96, 64, 96, 96, 64, 128, 96, 64, 160, 96, 64, 192, 96, 64, 224, 96, ...
    64, 0, 128, 64, 32, 128, 64, 64, 128, 64, 96, 128, 64, 128, 128, 64, 160, 128, 64, 192, ...
    128, 64, 224, 128, 64, 0, 160, 64, 32, 160, 64, 64, 160, 64, 96, 160, 64, 128, 160, 64, ...
    160, 160, 64, 192, 160, 64, 224, 160, 64, 0, 192, 64, 32, 192, 64, 64, 192, 64, 96, 192, ...
    64, 128, 192, 64, 160, 192, 64, 192, 192, 64, 224, 192, 64, 0, 224, 64, 32, 224, 64, 64, ...
    224, 64, 96, 224, 64, 128, 224, 64, 160, 224, 64, 192, 224, 64, 224, 224, 64, 0, 0, 128, ...
    32, 0, 128, 64, 0, 128, 96, 0, 128, 128, 0, 128, 160, 0, 128, 192, 0, 128, 224, 0, ...
    128, 0, 32, 128, 32, 32, 128, 64, 32, 128, 96, 32, 128, 128, 32, 128, 160, 32, 128, 192, ...
    32, 128, 224, 32, 128, 0, 64, 128, 32, 64, 128, 64, 64, 128, 96, 64, 128, 128, 64, 128, ...
    160, 64, 128, 192, 64, 128, 224, 64, 128, 0, 96, 128, 32, 96, 128, 64, 96, 128, 96, 96, ...
    128, 128, 96, 128, 160, 96, 128, 192, 96, 128, 224, 96, 128, 0, 128, 128, 32, 128, 128, 64, ...
    128, 128, 96, 128, 128, 128, 128, 128, 160, 128, 128, 192, 128, 128, 224, 128, 128, 0, 160, 128, ...
    32, 160, 128, 64, 160, 128, 96, 160, 128, 128, 160, 128, 160, 160, 128, 192, 160, 128, 224, 160, ...
    128, 0, 192, 128, 32, 192, 128, 64, 192, 128, 96, 192, 128, 128, 192, 128, 160, 192, 128, 192, ...
    192, 128, 224, 192, 128, 0, 224, 128, 32, 224, 128, 64, 224, 128, 96, 224, 128, 128, 224, 128, ...
    160, 224, 128, 192, 224, 128, 224, 224, 128, 0, 0, 192, 32, 0, 192, 64, 0, 192, 96, 0, ...
    192, 128, 0, 192, 160, 0, 192, 192, 0, 192, 224, 0, 192, 0, 32, 192, 32, 32, 192, 64, ...
    32, 192, 96, 32, 192, 128, 32, 192, 160, 32, 192, 192, 32, 192, 224, 32, 192, 0, 64, 192, ...
    32, 64, 192, 64, 64, 192, 96, 64, 192, 128, 64, 192, 160, 64, 192, 192, 64, 192, 224, 64, ...
    192, 0, 96, 192, 32, 96, 192, 64, 96, 192, 96, 96, 192, 128, 96, 192, 160, 96, 192, 192, ...
    96, 192, 224, 96, 192, 0, 128, 192, 32, 128, 192, 64, 128, 192, 96, 128, 192, 128, 128, 192, ...
    160, 128, 192, 192, 128, 192, 224, 128, 192, 0, 160, 192, 32, 160, 192, 64, 160, 192, 96, 160, ...
    192, 128, 160, 192, 160, 160, 192, 192, 160, 192, 224, 160, 192, 0, 192, 192, 32, 192, 192, 64, ...
    192, 192, 96, 192, 192, 128, 192, 192, 160, 192, 192, 255, 251, 240, 160, 160, 164, 128, 128, 128, ...
    255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 255, 0, 255, 0, 255, 255, 255, 255, ...
    255, 44, 0, 0, 0, 0, 16, 2, 202, 1, 0, 8, 255, 0, 255, 9, 28, 72, 176, 160, ...
    193, 131, 8, 19, 42, 92, 200, 176, 161, 195, 135, 16, 35, 74, 156, 72, 177, 162, 197, 139, ...
    24, 51, 106, 220, 200, 177, 163, 199, 143, 32, 67, 138, 28, 73, 178, 164, 201, 147, 40, 83, ...
    170, 92, 201, 178, 165, 203, 151, 48, 99, 202, 156, 73, 179, 166, 205, 155, 56, 115, 234, 220, ...
    201, 179, 167, 207, 159, 64, 131, 10, 29, 74, 180, 168, 209, 163, 72, 147, 42, 93, 202, 180, ...
    169, 211, 167, 80, 163, 74, 157, 74, 181, 170, 213, 171, 88, 179, 106, 221, 202, 181, 171, 215, ...
    175, 96, 195, 138, 29, 75, 182, 172, 217, 134, 0, 210, 158, 93, 203, 182, 109, 217, 180, 112, ...
    1, 8, 148, 235, 182, 174, 221, 187, 79, 227, 210, 53, 184, 23, 175, 223, 191, 128, 111, 234, ...
    237, 155, 144, 112, 224, 195, 136, 19, 127, 28, 60, 209, 176, 226, 199, 144, 35, 23, 142, 139, ...
    209, 177, 228, 203, 152, 255, 50, 230, 104, 57, 179, 231, 207, 97, 55, 135, 236, 12, 186, 180, ...
    105, 169, 122, 83, 146, 62, 205, 186, 181, 80, 209, 43, 87, 187, 158, 77, 91, 38, 108, 152, ...
    178, 107, 235, 222, 61, 50, 117, 206, 220, 188, 131, 11, 111, 236, 187, 39, 240, 225, 200, 73, ...
    22, 240, 123, 27, 232, 241, 228, 208, 27, 39, 72, 104, 111, 249, 192, 180, 232, 200, 22, 71, ...
    250, 60, 186, 119, 234, 1, 224, 218, 255, 11, 64, 15, 161, 61, 2, 211, 127, 201, 253, 133, ...
    190, 107, 243, 164, 252, 248, 125, 159, 95, 177, 58, 65, 246, 215, 1, 160, 27, 79, 119, 252, ...
    116, 123, 133, 76, 103, 213, 123, 78, 197, 39, 31, 125, 8, 62, 100, 159, 64, 0, 166, 183, ...
    30, 122, 11, 230, 215, 94, 84, 219, 81, 101, 224, 133, 9, 210, 23, 97, 66, 214, 49, 104, ...
    66, 2, 254, 253, 211, 96, 132, 227, 137, 24, 32, 83, 4, 90, 120, 161, 129, 25, 206, 183, ...
    225, 65, 27, 218, 243, 161, 132, 32, 90, 87, 221, 116, 47, 76, 72, 84, 138, 89, 173, 136, ...
    97, 139, 209, 217, 199, 159, 142, 12, 118, 104, 226, 127, 1, 28, 121, 227, 63, 248, 1, 64, ...
    207, 140, 206, 81, 214, 157, 138, 62, 198, 7, 36, 114, 255, 45, 215, 32, 147, 68, 110, 248, ...
    11, 56, 34, 22, 128, 35, 132, 5, 0, 0, 162, 9, 83, 182, 212, 92, 154, 82, 85, 105, ...
    229, 149, 186, 85, 103, 75, 90, 98, 218, 247, 165, 135, 2, 22, 73, 80, 0, 233, 17, 240, ...
    143, 147, 31, 202, 232, 19, 143, 115, 153, 229, 38, 156, 129, 161, 137, 29, 67, 102, 222, 146, ...
    22, 146, 217, 217, 243, 2, 61, 118, 86, 72, 162, 128, 50, 178, 25, 27, 101, 17, 105, 26, ...
    85, 149, 136, 2, 102, 79, 118, 34, 154, 64, 106, 65, 114, 2, 160, 94, 121, 119, 46, 249, ...
    207, 164, 118, 130, 255, 57, 80, 158, 34, 134, 7, 215, 79, 132, 30, 246, 99, 168, 127, 189, ...
    144, 103, 165, 216, 129, 72, 94, 152, 89, 134, 57, 16, 172, 90, 158, 8, 32, 170, 131, 86, ...
    248, 217, 174, 188, 222, 181, 44, 170, 124, 114, 89, 99, 177, 198, 186, 90, 167, 141, 182, 210, ...
    170, 83, 174, 158, 65, 27, 173, 91, 50, 162, 179, 168, 65, 35, 218, 168, 110, 173, 145, 98, ...
    219, 236, 173, 194, 137, 59, 46, 185, 73, 242, 71, 42, 127, 0, 144, 169, 103, 182, 5, 204, ...
    233, 41, 74, 224, 186, 118, 225, 191, 243, 118, 117, 227, 146, 233, 238, 43, 164, 145, 130, 57, ...
    11, 221, 138, 4, 23, 188, 149, 140, 9, 224, 247, 170, 190, 230, 49, 28, 147, 195, 244, 97, ...
    24, 177, 196, 83, 89, 44, 208, 45, 96, 102, 10, 40, 67, 47, 110, 202, 41, 175, 30, 131, ...
    76, 174, 9, 224, 192, 37, 235, 187, 240, 130, 220, 178, 203, 110, 189, 128, 235, 202, 56, 11, ...
    244, 227, 199, 61, 215, 22, 112, 193, 63, 7, 13, 228, 208, 61, 23, 109, 244, 119, 28, 47, ...
    157, 208, 174, 64, 59, 125, 24, 210, 82, 19, 4, 117, 213, 174, 81, 141, 245, 65, 87, 111, ...
    237, 89, 106, 81, 87, 13, 109, 216, 94, 115, 181, 102, 217, 24, 177, 120, 29, 218, 128, 229, ...
    74, 246, 210, 99, 179, 93, 87, 211, 133, 201, 61, 209, 138, 4, 189, 109, 119, 81, 90, 239, ...
    255, 125, 145, 184, 122, 251, 205, 83, 223, 130, 107, 4, 120, 225, 85, 209, 141, 248, 73, 135, ...
    47, 142, 162, 226, 142, 163, 36, 111, 224, 145, 147, 68, 120, 229, 35, 77, 142, 57, 205, 148, ...
    111, 158, 182, 218, 5, 117, 238, 57, 113, 60, 143, 158, 19, 212, 165, 155, 174, 26, 228, 170, ...
    215, 164, 116, 161, 173, 155, 196, 122, 236, 55, 201, 251, 39, 237, 32, 93, 142, 187, 76, 160, ...
    135, 190, 123, 101, 179, 255, 206, 147, 237, 183, 11, 15, 81, 240, 198, 251, 132, 247, 65, 162, ...
    163, 173, 123, 242, 59, 17, 95, 60, 244, 207, 67, 255, 147, 244, 205, 227, 140, 188, 245, 74, ...
    45, 207, 124, 235, 213, 115, 111, 148, 244, 211, 59, 126, 91, 246, 226, 215, 222, 59, 95, 136, ...
    43, 142, 126, 250, 174, 175, 239, 59, 219, 72, 191, 15, 63, 239, 242, 207, 47, 181, 238, 246, ...
    223, 15, 19, 249, 229, 115, 217, 246, 252, 55, 22, 0, 246, 47, 51, 225, 35, 224, 87, 12, ...
    200, 171, 4, 42, 176, 128, 111, 82, 200, 1, 219, 150, 186, 7, 70, 6, 128, 176, 243, 142, ...
    3, 45, 200, 22, 12, 6, 112, 55, 27, 228, 160, 93, 60, 56, 65, 176, 12, 80, 132, 146, ...
    241, 158, 4, 91, 19, 66, 20, 234, 42, 127, 223, 251, 218, 9, 93, 104, 26, 15, 126, 112, ...
    42, 105, 153, 25, 103, 42, 72, 195, 135, 217, 176, 132, 40, 49, 89, 166, 255, 252, 116, 145, ...
    22, 246, 240, 89, 48, 140, 97, 200, 156, 36, 16, 245, 48, 241, 120, 51, 60, 98, 188, 146, ...
    168, 191, 144, 229, 201, 137, 167, 154, 76, 205, 164, 56, 175, 31, 110, 197, 81, 250, 225, 75, ...
    20, 185, 248, 29, 27, 222, 112, 42, 248, 42, 79, 222, 200, 40, 53, 42, 178, 47, 43, 96, ...
    36, 210, 25, 217, 72, 52, 55, 86, 209, 42, 182, 82, 227, 26, 233, 152, 52, 59, 222, 145, ...
    42, 246, 200, 161, 18, 159, 34, 0, 1, 252, 195, 144, 124, 164, 210, 129, 30, 2, 68, 149, ...
    240, 71, 135, 123, 116, 74, 33, 39, 89, 200, 68, 182, 201, 143, 127, 140, 74, 166, 32, 185, ...
    54, 66, 82, 114, 146, 150, 132, 138, 10, 29, 210, 200, 147, 152, 44, 46, 180, 42, 37, 72, ...
    62, 73, 201, 80, 22, 200, 140, 157, 156, 10, 24, 213, 130, 16, 85, 126, 132, 149, 160, 116, ...
    101, 247, 124, 36, 17, 91, 110, 204, 147, 184, 68, 164, 46, 143, 226, 166, 69, 146, 114, 44, ...
    190, 228, 72, 48, 115, 57, 204, 162, 20, 243, 120, 218, 1, 230, 50, 155, 73, 148, 103, 66, ...
    19, 153, 146, 92, 230, 39, 169, 25, 20, 107, 50, 50, 154, 75, 105, 229, 33, 13, 57, 77, ...
    110, 94, 15, 84, 215, 20, 75, 50, 47, 178, 77, 131, 4, 211, 156, 202, 27, 229, 49, 177, ...
    153, 148, 118, 34, 164, 156, 240, 196, 9, 44, 51, 233, 255, 30, 164, 216, 83, 33, 248, 204, ...
    103, 252, 34, 216, 75, 122, 22, 133, 149, 15, 9, 168, 64, 241, 71, 208, 78, 25, 116, 40, ...
    8, 149, 8, 46, 7, 82, 201, 133, 186, 100, 159, 145, 52, 161, 81, 254, 25, 17, 109, 50, ...
    211, 162, 146, 195, 100, 45, 31, 10, 20, 142, 78, 196, 163, 21, 5, 41, 227, 68, 58, 200, ...
    175, 172, 51, 33, 173, 52, 105, 69, 180, 169, 210, 148, 96, 116, 45, 47, 117, 167, 66, 51, ...
    66, 211, 154, 150, 68, 158, 223, 36, 169, 77, 60, 234, 145, 158, 250, 52, 115, 44, 157, 11, ...
    15, 205, 182, 19, 163, 42, 243, 157, 71, 37, 201, 62, 251, 146, 83, 53, 53, 21, 170, 183, ...
    156, 104, 84, 69, 2, 212, 160, 170, 83, 39, 59, 125, 106, 68, 183, 10, 146, 164, 182, 212, ...
    165, 96, 197, 234, 42, 181, 74, 214, 142, 220, 148, 159, 91, 169, 42, 65, 198, 106, 18, 153, ...
    182, 213, 34, 111, 205, 40, 90, 175, 250, 209, 147, 136, 243, 174, 134, 51, 235, 27, 67, 195, ...
    147, 191, 166, 196, 174, 128, 141, 72, 94, 245, 234, 21, 185, 82, 52, 165, 43, 233, 107, 98, ...
    41, 178, 216, 88, 106, 52, 173, 144, 61, 172, 97, 39, 123, 55, 193, 14, 246, 178, 57, 145, ...
    172, 102, 51, 203, 89, 136, 84, 54, 131, 132, 13, 173, 104, 81, 130, 216, 210, 42, 228, 180, ...
    115, 140, 43, 102, 99, 178, 89, 215, 255, 54, 4, 182, 142, 85, 137, 92, 107, 27, 89, 222, ...
    218, 22, 33, 176, 141, 173, 86, 118, 75, 218, 150, 248, 246, 183, 6, 9, 110, 110, 85, 131, ...
    147, 227, 246, 182, 184, 200, 181, 154, 103, 207, 218, 216, 230, 174, 150, 37, 173, 69, 110, 112, ...
    133, 139, 149, 170, 58, 23, 187, 215, 213, 238, 118, 151, 123, 146, 156, 126, 23, 188, 225, 181, ...
    237, 118, 185, 123, 21, 243, 66, 151, 182, 233, 117, 237, 122, 201, 43, 187, 161, 198, 23, 189, ...
    239, 253, 237, 124, 187, 146, 69, 246, 142, 22, 179, 249, 45, 237, 122, 253, 155, 148, 179, 209, ...
    228, 188, 47, 65, 112, 98, 247, 91, 21, 39, 234, 145, 186, 46, 185, 111, 130, 21, 124, 87, ...
    6, 83, 197, 193, 43, 156, 9, 133, 35, 44, 225, 182, 14, 152, 190, 10, 1, 163, 183, 10, ...
    130, 225, 186, 105, 56, 192, 7, 238, 240, 86, 63, 124, 20, 84, 42, 196, 137, 112, 65, 143, ...
    183, 198, 200, 83, 21, 79, 24, 197, 21, 158, 238, 72, 137, 82, 162, 23, 60, 234, 197, 253, ...
    81, 20, 36, 125, 185, 97, 152, 20, 185, 166, 58, 54, 177, 81, 124, 108, 38, 5, 133, 135, ...
    136, 168, 189, 177, 48, 125, 146, 221, 21, 39, 121, 199, 75, 254, 177, 67, 248, 3, 87, 149, ...
    28, 217, 200, 56, 142, 234, 128, 163, 60, 20, 38, 143, 216, 60, 79, 238, 50, 107, 109, 12, ...
    95, 54, 91, 116, 255, 204, 4, 206, 137, 153, 29, 130, 69, 53, 251, 53, 204, 246, 197, 179, ...
    74, 187, 90, 68, 164, 204, 185, 32, 106, 124, 197, 64, 134, 248, 89, 227, 234, 185, 38, 85, ...
    246, 41, 156, 227, 124, 147, 63, 143, 44, 45, 106, 204, 81, 2, 224, 210, 95, 50, 123, 217, ...
    205, 39, 62, 244, 66, 225, 12, 226, 132, 56, 250, 31, 96, 84, 163, 19, 23, 82, 74, 76, ...
    103, 218, 212, 212, 228, 180, 159, 181, 252, 232, 238, 52, 242, 203, 136, 102, 171, 149, 27, 186, ...
    145, 78, 215, 50, 46, 149, 78, 39, 122, 235, 41, 107, 49, 95, 25, 203, 66, 225, 114, 173, ...
    57, 172, 233, 155, 132, 117, 207, 191, 134, 48, 83, 13, 93, 236, 60, 211, 85, 209, 201, 86, ...
    182, 108, 241, 203, 235, 94, 67, 219, 152, 30, 177, 117, 84, 96, 29, 235, 103, 95, 27, 219, ...
    29, 209, 246, 104, 136, 29, 78, 111, 35, 57, 218, 210, 198, 202, 162, 23, 194, 237, 110, 155, ...
    251, 205, 232, 78, 119, 85, 208, 185, 230, 166, 144, 51, 209, 220, 92, 183, 165, 213, 77, 239, ...
    146, 180, 27, 192, 83, 62, 55, 173, 195, 189, 192, 67, 213, 181, 217, 84, 254, 55, 25, 249, ...
    156, 17, 113, 187, 213, 224, 36, 81, 56, 192, 143, 170, 111, 70, 191, 178, 223, 33, 121, 183, ...
    82, 52, 110, 206, 138, 59, 124, 35, 222, 20, 9, 190, 55, 42, 241, 30, 50, 188, 225, 96, ...
    255, 129, 248, 90, 71, 126, 208, 146, 211, 176, 226, 22, 127, 138, 202, 59, 162, 214, 109, 187, ...
    28, 133, 156, 166, 49, 83, 78, 206, 206, 154, 75, 83, 224, 224, 206, 54, 4, 227, 61, 215, ...
    99, 151, 251, 230, 34, 36, 186, 188, 219, 203, 115, 138, 24, 157, 41, 44, 167, 35, 204, 247, ...
    29, 215, 166, 59, 221, 218, 210, 12, 120, 199, 149, 190, 244, 1, 241, 50, 171, 81, 39, 57, ...
    170, 95, 206, 245, 66, 87, 215, 234, 39, 69, 120, 203, 145, 238, 191, 169, 155, 133, 46, 139, ...
    102, 123, 79, 194, 126, 68, 183, 127, 124, 49, 62, 131, 179, 220, 11, 75, 119, 178, 15, 28, ...
    239, 244, 252, 250, 70, 246, 62, 119, 194, 91, 207, 237, 49, 167, 208, 64, 208, 238, 16, 195, ...
    243, 85, 237, 28, 68, 252, 221, 133, 158, 247, 120, 59, 254, 241, 249, 150, 60, 56, 43, 31, ...
    244, 153, 94, 94, 181, 99, 87, 160, 224, 45, 183, 121, 198, 51, 228, 243, 160, 15, 253, 253, ...
    48, 46, 146, 201, 115, 70, 186, 219, 69, 125, 234, 181, 46, 245, 209, 147, 254, 171, 176, 255, ...
    187, 68, 101, 111, 93, 213, 139, 47, 228, 189, 33, 169, 233, 97, 234, 251, 163, 244, 125, 245, ...
    192, 111, 189, 80, 135, 127, 16, 222, 207, 222, 146, 201, 87, 62, 238, 115, 223, 249, 142, 66, ...
    254, 232, 197, 79, 222, 204, 131, 63, 253, 197, 51, 255, 177, 215, 135, 186, 255, 243, 49, 199, ...
    122, 233, 119, 223, 251, 58, 30, 63, 230, 161, 95, 118, 37, 103, 229, 204, 142, 249, 190, 64, ...
    212, 63, 241, 68, 34, 222, 178, 85, 17, 49, 132, 229, 79, 255, 231, 219, 191, 253, 192, 38, ...
    21, 248, 194, 106, 140, 197, 121, 158, 23, 126, 246, 214, 127, 136, 115, 127, 248, 71, 21, 159, ...
    214, 128, 255, 96, 123, 9, 149, 125, 27, 119, 124, 191, 7, 128, 1, 232, 128, 4, 152, 65, ...
    132, 241, 125, 10, 232, 127, 108, 196, 128, 84, 7, 21, 76, 198, 60, 91, 132, 126, 213, 7, ...
    80, 20, 136, 125, 180, 103, 114, 186, 199, 125, 86, 241, 128, 35, 56, 124, 31, 88, 127, 82, ...
    36, 127, 125, 118, 21, 50, 24, 91, 18, 200, 110, 43, 200, 130, 11, 135, 129, 238, 167, 129, ...
    77, 102, 118, 5, 193, 120, 22, 56, 21, 28, 247, 64, 34, 8, 129, 81, 177, 131, 171, 129, ...
    132, 8, 40, 21, 73, 40, 60, 77, 152, 120, 69, 1, 133, 12, 97, 117, 53, 200, 119, 63, ...
    56, 58, 87, 136, 133, 68, 97, 102, 97, 84, 128, 71, 104, 67, 93, 232, 133, 83, 216, 58, ...
    97, 232, 122, 15, 97, 43, 39, 56, 130, 156, 151, 130, 224, 215, 130, 102, 177, 132, 200, 247, ...
    130, 48, 136, 70, 104, 177, 133, 30, 148, 134, 143, 7, 136, 112, 35, 132, 67, 184, 87, 175, ...
    245, 135, 95, 152, 128, 88, 215, 118, 132, 152, 129, 253, 255, 116, 91, 0, 36, 136, 0, 39, ...
    137, 125, 164, 135, 123, 104, 136, 11, 113, 114, 148, 104, 108, 62, 71, 64, 97, 40, 135, 221, ...
    229, 16, 61, 88, 135, 118, 241, 116, 233, 211, 136, 133, 248, 136, 144, 152, 68, 155, 216, 123, ...
    85, 104, 58, 159, 8, 138, 237, 245, 16, 124, 214, 138, 156, 136, 135, 208, 131, 131, 26, 225, ...
    134, 187, 104, 90, 18, 104, 139, 198, 54, 78, 192, 24, 45, 177, 40, 134, 78, 241, 28, 42, ...
    247, 138, 91, 49, 140, 44, 131, 138, 142, 168, 138, 171, 232, 61, 204, 104, 131, 121, 104, 137, ...
    183, 119, 126, 153, 72, 111, 211, 56, 91, 162, 231, 140, 207, 184, 108, 162, 168, 141, 137, 88, ...
    21, 202, 24, 57, 197, 104, 140, 77, 1, 28, 222, 180, 141, 0, 214, 141, 214, 120, 141, 169, ...
    229, 135, 226, 184, 134, 92, 81, 142, 139, 115, 142, 188, 168, 18, 16, 199, 142, 237, 88, 141, ...
    182, 33, 84, 135, 8, 42, 252, 72, 141, 220, 83, 140, 113, 8, 141, 180, 136, 55, 3, 217, ...
    143, 167, 248, 142, 185, 67, 75, 249, 88, 25, 148, 133, 33, 11, 201, 144, 185, 232, 141, 25, ...
    22, 143, 18, 113, 33, 21, 73, 144, 86, 136, 145, 169, 8, 142, 27, 105, 32, 29, 105, 145, ...
    198, 115, 142, 178, 56, 139, 19, 25, 31, 227, 216, 21, 37, 25, 28, 40, 153, 146, 3, 130, ...
    87, 246, 56, 22, 47, 201, 27, 49, 255, 137, 142, 40, 82, 17, 44, 217, 146, 46, 121, 147, ...
    186, 145, 147, 17, 41, 145, 60, 9, 148, 169, 167, 125, 66, 185, 121, 87, 71, 143, 100, 97, ...
    148, 179, 145, 147, 58, 185, 20, 158, 242, 73, 116, 152, 24, 78, 217, 26, 80, 57, 148, 22, ...
    241, 47, 148, 4, 146, 84, 113, 149, 167, 161, 139, 148, 167, 145, 105, 87, 72, 94, 169, 132, ...
    96, 89, 26, 80, 25, 149, 5, 214, 115, 102, 121, 150, 84, 232, 147, 56, 179, 150, 90, 89, ...
    17, 83, 57, 73, 98, 201, 22, 105, 137, 68, 85, 25, 27, 0, 57, 129, 111, 9, 151, 113, ...
    201, 148, 131, 232, 144, 229, 165, 148, 187, 87, 73, 121, 185, 22, 123, 121, 25, 107, 201, 150, ...
    109, 185, 148, 136, 244, 152, 21, 72, 152, 65, 243, 152, 117, 105, 151, 7, 56, 135, 125, 121, ...
    24, 141, 153, 66, 130, 217, 117, 51, 89, 150, 194, 180, 152, 103, 81, 147, 149, 216, 153, 186, ...
    133, 152, 141, 247, 81, 166, 121, 154, 114, 73, 140, 161, 41, 154, 137, 147, 152, 153, 245, 154, ...
    101, 129, 154, 46, 67, 153, 153, 41, 65, 148, 102, 103, 58, 213, 87, 184, 153, 155, 177, 137, ...
    40, 148, 9, 153, 58, 1, 99, 33, 73, 124, 28, 53, 138, 144, 161, 155, 117, 100, 152, 204, ...
    213, 96, 144, 182, 156, 205, 87, 115, 195, 217, 148, 197, 121, 37, 199, 233, 134, 105, 1, 101, ...
    6, 81, 98, 223, 255, 120, 157, 214, 150, 157, 98, 1, 157, 178, 57, 155, 180, 105, 19, 153, ...
    2, 106, 249, 114, 102, 24, 246, 158, 111, 68, 75, 204, 105, 110, 230, 121, 158, 159, 9, 24, ...
    234, 57, 158, 59, 193, 31, 148, 18, 30, 185, 198, 36, 113, 161, 40, 51, 70, 159, 42, 184, ...
    136, 199, 89, 109, 249, 121, 23, 9, 154, 101, 237, 65, 104, 11, 97, 15, 143, 4, 156, 117, ...
    200, 91, 247, 25, 22, 139, 200, 54, 9, 250, 113, 105, 86, 42, 242, 25, 161, 29, 234, 132, ...
    247, 244, 110, 206, 169, 24, 166, 136, 53, 13, 234, 112, 19, 234, 161, 114, 4, 35, 33, 42, ...
    147, 243, 151, 94, 23, 234, 21, 39, 42, 54, 251, 185, 158, 51, 177, 162, 67, 116, 102, 36, ...
    118, 46, 34, 74, 158, 118, 136, 130, 210, 89, 138, 157, 168, 161, 55, 106, 132, 61, 161, 163, ...
    104, 210, 162, 255, 32, 104, 3, 177, 164, 72, 58, 162, 56, 54, 163, 203, 88, 164, 101, 211, ...
    160, 200, 105, 74, 225, 33, 43, 67, 210, 106, 145, 246, 160, 101, 72, 161, 49, 58, 165, 88, ...
    10, 81, 86, 186, 53, 88, 170, 162, 29, 106, 47, 94, 218, 68, 60, 244, 28, 20, 70, 165, ...
    90, 225, 84, 70, 58, 164, 171, 57, 20, 146, 34, 159, 142, 50, 33, 161, 230, 85, 13, 17, ...
    167, 101, 74, 20, 103, 218, 70, 71, 26, 165, 60, 225, 159, 127, 194, 73, 14, 5, 152, 65, ...
    255, 122, 134, 129, 42, 168, 232, 217, 49, 133, 106, 168, 135, 170, 40, 40, 199, 168, 190, 56, ...
    169, 64, 88, 167, 118, 122, 167, 100, 121, 160, 122, 86, 162, 143, 129, 139, 187, 41, 167, 68, ...
    249, 169, 245, 57, 146, 157, 234, 23, 164, 26, 157, 154, 106, 134, 34, 233, 131, 135, 102, 170, ...
    95, 209, 170, 205, 40, 170, 255, 248, 151, 193, 169, 105, 229, 119, 25, 182, 106, 156, 219, 103, ...
    19, 189, 217, 24, 173, 89, 108, 193, 42, 25, 191, 154, 128, 50, 23, 125, 53, 49, 172, 5, ...
    245, 167, 205, 118, 172, 200, 26, 169, 235, 183, 20, 204, 218, 172, 172, 9, 164, 43, 137, 171, ...
    38, 74, 173, 183, 152, 150, 210, 74, 19, 206, 186, 168, 178, 218, 168, 79, 19, 174, 145, 225, ...
    173, 238, 166, 174, 43, 69, 171, 57, 136, 170, 187, 186, 173, 238, 74, 163, 236, 90, 84, 230, ...
    58, 166, 53, 10, 20, 143, 154, 165, 157, 2, 158, 46, 145, 27, 176, 118, 173, 153, 81, 175, ...
    98, 69, 90, 40, 149, 172, 209, 243, 170, 148, 154, 109, 58, 247, 122, 167, 103, 106, 232, 58, ...
    173, 11, 121, 176, 20, 75, 176, 92, 181, 175, 217, 35, 108, 56, 33, 27, 255, 214, 171, 158, ...
    129, 176, 204, 86, 177, 34, 11, 31, 10, 187, 176, 189, 225, 175, 86, 85, 174, 159, 179, 175, ...
    254, 100, 177, 22, 33, 178, 204, 84, 177, 206, 84, 178, 74, 117, 144, 34, 255, 49, 128, 0, ...
    48, 41, 185, 10, 170, 129, 69, 179, 155, 170, 134, 116, 90, 16, 226, 116, 111, 32, 123, 81, ...
    101, 186, 23, 253, 67, 50, 160, 86, 30, 41, 195, 18, 28, 91, 124, 44, 107, 124, 46, 107, ...
    125, 249, 10, 170, 219, 217, 179, 170, 57, 19, 73, 155, 29, 119, 34, 50, 47, 177, 26, 72, ...
    23, 181, 98, 7, 74, 247, 122, 105, 65, 75, 154, 134, 181, 137, 243, 122, 169, 40, 209, 42, ...
    203, 81, 132, 184, 161, 178, 28, 33, 182, 99, 59, 181, 64, 122, 182, 146, 137, 82, 54, 177, ...
    182, 167, 138, 18, 47, 144, 29, 142, 34, 174, 60, 235, 17, 116, 187, 118, 69, 171, 17, 68, ...
    101, 153, 7, 187, 183, 62, 43, 166, 181, 41, 165, 132, 201, 183, 244, 122, 184, 19, 184, 171, ...
    22, 171, 183, 52, 33, 182, 25, 219, 14, 59, 65, 26, 132, 39, 185, 245, 152, 161, 136, 59, ...
    178, 207, 53, 168, 54, 165, 185, 38, 97, 47, 97, 42, 184, 169, 90, 86, 133, 27, 20, 52, ...
    85, 182, 104, 139, 183, 119, 38, 186, 43, 65, 183, 239, 51, 30, 153, 18, 160, 41, 11, 185, ...
    23, 187, 170, 127, 65, 177, 246, 74, 84, 109, 102, 187, 33, 213, 184, 142, 219, 17, 142, 130, ...
    14, 40, 235, 180, 131, 235, 186, 192, 27, 188, 194, 59, 120, 196, 43, 19, 85, 43, 85, 200, ...
    155, 188, 30, 241, 11, 90, 219, 186, 33, 1, 186, 196, 255, 100, 90, 48, 43, 187, 150, 107, ...
    188, 33, 11, 136, 133, 91, 66, 203, 219, 189, 190, 139, 84, 209, 203, 21, 196, 227, 38, 93, ...
    201, 15, 139, 91, 116, 208, 85, 191, 179, 119, 181, 192, 133, 187, 43, 177, 187, 216, 218, 190, ...
    191, 251, 190, 252, 182, 60, 197, 228, 35, 129, 73, 191, 244, 59, 190, 21, 138, 185, 64, 75, ...
    190, 208, 107, 20, 7, 180, 186, 236, 27, 175, 63, 149, 189, 70, 91, 192, 24, 156, 193, 227, ...
    171, 192, 63, 65, 185, 120, 245, 186, 246, 83, 34, 27, 11, 192, 216, 43, 192, 243, 150, 193, ...
    6, 183, 43, 6, 188, 193, 255, 116, 111, 102, 74, 127, 224, 219, 183, 35, 193, 166, 35, 76, ...
    158, 199, 155, 181, 93, 129, 194, 84, 68, 80, 242, 81, 37, 28, 172, 136, 250, 27, 129, 22, ...
    172, 189, 245, 193, 185, 12, 114, 34, 172, 43, 180, 87, 251, 186, 38, 129, 193, 25, 177, 194, ...
    12, 156, 117, 14, 140, 181, 45, 198, 18, 91, 82, 173, 237, 106, 194, 162, 36, 176, 138, 5, ...
    197, 30, 220, 193, 22, 27, 195, 50, 108, 74, 72, 188, 179, 246, 59, 197, 79, 60, 196, 77, ...
    204, 197, 119, 35, 196, 61, 73, 149, 56, 92, 183, 104, 204, 147, 106, 12, 171, 195, 165, 173, ...
    250, 88, 199, 1, 204, 173, 127, 147, 192, 243, 27, 199, 114, 60, 199, 170, 10, 200, 255, 251, ...
    169, 83, 43, 198, 153, 139, 78, 132, 255, 60, 200, 129, 57, 167, 168, 135, 200, 239, 58, 195, ...
    133, 176, 49, 249, 114, 86, 48, 204, 196, 115, 203, 199, 15, 23, 177, 64, 108, 153, 142, 186, ...
    200, 73, 76, 18, 62, 6, 38, 138, 58, 195, 104, 226, 158, 114, 100, 24, 253, 7, 201, 23, ...
    12, 186, 5, 156, 21, 95, 28, 144, 90, 220, 187, 39, 225, 40, 138, 242, 157, 36, 129, 168, ...
    52, 220, 128, 10, 136, 201, 31, 236, 177, 21, 204, 198, 157, 44, 200, 209, 24, 153, 41, 97, ...
    15, 165, 28, 18, 62, 246, 160, 75, 154, 74, 20, 204, 18, 172, 140, 84, 212, 7, 202, 31, ...
    33, 204, 44, 72, 204, 242, 168, 20, 33, 124, 202, 65, 180, 166, 205, 156, 55, 148, 81, 131, ...
    190, 92, 204, 192, 220, 202, 179, 92, 120, 114, 23, 205, 91, 105, 74, 104, 146, 204, 33, 161, ...
    164, 31, 26, 101, 93, 56, 206, 231, 250, 202, 58, 161, 201, 149, 185, 130, 234, 172, 153, 169, ...
    59, 201, 253, 187, 165, 30, 18, 207, 1, 52, 207, 251, 156, 198, 246, 60, 60, 5, 45, 114, ...
    230, 27, 142, 231, 252, 175, 85, 1, 207, 254, 218, 23, 65, 92, 207, 244, 204, 153, 44, 139, ...
    207, 10, 90, 133, 9, 77, 172, 128, 4, 208, 181, 82, 201, 145, 36, 136, 229, 220, 77, 7, ...
    29, 79, 27, 189, 114, 148, 123, 210, 228, 42, 128, 107, 10, 160, 25, 133, 190, 35, 173, 175, ...
    156, 172, 62, 42, 255, 61, 188, 10, 87, 209, 227, 42, 16, 203, 156, 0, 123, 58, 99, 103, ...
    60, 19, 214, 220, 19, 65, 205, 184, 24, 109, 184, 22, 88, 211, 186, 166, 73, 225, 81, 30, ...
    0, 160, 168, 123, 1, 211, 51, 45, 212, 49, 157, 176, 21, 93, 159, 135, 91, 213, 57, 237, ...
    161, 157, 241, 212, 19, 205, 53, 81, 141, 208, 72, 205, 208, 122, 92, 172, 41, 61, 214, 38, ...
    59, 154, 194, 136, 205, 155, 92, 212, 68, 253, 38, 212, 220, 214, 13, 237, 108, 237, 22, 214, ...
    243, 132, 123, 118, 187, 191, 67, 61, 80, 113, 13, 212, 63, 242, 214, 249, 171, 118, 85, 173, ...
    214, 59, 153, 214, 112, 77, 215, 211, 124, 73, 121, 13, 198, 11, 253, 201, 64, 108, 215, 93, ...
    157, 137, 156, 41, 20, 134, 45, 175, 108, 77, 101, 105, 61, 197, 21, 189, 216, 168, 129, 175, ...
    96, 221, 184, 149, 45, 217, 137, 45, 20, 81, 71, 207, 166, 91, 155, 119, 157, 169, 52, 91, ...
    213, 98, 61, 217, 164, 137, 218, 126, 109, 189, 165, 141, 67, 194, 120, 78, 9, 250, 217, 227, ...
    19, 218, 176, 171, 98, 172, 13, 185, 177, 204, 55, 132, 109, 210, 57, 105, 76, 187, 109, 208, ...
    182, 173, 216, 120, 70, 218, 177, 189, 217, 252, 88, 220, 153, 108, 37, 195, 141, 181, 170, 125, ...
    183, 171, 45, 126, 189, 205, 55, 21, 201, 220, 125, 252, 213, 91, 60, 213, 82, 123, 95, 207, ...
    255, 125, 183, 158, 236, 28, 29, 137, 221, 148, 29, 221, 157, 197, 221, 99, 91, 204, 141, 173, ...
    78, 227, 77, 222, 131, 252, 221, 213, 236, 222, 88, 236, 213, 102, 173, 196, 225, 253, 26, 37, ...
    137, 222, 208, 13, 223, 208, 91, 223, 15, 123, 93, 252, 109, 223, 2, 144, 213, 100, 77, 76, ...
    242, 45, 143, 250, 61, 192, 254, 93, 174, 90, 151, 224, 124, 197, 175, 134, 139, 20, 14, 126, ...
    222, 218, 221, 35, 230, 253, 204, 22, 253, 218, 176, 93, 73, 4, 254, 223, 247, 157, 197, 92, ...
    167, 195, 110, 113, 224, 174, 56, 101, 21, 142, 89, 54, 11, 203, 213, 109, 206, 3, 134, 194, ...
    12, 26, 224, 30, 62, 205, 123, 93, 186, 48, 106, 115, 167, 221, 220, 250, 77, 107, 192, 167, ...
    225, 39, 124, 225, 164, 232, 198, 36, 78, 110, 53, 46, 197, 31, 14, 226, 140, 215, 215, 37, ...
    173, 159, 48, 110, 181, 64, 190, 228, 127, 213, 225, 188, 253, 216, 132, 235, 196, 66, 188, 120, ...
    66, 154, 228, 138, 17, 228, 167, 54, 153, 90, 190, 107, 63, 250, 149, 201, 45, 213, 58, 60, ...
    230, 93, 238, 21, 62, 142, 175, 134, 84, 230, 102, 59, 101, 80, 46, 224, 55, 190, 214, 100, ...
    62, 230, 124, 185, 224, 169, 186, 228, 156, 253, 229, 96, 190, 226, 255, 19, 231, 46, 94, 67, ...
    118, 14, 185, 116, 126, 231, 120, 142, 150, 111, 62, 229, 42, 196, 34, 114, 255, 206, 26, 106, ...
    14, 102, 120, 201, 227, 27, 30, 112, 109, 238, 78, 227, 244, 41, 85, 158, 144, 139, 62, 116, ...
    129, 46, 221, 235, 61, 232, 42, 137, 233, 153, 78, 213, 159, 46, 224, 217, 164, 117, 145, 110, ...
    157, 240, 27, 234, 157, 61, 227, 49, 225, 199, 69, 94, 187, 56, 186, 217, 103, 225, 232, 127, ...
    113, 233, 183, 251, 198, 173, 30, 113, 162, 85, 234, 252, 25, 74, 180, 126, 188, 215, 123, 139, ...
    187, 30, 138, 155, 214, 235, 193, 124, 217, 82, 238, 150, 45, 168, 235, 103, 205, 126, 19, 174, ...
    215, 198, 126, 236, 155, 25, 236, 104, 61, 236, 196, 222, 223, 104, 222, 145, 199, 165, 236, 68, ...
    28, 130, 39, 158, 200, 7, 242, 235, 41, 246, 94, 218, 110, 199, 205, 132, 219, 12, 245, 237, ...
    97, 30, 238, 65, 58, 238, 156, 206, 236, 213, 190, 214, 103, 92, 232, 182, 153, 145, 160, 37, ...
    80, 88, 78, 219, 198, 4, 238, 140, 190, 238, 94, 209, 95, 236, 158, 32, 247, 222, 217, 146, ...
    174, 217, 197, 75, 239, 84, 97, 96, 240, 102, 238, 208, 28, 137, 252, 136, 98, 89, 45, 158, ...
    175, 46, 117, 77, 158, 189, 24, 196, 142, 231, 245, 240, 213, 105, 234, 249, 244, 238, 191, 12, ...
    173, 208, 238, 241, 125, 104, 20, 183, 236, 39, 60, 10, 241, 203, 158, 121, 129, 138, 134, 204, ...
    136, 96, 119, 23, 72, 229, 177, 167, 1, 10, 99, 223, 255, 153, 0, 5, 154, 226, 27, 95, ...
    166, 73, 181, 242, 97, 246, 113, 227, 241, 160, 47, 122, 31, 65, 38, 72, 237, 190, 117, 28, ...
    111, 233, 104, 123, 148, 33, 95, 102, 32, 189, 163, 40, 19, 30, 219, 94, 238, 69, 143, 224, ...
    71, 239, 138, 117, 29, 20, 16, 205, 163, 131, 246, 243, 255, 62, 46, 81, 47, 203, 132, 44, ...
    239, 162, 94, 245, 64, 113, 245, 32, 10, 210, 67, 111, 239, 251, 188, 88, 155, 72, 97, 106, ...
    218, 212, 1, 141, 245, 3, 81, 103, 228, 254, 109, 170, 126, 222, 200, 46, 216, 52, 167, 103, ...
    182, 230, 246, 194, 6, 161, 3, 17, 104, 131, 6, 165, 79, 79, 244, 40, 121, 90, 96, 255, ...
    219, 73, 175, 19, 3, 200, 32, 30, 221, 165, 238, 249, 68, 146, 246, 155, 39, 159, 240, 98, ...
    12, 91, 146, 168, 98, 109, 239, 243, 101, 216, 167, 2, 186, 26, 91, 111, 51, 174, 220, 195, ...
    38, 92, 232, 182, 250, 113, 203, 252, 242, 31, 10, 70, 43, 45, 96, 124, 219, 236, 150, 75, ...
    108, 108, 198, 243, 112, 232, 246, 145, 44, 95, 34, 232, 250, 120, 140, 95, 154, 214, 242, 38, ...
    224, 176, 250, 165, 240, 171, 61, 96, 46, 251, 235, 159, 31, 93, 19, 63, 163, 221, 206, 228, ...
    163, 245, 171, 91, 95, 252, 115, 9, 252, 217, 136, 251, 188, 189, 102, 4, 15, 225, 67, 225, ...
    252, 169, 153, 157, 1, 95, 99, 197, 255, 9, 238, 205, 111, 252, 25, 222, 208, 84, 14, 118, ...
    122, 238, 230, 71, 246, 253, 224, 63, 254, 196, 45, 253, 12, 78, 120, 250, 142, 254, 233, 159, ...
    193, 191, 12, 253, 100, 253, 133, 8, 213, 108, 159, 143, 253, 207, 47, 255, 239, 13, 146, 233, ...
    94, 255, 0, 241, 79, 224, 64, 130, 5, 13, 14, 4, 112, 80, 225, 66, 134, 13, 29, 62, ...
    132, 24, 241, 95, 66, 137, 21, 45, 94, 196, 152, 81, 227, 70, 142, 29, 61, 126, 140, 200, ...
    79, 36, 191, 129, 35, 77, 254, 35, 9, 209, 228, 72, 144, 21, 5, 188, 132, 9, 179, 101, ...
    204, 151, 29, 41, 182, 196, 153, 83, 225, 77, 157, 61, 125, 254, 4, 26, 84, 40, 72, 145, ...
    37, 87, 158, 36, 88, 212, 232, 81, 165, 67, 7, 210, 164, 249, 17, 234, 71, 158, 78, 173, ...
    70, 172, 122, 85, 235, 86, 174, 93, 189, 54, 100, 202, 18, 229, 201, 176, 94, 161, 78, 21, ...
    160, 49, 42, 200, 172, 95, 187, 182, 117, 27, 87, 238, 92, 186, 28, 195, 222, 21, 235, 246, ...
    236, 217, 140, 107, 169, 214, 125, 11, 88, 240, 96, 194, 133, 151, 226, 93, 41, 23, 237, 94, ...
    151, 50, 115, 194, 53, 252, 56, 242, 100, 202, 149, 175, 34, 78, 9, 184, 230, 83, 190, 105, ...
    25, 78, 245, 8, 64, 244, 104, 203, 63, 33, 151, 70, 157, 90, 181, 202, 178, 165, 247, 122, ...
    22, 184, 249, 31, 255, 104, 140, 163, 73, 175, 54, 141, 91, 247, 110, 222, 135, 19, 171, 230, ...
    59, 59, 166, 112, 199, 18, 109, 159, 238, 253, 55, 249, 114, 230, 147, 91, 167, 126, 253, 26, ...
    226, 113, 228, 205, 149, 91, 199, 158, 221, 45, 211, 221, 209, 253, 26, 164, 206, 150, 128, 118, ...
    134, 213, 201, 159, 71, 79, 180, 41, 239, 180, 222, 11, 30, 199, 105, 207, 132, 232, 91, 0, ...
    8, 36, 72, 79, 208, 124, 126, 254, 253, 253, 31, 124, 45, 60, 170, 192, 33, 200, 158, 0, ...
    0, 160, 231, 31, 3, 1, 64, 199, 191, 253, 254, 131, 48, 194, 243, 164, 3, 73, 190, 209, ...
    230, 27, 79, 160, 23, 236, 195, 207, 194, 12, 249, 123, 80, 66, 17, 71, 220, 109, 52, 198, ...
    64, 250, 5, 65, 5, 83, 84, 241, 159, 3, 51, 244, 16, 63, 16, 73, 164, 177, 198, 18, ...
    225, 139, 141, 182, 143, 126, 145, 241, 31, 22, 27, 92, 144, 64, 5, 49, 236, 49, 189, 16, ...
    109, 68, 50, 201, 171, 4, 84, 168, 61, 216, 124, 170, 143, 65, 5, 15, 20, 50, 198, 254, ...
    142, 84, 50, 75, 45, 169, 178, 109, 176, 3, 85, 12, 82, 32, 43, 243, 195, 114, 75, 51, ...
    207, 116, 136, 73, 194, 236, 17, 237, 190, 41, 1, 168, 242, 197, 43, 209, 164, 179, 78, 172, ...
    112, 180, 44, 202, 4, 223, 132, 241, 192, 6, 103, 180, 51, 80, 7, 55, 194, 83, 181, 48, ...
    255, 197, 220, 208, 205, 250, 220, 4, 84, 80, 71, 209, 59, 82, 77, 221, 14, 29, 104, 193, ...
    4, 133, 28, 244, 81, 77, 181, 67, 78, 210, 228, 44, 204, 10, 212, 50, 123, 27, 117, 83, ...
    83, 13, 203, 170, 208, 236, 64, 5, 103, 180, 34, 71, 44, 245, 84, 89, 1, 163, 46, 214, ...
    212, 162, 188, 45, 73, 91, 103, 229, 117, 43, 79, 123, 77, 110, 87, 96, 135, 125, 76, 85, ...
    98, 117, 123, 85, 32, 97, 143, 101, 246, 34, 99, 155, 197, 45, 202, 100, 39, 130, 182, 90, ...
    157, 126, 181, 214, 208, 47, 69, 75, 118, 217, 108, 155, 197, 54, 35, 41, 191, 149, 107, 195, ...
    182, 188, 37, 119, 214, 103, 53, 10, 55, 221, 171, 204, 157, 246, 38, 116, 221, 69, 179, 93, ...
    139, 138, 100, 113, 79, 122, 227, 130, 247, 160, 46, 247, 101, 214, 94, 140, 164, 37, 40, 95, ...
    128, 249, 229, 214, 223, 131, 135, 93, 215, 163, 5, 93, 45, 88, 52, 125, 167, 93, 56, 168, ...
    126, 193, 171, 120, 83, 129, 113, 186, 88, 32, 22, 71, 35, 0, 0, 138, 51, 14, 13, 83, ...
    13, 19, 198, 152, 228, 122, 27, 30, 170, 99, 31, 43, 157, 15, 78, 149, 63, 122, 184, 45, ...
    151, 17, 154, 89, 73, 150, 183, 186, 185, 64, 57, 115, 6, 170, 103, 106, 129, 150, 112, 227, ...
    174, 132, 22, 243, 103, 162, 123, 130, 119, 92, 156, 151, 54, 114, 231, 186, 255, 144, 126, 243, ...
    79, 168, 91, 218, 86, 52, 133, 175, 22, 204, 86, 169, 11, 163, 58, 197, 15, 185, 118, 248, ...
    161, 121, 201, 14, 173, 34, 163, 39, 115, 249, 21, 55, 45, 68, 219, 170, 179, 227, 230, 168, ...
    211, 175, 85, 115, 217, 92, 209, 172, 166, 59, 168, 185, 251, 22, 23, 188, 127, 209, 211, 251, ...
    207, 20, 1, 215, 234, 111, 196, 45, 170, 181, 191, 172, 21, 95, 124, 186, 200, 19, 191, 27, ...
    59, 123, 38, 151, 11, 114, 204, 149, 29, 124, 115, 149, 53, 7, 124, 109, 207, 233, 5, 253, ...
    106, 209, 71, 95, 184, 244, 153, 43, 71, 61, 103, 213, 1, 62, 189, 33, 81, 9, 96, 180, ...
    117, 112, 109, 159, 136, 117, 135, 94, 61, 48, 193, 40, 249, 198, 157, 97, 207, 117, 135, 136, ...
    224, 74, 57, 228, 51, 120, 229, 53, 141, 93, 162, 172, 139, 76, 84, 76, 34, 151, 7, 246, ...
    117, 141, 137, 207, 232, 242, 127, 58, 62, 116, 76, 234, 213, 93, 26, 251, 150, 184, 167, 82, ...
    122, 228, 191, 7, 63, 227, 230, 125, 34, 95, 230, 33, 207, 71, 255, 84, 235, 109, 92, 191, ...
    101, 148, 223, 172, 18, 195, 248, 211, 183, 86, 124, 174, 218, 239, 147, 211, 246, 167, 177, 44, ...
    237, 170, 126, 110, 1, 96, 135, 2, 80, 187, 1, 50, 175, 128, 140, 243, 31, 96, 242, 214, ...
    187, 127, 212, 167, 129, 178, 154, 95, 101, 204, 19, 65, 255, 195, 184, 76, 84, 38, 187, 160, ...
    3, 117, 230, 47, 14, 86, 166, 112, 149, 10, 97, 245, 30, 120, 64, 213, 148, 48, 133, 91, ...
    202, 32, 170, 58, 231, 31, 3, 189, 48, 91, 49, 164, 11, 11, 109, 184, 67, 118, 57, 200, ...
    133, 60, 4, 98, 15, 207, 243, 195, 32, 22, 145, 80, 214, 209, 97, 160, 236, 81, 0, 35, ...
    106, 9, 135, 56, 73, 34, 66, 128, 103, 163, 41, 42, 136, 137, 77, 28, 97, 106, 136, 200, ...
    185, 92, 41, 233, 5, 211, 90, 34, 22, 179, 24, 153, 40, 26, 196, 96, 54, 146, 15, 223, ...
    106, 104, 144, 48, 138, 81, 87, 131, 41, 99, 67, 206, 40, 161, 23, 240, 237, 23, 181, 187, ...
    163, 143, 70, 131, 142, 4, 180, 209, 141, 244, 155, 203, 22, 37, 50, 199, 145, 53, 231, 22, ...
    224, 232, 16, 57, 10, 178, 198, 237, 37, 200, 64, 248, 185, 99, 31, 175, 248, 199, 26, 61, ...
    49, 119, 51, 220, 202, 199, 218, 36, 178, 244, 200, 135, 64, 95, 44, 72, 29, 197, 84, 136, ...
    87, 217, 131, 148, 126, 164, 36, 137, 172, 23, 199, 29, 81, 132, 85, 249, 249, 69, 61, 20, ...
    105, 70, 55, 253, 2, 83, 15, 187, 15, 42, 83, 41, 34, 205, 9, 50, 40, 11, 26, 27, ...
    121, 94, 80, 0, 48, 154, 160, 65, 47, 216, 211, 18, 59, 116, 202, 73, 238, 178, 104, 80, ...
    244, 165, 85, 128, 153, 31, 54, 233, 255, 107, 34, 127, 186, 69, 1, 16, 48, 201, 60, 110, ...
    47, 151, 205, 116, 38, 121, 246, 248, 158, 186, 69, 179, 43, 11, 170, 34, 118, 110, 129, 128, ...
    66, 8, 196, 130, 48, 35, 133, 213, 64, 69, 15, 19, 132, 243, 60, 154, 92, 72, 153, 204, ...
    41, 23, 177, 81, 179, 157, 183, 168, 162, 61, 82, 84, 72, 123, 106, 103, 142, 91, 107, 8, ...
    43, 235, 242, 138, 127, 116, 104, 62, 252, 185, 133, 35, 73, 89, 208, 43, 21, 242, 160, 41, ...
    123, 207, 62, 5, 243, 130, 144, 237, 141, 63, 126, 60, 36, 69, 211, 99, 60, 133, 24, 12, ...
    126, 79, 211, 168, 97, 88, 244, 31, 249, 88, 83, 164, 228, 169, 25, 39, 23, 162, 201, 152, ...
    189, 170, 139, 47, 197, 169, 110, 168, 182, 72, 74, 229, 212, 167, 203, 217, 233, 34, 149, 246, ...
    83, 162, 238, 38, 168, 62, 179, 79, 81, 149, 170, 211, 251, 57, 228, 71, 75, 133, 106, 106, ...
    118, 202, 208, 129, 232, 47, 170, 87, 165, 149, 104, 64, 232, 50, 61, 105, 232, 109, 192, 139, ...
    89, 82, 9, 138, 85, 178, 86, 232, 64, 11, 225, 170, 196, 184, 168, 181, 2, 169, 104, 81, ...
    233, 44, 107, 92, 237, 39, 83, 206, 237, 233, 23, 11, 49, 208, 219, 134, 42, 87, 190, 206, ...
    117, 92, 183, 136, 72, 244, 222, 199, 192, 190, 22, 54, 39, 89, 195, 72, 247, 166, 103, 88, ...
    198, 182, 68, 123, 75, 27, 81, 236, 73, 27, 59, 217, 175, 68, 150, 176, 148, 197, 172, 86, ...
    44, 155, 89, 206, 114, 101, 154, 85, 235, 108, 104, 165, 249, 34, 5, 210, 85, 180, 167, 253, ...
    137, 185, 124, 151, 84, 212, 182, 214, 39, 53, 3, 161, 107, 101, 91, 161, 122, 206, 214, 182, ...
    183, 197, 109, 110, 117, 187, 91, 222, 246, 214, 183, 191, 5, 110, 112, 133, 75, 167, 128, 0, ...
    0, 59];

fname = [tempname '.gif'];
fid = fopen(fname, 'w');
if fid > 0
  fwrite(fid, str');
  fclose(fid);
else
  errordlg('Error trying to create sample image.');
end