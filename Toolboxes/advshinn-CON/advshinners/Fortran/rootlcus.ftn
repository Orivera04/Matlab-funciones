 
C *** THIS PROGRAM LIST THE ROOT LOCUS OF AN EQUATION
C ***
C *** MAXZP IS THE MAXIMUM # OF POLES OR ZEROS ALLOWED IN THIS PROGRAM
      PARAMETER ( MAXZP = 5 )
C *** BRKACC IS THE ACCURACY OF THE BREAK POINTS ON THE REAL-AXIS
C *** DAXIS IS THE MOVEMENT DISTANCE OF THE PLOT POINTS 
C *** AXSMX IS THE MAXIMUM DISTANCE, FROM THE ORIGIN, TO PLOT
C *** MAXTRY IS THE # OF PARTS THE UNIT CIRCLE IS BROKEN INTO
C ***               FOR FINDING THE NEXT POINT ON THE LOCUS
      PARAMETER ( BRKACC=0.01, DAXIS=0.2, AXSMX=6.0, MAXTRY=360 )
C ***
      PARAMETER (MAXA = 2*MAXZP)
      COMPLEX GAINK,ZP(0:1,MAXZP),FREQ,G
      DIMENSION NZP(0:1),AXIS(MAXA),IZP(MAXA)
      CHARACTER*4 NAME(0:1) /'ZERO','POLE'/ 
C ************** PHASE 1
C *** INITIALIZE THE INPUT, & LIST IT OUT
      DO 100 I = 0,1
        READ(5,*)NZP(I),(ZP(I,J),J=1,NZP(I))
        WRITE(6,*)' THERE ARE INPUT',NZP(I),' ',NAME(I),'(S) AT : ' 
        DO 100 J = 1,NZP(I)
100     WRITE(6,*)ZP(I,J)
C ********** PHASE 2
C *** FIND THE REAL AXIS ZEROS & POLES
      NAXIS = 0
      DO 200 I = 0,1
        DO 200 J = 1,NZP(I)
          IF(IMAG(ZP(I,J)).NE.0)GO TO 210
          NAXIS = 1+NAXIS
          AXIS(NAXIS) = REAL(ZP(I,J))
          IZP(NAXIS) = I
210     CONTINUE
200   CONTINUE
C *** SORT THE LIST OF ZEROS AND POLES ON THE AXIS (LIST IN PHASE 3)
      DO 220 I = 1,NAXIS-1
        DO 220 J = I+1,NAXIS
          IF(AXIS(I).GE.AXIS(J))GO TO 220   @ NUMBER IS IN OREDER
          TEMP = AXIS(I)
          AXIS(I) = AXIS(J)
          AXIS(J) = TEMP
          ITEMP = IZP(I)
          IZP(I) = IZP(J)
          IZP(J) = ITEMP
220   CONTINUE
C ************** PHASE 3
C *** FIND THE BREAKS ON THE REAL AXIS
      WRITE(6,*)
      WRITE(6,*)' THE ROOT LOCUS SEGMENTS ON THE REAL AXIS ARE :'
      DO 300 I = 1,NAXIS-1,2
        WRITE(6,*)
        WRITE(6,*)NAME(IZP(I))&' AT',AXIS(I),', '&
     +            NAME(IZP(I+1))&' AT',AXIS(I+1)
        IF(IZP(I)+IZP(I+1).EQ.1)GO TO 300   @ NO BREAKS, POLE TO ZERO
        FREQ = CMPLX(AXIS(I))
        IF(AXIS(I).EQ.AXIS(I+1))GO TO 390   @ TWO POINTS ARE THE SAME
        OLDK = (1-IZP(I))*1.0E+30
310     ESTK = ABS(GAINK(FREQ-BRKACC,NZP,ZP))
        IF((IZP(I).EQ.0).AND.(ESTK.GE.OLDK))GO TO 390
        IF((IZP(I).EQ.1).AND.(ESTK.LE.OLDK))GO TO 390
        FREQ = FREQ-BRKACC
        OLDK = ESTK 
        IF(SNGL(FREQ-BRKACC).GT.AXIS(I+1))GO TO 310
        STOP 'ERROR IN DETRIMINING BREAK LOCATION'
390     WRITE(6,*)' WITH A BREAK AT ',SNGL(FREQ),' CONTINUING AS :' 
C ************** PHASE 5
C *** CONTINUE THE ROOT LOCUS FROM THE BREAK, TO WHERE-EVER
        WRITE(6,'(/42H    REAL(S)         IMAG(S)         ABS(K))') 
        ANGLE = 90.0*(3.1416/180)                @ BREAK ANGLE
        G = GAINK(FREQ+BRKACC/4,NZP,ZP)           @ GAIN NEAR BREAK 
510     CALL NEXT(FREQ,G,ANGLE,IZP(I),NZP,ZP)
C ************** PHASE 6
C *** PRINT OUT THE POSITIVE COMPLEX PLANE PORTION
C *** REFLECTION ONTO THE NEGATIVE COMPLEX PLANE IS ASSUMED
        WRITE(6,*)FREQ,ABS(G)
        IF(ABS(FREQ).GE.AXSMX)GO TO 300
        IF(AIMAG(FREQ).LE.0)GO TO 300
        J = IZP(I)
        DO 320 K = 1,NZP(1-J)
320       IF(ABS(FREQ-ZP(1-J,K)).LE.DAXIS/2)GO TO 510
        GO TO 510
300     CONTINUE
      WRITE(6,*)
      IF(MOD(NAXIS,2).EQ.1)
     +  WRITE(6,*)NAME(IZP(NAXIS))&' AT',AXIS(NAXIS),' TO -INFINITY'
C ************** PHASE 4
C *** DO ALL NON-REAL AXIS POLES/ZEROS IN THE POSITIVE COMPLEX PLANE
C *** REFLECTION ONTO THE NEGATIVE COMPLEX PLANE IS ASSUMED
      DO 400 I = 0,1
        DO 410 J = 1,NZP(I)
          FREQ = ZP(I,J)
          IF(IMAG(FREQ).LE.0)GO TO 410
          WRITE(6,*)' FOUND POSITIVE COMPLEX ',NAME(I),' AT :',ZP(I,J)
          G = (1-I)*1.0E+30
          ANGLE = 0.0
          WRITE(6,'(/42H    REAL(S)         IMAG(S)         ABS(K))')
420       CALL NEXT(FREQ,G,ANGLE,I,NZP,ZP)
          WRITE(6,*)FREQ,ABS(G) 
          IF(ABS(FREQ).GE.AXSMX)GO TO 410
          IF(AIMAG(FREQ).GT.0)GO TO 410
          DO 430 K = 1,NZP(1-I) 
430         IF(ABS(FREQ-ZP(1-I,K)).LE.DAXIS/2)GO TO 410 
          GO TO 420 
410     CONTINUE
400   CONTINUE
      STOP
C *********************************************************************
C ********** FUNCTION TO CALCULATE THE REQUIRED GAIN (K) @ THIS FREQ.
      COMPLEX FUNCTION GAINK(FREQ,NZP,ZP)
      COMPLEX FREQ,ZP(0:1,MAXZP)
      DIMENSION NZP(0:1)
      GAINK = (-1,0)
      DO 110 IP = 1,NZP(1)
110   GAINK = GAINK*(FREQ-ZP(1,IP))
      DO 120 IZ = 1,NZP(0)
120   GAINK = GAINK/(FREQ-ZP(0,IZ))
      RETURN
C ************** SUBROUTINE TO FIND THE NEXT POINT ON THE LOCUS
      SUBROUTINE NEXT(FREQ,G,ANGLE,IZP,NZP,ZP)
      COMPLEX GAINK,FREQ,G,ZP(0:1,MAXZP),GG,DELTA
      DIMENSION NZP(0:1)
      NTRY = -1
      DA = 2*3.14159/MAXTRY
      ANGLE = ANGLE-DA
100   NTRY = NTRY +1
      IF(NTRY.GE.MAXTRY) STOP ' NEXT POINT PROBLEM, INCREASE MAXTRY!'
      ANGLE = ANGLE+DA
      DELTA = DAXIS*CMPLX(COS(ANGLE),SIN(ANGLE))
      GG = GAINK(FREQ+DELTA,NZP,ZP)
      GANGLE = ATAN2(AIMAG(GG),SNGL(GG))*180/3.14159
      IF(ABS(GANGLE).GT.0.5)GO TO 100
      IF((IZP.EQ.1).AND.(ABS(G).GT.ABS(GG)))GO TO 100
      IF((IZP.EQ.0).AND.(ABS(G).LT.ABS(GG)))GO TO 100
      FREQ = FREQ+DELTA
      G = GG
      RETURN
      END