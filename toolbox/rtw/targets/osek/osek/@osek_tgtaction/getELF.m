%% File : getELF(this, subsystem)
%%
%% Abstract : 
%%  Return the name of the executable file
%%  that would be generated by the build process. 
%%
%% Arguments :
%%  this        -   osek_tgtaction object
%%  subsystem   -   The full name of the subsystem that was built
%%

% Copyright 2002-2004 The MathWorks, Inc.
% $Revision: 1.3.4.1 $ 
% $Date: 2004/03/21 22:58:25 $
function elf = getELF(obj,subsystem)

modelName = bdroot(subsystem);

% Get the name of the subsystem as
% transformed to be used as the head of
% the executable name.
name = get_param(subsystem,'name');
exeName = strtok(name,sprintf('\n\t\r\\/ '));

tmf = get_param(modelName,'RTWTemplateMakeFile');
type = 'OTHER';
switch type
 case 'RAM'
  elf = [ exeName '_ram.elf' ];
 case 'FLASH'
  elf = [ exeName '_flash.elf' ];
 otherwise
  cs = getActiveConfigSet(modelName);
  if isValidParam(cs, 'targetSuffix') && ~strcmp(get_param(cs,'targetSuffix'), 'none')
    suffix = get_param(cs,'targetSuffix');
    elf = [ exeName,'_',suffix,'.elf' ];
  else
    elf = [ exeName '.elf' ];
  end
end

% getELF expects to runs in the model build directory, or in its
% parent directory. The resulting elf file from a build is placed
% in the model build directory's parent, so it there is a
% model.elf file here, presume this is the model build directory's
% parent and use it.
localELFPath=fullfile(pwd, elf);
if exist(localELFPath)
    elf = localELFPath;
else
  savedDir = pwd;
  cd('..');
  try
    path_to_elf = which(elf);
    if isempty(path_to_elf)
      n = sprintf('\n');
      t = sprintf('\t');
      msg =[n 'Cannot find the executable file ' n t elf n , ...
	    'Perhapps you have not built the subsystem ' n t strrep(subsystem,n,' ') n ...
	    'or you have built it with the wrong target?'];
      error(msg');
    end

    elf = path_to_elf;
  end 
  cd(savedDir);
end

