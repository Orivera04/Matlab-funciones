%  sir3.m
% Matlab file for Part 3 of the Preditor-Prey Models module
global b k

disp('********************************************')
disp('Part 3:  Euler''s Method for Systems')
disp('********************************************')
disp('  ')

    format short

    disp('First, we set b and k as follows: ')
    b=1/2
    k=1/3
    disp(' ')
    disp('We also set the initial values of s, i,')
    disp('and r as follow: ')
    s0=1
    i0=1.27e-6
    r0=0
    disp(' ')
    disp('To continue, hit any key!')
    disp(' ')
    pause

    disp(' ')
    disp('--------------------------------------------')
    disp('Step 1:  We will use the built in MATLAB')
    disp('D.E. solver:   ')
    disp('  [t,w]=ode23(function_name,[t0,tf],w0)')
    disp('          where w0=[x0,y0,z0]'', a column vector ') 
    disp('            of initial values. ')
    disp(' ')
    disp('The right hand sides of our system:')
    disp('  ds/dt = a*s*i - k*i ')
    disp('  di/dt = k*s  ')
    disp('  dr/kt = -k*i ')
    disp('are contained in a function called de3_fun')
    disp('in an m-file provided with this module.')
    disp('  (Note that parameters b and k are declared')
    disp('   global in the m-file so if these parameters')
    disp('   are changed in MATLAB, then de3_fun will')
    disp('   use the new values.)  ')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    disp('  w0=[s0,i0,r0]''; ')
    disp('  [t,w]=ode23(''de3_rhs'',[0,150],w0); ')
    disp('  s=w(:,1); i=w(:,2); r=w(:,3); ')
    disp('  plot(t,s,''r'') ')
    disp('  hold on  ')
    disp('  plot(t,i,''b'') ')
    disp('  plot(t,r,''c'') ')
    disp('  title(''SIR solutions'') ')
    disp('  legend(''s(t)'',''i(t)'',''r(t)'')  ')
    disp(' ')

    keyboard;
    disp(' ')

    disp('--------------------------------------------')
    disp('Step 2:  Euler''s Method ')
    disp('We repeat here our earlier calculations')
    disp('of the s(t),i(t),r(t) solutions, but')
    disp('using Euler''s Method instead of the')
    disp('built-in MATLAB solver ode23. ')
    disp(' ')
    disp('MATLAB doesn''t have Euler''s Method') 
    disp('built in, so we need to write it')
    disp('ourselves.  We''ll generate values')
    disp('of s(t),i(t),and r(t) at 20 equally')
    disp('spaced time values between 0 and 150.')
    disp(' ')
    disp('Enter MATLAB commands to make n=20 and ')
    disp('Delta=150/n.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('--------------------------------------------')
    disp('First let''s define equally spaced time values:')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    t_sav=t; s_sav=s; i_sav=i; r_sav=r;
    clear t s i r
    disp('  for j=1:n+1 ')
    disp('    t(j)=(j-1)*Delta; ')
    disp('  end ')
    disp(' ')
    disp('To check, type the variable name: t, which')
    disp('should give the times from 0 to 150 in')
    disp('steps of 7.5 days.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('Subscripts in MATLAB cannot start at zero.')
    disp('Thus, we need to initialize s(1),i(1), and r(1)')
    disp('to be the initial values s0, i0, and r0.')
    disp(' ')
    disp('Enter the commands:')
    disp('  s(1)=s0; ')
    disp('  i(1)=i0; ')
    disp('  r(1)=r0; ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')

    keyboard;
    disp(' ')

    disp('-----------------------------------------------') 
    disp('Now we can put our recursive definition for s(j)')
    disp('i(j), and r(j) into a loop to compute s(2),i(2),')
    disp('r(2), then s(3),i(3),r(2), etc. The trick is to ')
    disp('use rise=slope*run, where the s, i, and r slopes') 
    disp('are provided by the function de3_rhs.')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt, then execute them.')
    disp(' ')
    disp(' for j=2:n+1 ')
    disp('  wprime=de3_rhs(t(j-1),[s(j-1),i(j-1),r(j-1)]);')
    disp('  s(j)=s(j-1)+wprime(1)*Delta; ')
    disp('  i(j)=i(j-1)+wprime(2)*Delta; ')
    disp('  r(j)=r(j-1)+wprime(3)*Delta; ')
    disp(' end ')
    disp(' ')
    disp('To check, type the variable name: s, which')
    disp('should give the s values for each time in')
    disp('vector t.  Likewise, type: i to see the i values')
    disp('and r to see the r values. ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('----------------------------------------------')
    disp('Let''s look at a combined plot of the Euler')
    disp('s, i, and r curves versus time.  We will plot')
    disp('s(t) with a red little-o plot symbol,')
    disp('i(t) with a blue * plot symbol, and')
    disp('r(t) with a cyan + plot symbol.')
    disp('We will superimpose our Euler solutions on')
    disp('our earlier ode23 solutions. ')
    disp(' ')
    disp('Copy the following commands and paste them as')
    disp('a group at a MATLAB prompt to execute them.')
    disp(' ')
    disp('     plot(t,s,''ro'')  ')
    disp('     plot(t,i,''b*'')  ')
    disp('     plot(t,r,''c+'')  ')
    disp(' ')
    disp('------------------------------------------------')
    disp('Enter your answers to the questions in step 2')
    disp('as MATLAB comments in your diary file.')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('-----------------------------------------------') 
    disp('Steps 3 and 4:')
    disp('Enter a value for the step size Delta and ')
    disp('then enter the following commands to replot ')
    disp('the (exact) ode23 plot. ') 
    disp(' ')
    disp(' Delta=?? ')
    disp(' ')
    disp(' clf ')
    disp(' plot(t_sav,s_sav,''r'') ')
    disp(' hold on  ')
    disp(' plot(t_sav,i_sav,''b'') ')
    disp(' plot(t_sav,r_sav,''c'') ')
    disp(' title(''SIR solutions'') ')
    disp(' legend(''s(t)'',''i(t)'',''r(t)'')  ')
    disp(' ')
    disp('To continue afterwards, type the word return')
    disp('and hit enter!')
    disp(' ')
    
    keyboard;
    disp(' ')

    disp('-----------------------------------------------')
    disp('Steps 3 and 4 (cont.): ') 
    disp('The following commands will compute the Euler ')
    disp('solution with step-size Delta and superimpose')
    disp('the plot onto the exact ode32 plot.')
    disp(' ')
    disp(' n=150/Delta; ')
    disp(' s(1)=s0; i(1)=i0; r(1)=r0;  ')
    disp(' t=0:Delta:150; ')
    disp(' for j=2:n+1 ')
    disp('  wprime=de3_rhs(t(j-1),[s(j-1),i(j-1),r(j-1)]);')
    disp('  s(j)=s(j-1)+wprime(1)*Delta; ')
    disp('  i(j)=i(j-1)+wprime(2)*Delta; ')
    disp('  r(j)=r(j-1)+wprime(3)*Delta; ')
    disp(' end ')
    disp(' plot(t,s,''ro'')  ')
    disp(' plot(t,i,''b*'')  ')
    disp(' plot(t,r,''c+'')  ')
    disp(' ')
    disp('------------------------------------------------')
    disp('Change Delta and repeat the above comands until')
    disp('your Euler solution closely matches the exact')
    disp('solution.')
    disp('------------------------------------------------')
    disp(' ') 
    disp(' ')
    disp('To go on to part 4 of this module,')
    disp('type: sir4')
    disp(' ')