Library {
  Name			  "tiiqmathlib"
  Version		  6.0
  SaveDefaultBlockParams  on
  LibraryLinkDisplay	  "none"
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  CovReportOnPause	  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  off
  StatusBar		  off
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  Created		  "Wed Mar 19 14:14:39 2003"
  Creator		  "apillari"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "zgalijas"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Wed Mar 10 16:55:27 2004"
  ModelVersionFormat	  "1.%<AutoIncrement:91>"
  ConfigurationManager	  "None"
  SimParamPage		  "Solver"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  ProdHWDeviceType	  "32-bit Generic"
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.0.3"
      Array {
	Type			"Handle"
	Dimension		8
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.0.3"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  Solver		  "ode45"
	  ZeroCrossControl	  "UseLocalSettings"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  RateTranMode		  "Deterministic"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.0.3"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SaveTime		  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsOut"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Array {
	    Type		    "Cell"
	    Dimension		    5
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "InitFltsAndDblsToZero"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.3"
	  BlockReduction	  on
	  BooleanDataType	  off
	  ConditionallyExecuteInputs on
	  ConditionalExecOptimization "on_for_testing"
	  InlineParams		  off
	  InlineInvariantSignals  on
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  ParameterPooling	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.0.3"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  CheckSSInitialOutputMsg on
	  CheckExecutionContextPreStartOutputMsg on
	  CheckExecutionContextRuntimeOutputMsg	on
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterPrecisionLossMsg "warning"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.0.3"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  on
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.0.3"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  ModelReferenceNumInstancesAllowed "Multi"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  8
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.0.3"
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      9
	      Array {
		Type			"Cell"
		Dimension		9
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.3"
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      PrefixModelToSubsysFcnNames on
	      CustomSymbolStr	      "$R$N$M"
	      MangleLength	      1
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      10
	      Array {
		Type			"Cell"
		Dimension		12
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		PropName		"DisabledProps"
	      }
	      Version		      "1.0.3"
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      GenFloatMathFcnCalls    "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      IncludeMdlTerminateFcn  on
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	Simulink.SFSimCC {
	  $ObjectID		  11
	  Version		  "1.0.3"
	  SFSimApplyToAllLibs	  on
	  SFSimEnableDebug	  on
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SFSimBuildMode	  "Incremental"
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      SimulationMode	      "normal"
      CurrentDlgPage	      "Solver"
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      PortCounts	      "[]"
      SFunctionModules	      "''"
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "tiiqmathlib"
    Location		    [144, 207, 804, 798]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      "S-Function"
      Name		      "Absolute IQN"
      Ports		      [1, 1]
      Position		      [335, 508, 430, 562]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqabs"
      MaskType		      "Absolute IQN"
      MaskDescription	      "This block computes the absolute value of an IQ"
" number. Both the input and the output are signed 32-bit fixed-point numbers."
" The respective IQNabs function is selected based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNabs', 'horizontalalignment','center');\ncolor('red')\ntext(0.95, "
"0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Arctangent IQN"
      Ports		      [2, 1]
      Position		      [65, 396, 160, 449]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqatan2"
      Parameters	      "tanOption"
      MaskType		      "Arctangent IQN"
      MaskDescription	      "This block computes the 4-quadrant arctangent f"
"or two IQ numbers given in the same Q format. All inputs and outputs are sign"
"ed 32-bit fixed-point numbers. Depending on the selected option, the output o"
"f the block is either in radians and varies from pi - to +pi or in per unit ("
"PU) and varies between -1 and + 1. The respective IQNatan function is selecte"
"d by the input data type."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Function:"
      MaskStyleString	      "popup(atan2 (radians)|atan2PU (per unit))"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "tanOption=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNatan2', 'horizontalalignment','center"
"');\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "atan2 (radians)"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Float to IQN"
      Ports		      [1, 1]
      Position		      [405, 78, 500, 132]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iq"
      Parameters	      "Q_value"
      MaskType		      "Float to IQN"
      MaskDescription	      "This block converts a floating-point input to t"
"he equivalent IQ value. The input is a single-precission floating-point numbe"
"r and the output is a signed 32-bit fixed-point number. The respective IQN fu"
"nction is selected based on the Q value specified for the output."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Q value:"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "Q_value=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQN', 'horizontalalignment','center');\ncolor('red')\ntext(0.95, 0.9"
", 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "10"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Fractional part\nIQN x int32"
      Ports		      [2, 1]
      Position		      [405, 276, 500, 329]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmpyi32frac"
      MaskType		      "Fractional part IQN x int32"
      MaskDescription	      "This block multiplies an IQ number with a long "
"integer number and returns the fractional part of the result. First input and"
" the output are signed 32-bit fixed-point numbers, while the second input is "
"a long integer number. The respective IQNmpyI32frac function is selected base"
"d on the Q value of the input.\n"
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmpyl32frac', 'horizontalalignment','c"
"enter');\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'rig"
"ht');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Fractional part IQN"
      Ports		      [1, 1]
      Position		      [155, 78, 250, 132]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqfrac"
      MaskType		      "Fractional part IQN"
      MaskDescription	      "This block returns the fractional part of an IQ"
" number. Both the input and output are signed 32-bit fixed-point numbers. The"
" respective IQNfrac function is selected based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNfrac', 'horizontalalignment','center');\ncolor('red')\ntext(0.95,"
" 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN / IQN"
      Ports		      [2, 1]
      Position		      [405, 191, 500, 244]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqdiv"
      MaskType		      "Division IQN "
      MaskDescription	      "This block divides two IQN numbers using Newton"
"-Raphson technique. All inputs and outputs are signed 32-bit fixed-point numb"
"ers that have the same Q value. The respective IQNdiv function is selected ba"
"sed on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNdiv', 'horizontalalignment','center')"
";\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN to Float"
      Ports		      [1, 1]
      Position		      [530, 78, 625, 132]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqtof"
      MaskType		      "IQN to Float"
      MaskDescription	      "This block converts an IQ number to the equival"
"ent floating-point value in IEEE 754 format. The input is a signed 32-bit fix"
"ed-point number and the output is a single-precission floating-point number. "
"The respective IQNtoF function is selected based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNtoF', 'horizontalalignment','center');\ncolor('red')\ntext(0.95, "
"0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN x IQN"
      Ports		      [2, 1]
      Position		      [155, 190, 250, 245]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmpy"
      Parameters	      "multiplyOption"
      MaskType		      "IQN x IQN"
      MaskDescription	      "This block multiplies two IQ numbers that are r"
"epresented in same IQ format. Depending on the multiplication option selected"
" below, the result can also be rounded or saturated. All inputs and outputs a"
"re signed 32-bit fixed-point numbers. The respective IQNmpy function is selec"
"ted based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Multiply option:"
      MaskStyleString	      "popup(Multiply|Multiply with rounding|Multiply "
"with rounding and saturation)"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "multiplyOption=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmpy', 'horizontalalignment','center')"
";\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Multiply"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN x int32"
      Ports		      [2, 1]
      Position		      [155, 276, 250, 329]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmpyi32"
      MaskType		      "IQN x int32"
      MaskDescription	      "This block multiplies an IQ number with a long "
"integer. First input and the output are signed 32-bit fixed-point numbers, wh"
"ile the second input is a long integer number. The respective IQNmpyI32 funct"
"ion is selected based on the Q value of the first input."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmpyl32', 'horizontalalignment','cente"
"r');\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right')"
";"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN1 to IQN2"
      Ports		      [1, 1]
      Position		      [280, 78, 375, 132]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqntoiq"
      Parameters	      "New_Q"
      MaskType		      "IQN1 to IQN2"
      MaskDescription	      "This block converts an IQ number to a new IQ nu"
"mber in specified Q format. Both the input and output are signed 32-bit fixed"
"-point numbers. The respective IQNtoIQx function is selected based on the Q v"
"alue."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Q value:"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "New_Q=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNtoIQX', 'horizontalalignment','center');\ncolor('red')\ntext(0.95"
", 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "10"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "IQN1 x IQN2"
      Ports		      [2, 1]
      Position		      [280, 191, 375, 244]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmpyiqx"
      Parameters	      "Q"
      MaskType		      "IQN1 x IQN2"
      MaskDescription	      "This block multiplies two IQ numbers that are r"
"epresented in different IQ format. All inputs and outputs are signed 32-bit f"
"ixed-point numbers. The respective IQNmpyIQX function is selected based on th"
"e Q value specified for the output."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Q value:"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "Q=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmpyIQx', 'horizontalalignment','cente"
"r');\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right')"
";"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "10"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Integer part\nIQN x int32"
      Ports		      [2, 1]
      Position		      [280, 276, 375, 329]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmpyi32int"
      MaskType		      "Integer part IQN x int32"
      MaskDescription	      "This block multiplies an IQ number with a long "
"integer number and returns the integer part of the result. First input is a s"
"igned 32-bit fixed-point number, while the second input and the output are lo"
"ng integer numbers. The respective IQNmpyI32int function is selected based on"
" the Q value of the input."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmpyl32int', 'horizontalalignment','ce"
"nter');\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'righ"
"t');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Integer part IQN"
      Ports		      [1, 1]
      Position		      [30, 78, 125, 132]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqint"
      MaskType		      "Integer part IQN"
      MaskDescription	      "This block returns the integer part of an IQ nu"
"mber. The input is a signed 32-bit fixed-point number and the output is a lon"
"g integer number. The respective IQNint function is selected based on the Q v"
"alue."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNint', 'horizontalalignment','center');\ncolor('red')\ntext(0.95, "
"0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Magnitude IQN"
      Ports		      [2, 1]
      Position		      [480, 396, 575, 449]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqmag"
      MaskType		      "Magnitude IQN"
      MaskDescription	      "This block computes the magnitude of two IQ num"
"bers. All inputs and outputs are signed 32-bit fixed-point numbers in the sam"
"e Q format. The respective IQNmag function is selected based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('input',2,'B');\nport_lab"
"el('Output',1,'Y');\ntext(0.5,0.15, 'IQNmag', 'horizontalalignment','center')"
";\ncolor('red')\ntext(0.95, 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
      Port {
	PortType		0
	PortNumber		2
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Saturate IQN"
      Ports		      [1, 1]
      Position		      [210, 508, 305, 562]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqsat"
      Parameters	      "pos, neg"
      MaskType		      "Saturate IQN"
      MaskDescription	      "This block saturates the value of an IQ number "
"to the given positive and negative limits. Both the input and the output are "
"signed 32-bit fixed-point numbers. The respective IQsat function is selected "
"based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Positive limit:|Negative limit:"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "pos=@1;neg=@2;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQsat', 'horizontalalignment','center');\ncolor('red')\ntext(0.95, 0"
".9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "0|0"
      MaskTabNameString	      ","
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Square Root IQN"
      Ports		      [1, 1]
      Position		      [355, 398, 450, 452]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqsqrt"
      Parameters	      "functionOption"
      MaskType		      "Square Root IQN"
      MaskDescription	      "This block computes the square root and the inv"
"erse square root of an IQ number using table lookup and Newton-Raphson approx"
"imation. Both the input and the output are signed 32-bit fixed-point numbers."
" The respective IQNsqrt function is selected based on the Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Function:"
      MaskStyleString	      "popup(Square root|Inverse square root)"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "functionOption=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNsqrt', 'horizontalalignment','center');\ncolor('red')\ntext(0.95,"
" 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Inverse square root"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Block {
      BlockType		      "S-Function"
      Name		      "Trig Fcn IQN"
      Ports		      [1, 1]
      Position		      [190, 398, 285, 452]
      InitFcn		      "tic2000lib_licenseCheck"
      FunctionName	      "stiiqmath_iqtrig"
      Parameters	      "functionOption"
      MaskType		      "Trig Fcn IQN"
      MaskDescription	      "This block computes selected trigonometric func"
"tions of an IQ number. Both the input and the output are signed 32-bit fixed-"
"point numbers. The respective trigonometric function is selected based on the"
" Q value."
      MaskHelp		      "web(c2000bhelp);"
      MaskPromptString	      "Function:"
      MaskStyleString	      "popup(_IQsin|_IQsinPU|_IQcos|_IQcosPU)"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "functionOption=@1;"
      MaskDisplay	      "image(imread('ti_logo2.bmp','bmp'),[0.32 0.28 0"
".34 0.58]);\nport_label('input',1,'A');\nport_label('Output',1,'Y');\ntext(0."
"5,0.15, 'IQNtrig', 'horizontalalignment','center');\ncolor('red')\ntext(0.95,"
" 0.9, 'IQmath', 'horizontalalignment', 'right');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "normalized"
      MaskValueString	      "_IQsin"
      Port {
	PortType		0
	PortNumber		1
	ShowSigGenPortName	on
      }
    }
    Annotation {
      Name		      "C28x IQmath Library"
      Position		      [327, 29]
      FontName		      "Arial"
      FontSize		      14
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Format Conversion Utilities"
      Position		      [329, 62]
      FontName		      "Arial"
      FontSize		      12
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Miscellaneous"
      Position		      [314, 495]
      FontName		      "Arial"
      FontSize		      12
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Mathematical Functions"
      Position		      [469, 382]
      FontName		      "Arial"
      FontSize		      12
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Trignometric Functions"
      Position		      [174, 385]
      FontName		      "Arial"
      FontSize		      12
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Arithmetic Operations"
      Position		      [329, 175]
      FontName		      "Arial"
      FontSize		      12
      FontWeight	      "bold"
    }
  }
}
