function [s,defnum]=gui_augmethods(d);
%GUI_AUGMETHODS  Return structure of augmentation methods
%
%  [S,DEFAULT]=GUI_AUGMETHODS(D)
%
%  See also:  GUI_ADDPOINTS

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.


%   $Revision: 1.4.2.2 $  $Date: 2004/02/09 07:06:45 $


s=struct('Name',{'Random','User-specified'},...
   'CreateFcn',{@i_createrandom, @i_createuser},...
   'FinaliseFcn',{@i_finaliserandom, @i_finaliseuser},...
   'NPointsFcn',{@i_NPrandom, @i_NPuser});
defnum=[1 1];
% add spacefilling if appropriate



return




%%%%%%%%%%%%%%%%%%%%%%%%%%%
% user-specified settings %
%%%%%%%%%%%%%%%%%%%%%%%%%%%
function L = i_createuser(F,pD)
des=pD.info;
initval=invcode(model(des),midpoint(des));
nf=nfactors(des);

udh=xregGui.RunTimePointer;
udh.LinkToObject(F);

ud.nfactors=nf;
ud.initval=initval;

ud.Npts=xregGui.labelcontrol('parent',F,...
   'visible','off',...
   'string','Number of points:',...
   'labelsizemode','absolute',...
   'labelsize',100,...
   'controlsizemode','absolute',...
   'controlsize',60,...
   'gap',5,...
   'Control',xregGui.clickedit('parent',F,...
   'value',1,...
   'dragincrement',1,...
   'clickincrement',1,...
   'min',1,...
   'max',1000,...
   'rule','int',...
   'visible','off',...
   'callback',{@i_user_numpts,udh}));

ud.table=xregtable(double(F),...
   'position',[0 0 300 70],...
   'visible','off',...
   'frame.visible','off',...
   'frame.hborder',[0 0],...
   'frame.vborder',[0 0],...
   'cols.size',60,...
   'cells.defaultbackgroundcolor',[1 1 1],...
   'rows.number',2,...
   'cols.number',nf,...
   'rows.fixed',1,...
   'cells.rowselection',[1 1],...
   'cells.colselection',[1 nf],...
   'cells.type','uiemuedit0',...
   'cells.enable','inactive',...
   'cells.string',factors(des)',...
   'cells.rowselection',[2 2],...
   'cells.value',initval,...
   'zeroindex',[2 1]);

pnl=xregpanellayout(F,...
   'innerborder',[0 0 0 0],...
   'center',ud.table,...
   'packstatus','off');
L=xreggridbaglayout(F,'dimension',[2 1],...
   'rowsizes',[20 -1],...
   'gapy',10,...
   'elements',{ud.Npts,pnl},...
   'userdata',udh);

udh.info=ud;



function i_user_numpts(src,evt,udh)
ud=udh.info;
val=get(src,'value');
rowsnow=ud.table.rows.number-1;
if val<rowsnow
   % remove rows   
   ud.table.rows.number=val+1;    
elseif val>rowsnow
   % add rows
   ud.table.rows.number=val+1;
   nf=ud.nfactors;
   initval=ud.initval;
   initval=repmat(initval,val-rowsnow,1);
   % populate with values
   ud.table.value(rowsnow+1:end,:)=initval;
end



function i_finaliseuser(L,pD,sel)
udh = get(L,'userdata');
ud=udh.info;
data=ud.table(:,:);
des=pD.info;
data=code(model(des),data);
des=augment(des,data,'points');
pD.info=des;



function np=i_NPuser(L,pD,np)
udh = get(L,'userdata');
ud=udh.info;
if nargin>2
   ud.Npts.Control.value=np;
   i_user_numpts(ud.Npts.Control,[],udh);  % redraw table
else
   np=ud.Npts.Control.value;
end





%%%%%%%%%%%%%%%%%%%%%%%%%%
% Random points settings %
%%%%%%%%%%%%%%%%%%%%%%%%%%
function L = i_createrandom(F,pD)
ud.Npts=xregGui.labelcontrol('parent',F,...
   'visible','off',...
   'string','Number of points:',...
   'labelsizemode','absolute',...
   'labelsize',100,...
   'controlsizemode','absolute',...
   'controlsize',60,...
   'gap',5,...
   'Control',xregGui.clickedit('parent',F,...
   'value',1,...
   'dragincrement',1,...
   'clickincrement',1,...
   'visible','off',...
   'min',1,...
   'max',1000,...
   'rule','int'));

L=xreggridbaglayout(F,'dimension',[1 1],...
   'rowsizes',20,...
   'packstatus','off',...
   'elements',{ud.Npts},...
   'userdata',ud);



function i_finaliserandom(L,pD,sel)
ud = get(L,'userdata');
des=pD.info;

Np=get(ud.Npts.Control,'value');

% push in new candidate set and use that new design to generate points for the original one
% (This will make sure the constraints are used).

cs=candspace(des);
lims=limits(cs);
nf=nfactors(des);
lvls=cell(nf,1);
for n=1:nf
   lvls{n}=linspace(lims(n,1),lims(n,2),21);
end
des_temp=candspace(des,'fullgrid',lvls);

des=augment(des,randcand(des_temp,Np),'points');
pD.info=des;


function np=i_NPrandom(L,pD,np)
ud = get(L,'userdata');
if nargin>2
   ud.Npts.Control.value=np;
else
   np=ud.Npts.Control.value;
end
