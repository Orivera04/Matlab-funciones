function lyt = gui_globalmodpane(m,action,figh,p,varargin)
%GUI_GLOBALMODPANE Create part of GUI for linear model settings
%
%  LYT=GUI_GLOBALMODPANE(M,'layout',FIG,P) creates a layout object
%  with callbacks defined for updating the model pointed to by P.
%  FIG is the figure to create it in.
%
%  FIG may also be a current copy of a layout in which case this
%  existing layout will be used instead of creating a new one.

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.2.2.3 $  $Date: 2004/02/09 08:01:14 $

switch lower(action)
    case 'layout'
        if isa(figh,'xregcontainer')
            % Update layout with new model info
            lyt = figh;
            pUD = get(lyt, 'userdata');
            ud = pUD.info;
            ud.pointer = p;
            pUD.info = ud;

            i_initial([], [], pUD);
        else
            % Create a new layout
            lyt = i_createlyt(figh, p);
        end
end



function lyt = i_createlyt(figh, p)
pUD = xregGui.RunTimePointer;
pUD.LinkToObject(figh);
ud.pointer = p;
m = p.info;
nf = nfactors(m);
[mlist, f] = getmodellist(m,nf);

% Make sure model is initialised properly
func = mlist{f};
m = funcinit(m,func);
x0 = initial(m);
m.parameters = x0;
p.info = m;
np = numParams(m);

SC = xregGui.SystemColorsDbl;
ud.txt = uicontrol('parent',figh,...
    'visible','off',...
    'position',[0 0 130 18],...
    'style','text',...
    'horizontalAlignment','left',...
    'tag','ud.xregusermod',...
    'string','User-defined models:');
ud.modellist = uicontrol('parent',figh,...
    'visible','off',...
    'style','listbox',...
    'backgroundColor',SC.WINDOW_BG,...
    'string',mlist,...
    'value',f, ...
    'callback', {@i_changefunc, pUD});

lab = labels(m);

ud.table = xregtable(figh,...
    'visible','off',...
    'frame.visible', 'off', ...
    'cols.size',65,...
    'cols.spacing',5,...
    'cells.defaultinterruptible','off',...
    'cells.colselection',[2 2],...
    'cells.rowselection',[2 np+1],...
    'cells.type','uiedit',...
    'cells.backgroundcolor',[1 1 1],...
    'cells.horizontalalignment', 'right', ...
    'cells.format','%.4g',...
    'cells.value',m.parameters,...
    'rows.fixed',1,...
    'cols.fixed',1,...
    'zeroindex',[2 2],...
    'cells.rowselection',[1 1],...
    'cells.colselection',[1 2],...
    'cells.type','text',...
    'cells.string',{'Parameter','Value'},...
    'cells.rowselection',[2 np+1],...
    'cells.colselection',[1 1],...
    'cells.type','text',...
    'cells.string',lab(:),...
    'cells.fontsize',9,...
    'cellchangedcallback', {@i_initial, pUD}, ...
    'position',[0 0 150 150],...
    'redrawmode','basic');
set(ud.table,'redrawmode','normal');

ud.eqn = axestext(figh, 'visible', 'off', ...
    'verticalalignment', 'top', ...
    'string',['Equation: ' str_func(m)]);

tblPanel = xregpanellayout(figh, ...
    'visible', 'off', ...
    'border', [0 0 0 5], ...
    'packstatus', 'off', ...
    'innerborder', [0 0 0 0], ...
    'center', ud.table);
lyt = xreggridbaglayout(figh, ...
    'dimension', [2 3], ...
    'rowsizes', [18 -1], ...
    'colsizes', [150 150 -1], ...
    'gapx', 30, ...
    'mergeblock', {[1 1], [2 3]}, ...
    'elements', {ud.txt, ud.modellist, ud.eqn, tblPanel}, ...
    'userdata', pUD);
pUD.info = ud;



function i_initial(src, evt, pUD)
ud = pUD.info;
m = ud.pointer.info;
% Gather new order's together and check them for ok values
val = ud.table(:,1);
g = evalConstraints(m,val);
if all(g<=0)
    m.parameters = val;
    set(ud.eqn,'string',['Equation: ' char(m,1)]);
    ud.pointer.info = m;
else
    h = errordlg('The initial values are infeasible.  Please enter new values', ...
        'User-Defined Model', 'modal');
    waitfor(h);
    ud.table(:,1) = m.parameters;
end



function i_changefunc(src, evt, pUD)
ud = pUD.info;
m = ud.pointer.info;

mlist = getmodellist(m,nfactors(m));
newfunc = mlist{get(src,'value')};
if ~strcmp(newfunc,name(m))
    m = funcinit(m,newfunc);
    x0 = initial(m);
    ud.table.rows.number = length(x0)+1;
    m.parameters = x0;
    np = length(x0);
    set(ud.table,...
        'cells.colselection',[2 2],...
        'cells.rowselection',[2 np+1],...
        'cells.type','uiedit',...
        'cells.backgroundcolor',[1 1 1],...
        'cells.format','%.4g',...
        'cells.value',m.parameters,...
        'rows.fixed',1,...
        'cols.fixed',1,...
        'zeroindex',[2 2],...
        'cells.rowselection',[2 np+1],...
        'cells.colselection',[1 1],...
        'cells.type','text',...
        'cells.string',labels(m),...
        'cells.fontsize',9)

    set(ud.eqn, 'string', ['Equation: ' str_func(m)]);
    ud.pointer.info = m;
end
