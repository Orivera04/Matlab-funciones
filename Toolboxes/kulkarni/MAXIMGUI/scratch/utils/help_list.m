function message_string = help_list(help_message_id);
% message_string is message number help_message_id.

switch help_message_id
case 1
   message_string = {['     MAXIM is intended to be used as a teaching, learning, and '...
         ' problem solving tool in stochastic models. It is designed to accompany'...
         ' the undergraduate textbook "Modeling, Analysis, Design, and Control'...
         ' of Stochastic Systems", (Author: V. G. Kulkarni, University of North'...
         ' Carolina, Chapel Hill, NC 27599; Publisher: Springer-Verlag; Year: 1999.)\n'...
         '     MAXIM divides the stochastic models into seven classes as displayed on'...
         ' the current window. For each model'...
         ' class, it has several built-in standard models based on the examples in'...
         ' the above mentioned'...
         ' textbook. It also allows the user to build new models by inputting'...
         ' appropriate parameters. New models created in this fashion can then be saved'...
         ' and retrieved later for subsequent use.']
      ['     Results can be saved into ASCII files,'...
         ' and these files can then be printed out to obtain hard copies.'...
         ' Generally each main window displayed by MAXIM has an exit option on the menu bar.'...
         ' Click on this to exit MAXIM altogether and return to MATLAB Command window.'...
         ' There is frequently  also a "return to maim menu" option on the menu bar.'...
         ' Click on this to get back to the main menu window.'...
         ' The option "previous screen", when present, allows you to return to the'...
         ' previous window.\n  *** NEVER USE THE CLOSE WINDOW BUTTON (SQUARE WITH AN X IN IT)'...
         ' TO CLOSE A WINDOW. THIS MAY LEAD TO STRANGE BEHAVIOR.***\n'...      
         '     Click on the desired class of models listed on the main menu'...
         ' to explore further.']};
   
case 2
   message_string = ['Probability Models.\n'...
         '     The  probability models considered here are the discrete and'...
         ' continuous univariate random variables.'...
         ' Click on "Use a Standard Model" to see the list of ' ...
         'standard Probability Models.'...
         ' The options "Create a model" and "Get model from a file" are not available'...
         ' in this version of MAXIM.'];
   
case 3
   message_string = {['Discrete Time Markov Models.\n '...
         '     Let X_n be the state of a system at time n = 0,1,2,....'...
         ' Let S be the state space, i.e., set of all possible states of the system.'...
         ' Assume that S is finite, and that the system has Markov property, i.e., \n'...
         ' P(X_(n+1) = j| X_n = i, X_(n-1),..., X_0) =\n'...
         '                      P(X_(n+1) = j|X_n = i),   n >= 0, i,j in S.\n'...
   ' {X_n, n >= 0} is said to be a Discrete Time Markov Model of the system evolution.\n']
  ['     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Discrete Time Markov Chain Models.'...
         ' Click on  "Create a model" to create a new Discrete Time Markov Chain model. '...
         ' In this case you will be asked to input name of the new model,'...
         ' the number of states, the numeric state-labels,'...
         ' and the transition probability matrix (see textbook) as the parameters of the new model.'...
         ' Click on "Get model from a file" to retrieve a model that is already created'...
         ' and saved by using "Create a new model" option in a previous MAXIM session.']};
case 4
   message_string = {['Continuous Time Markov Models.\n '...
         '     Let X(t) be the state of a system at time t >= 0.'...
         ' Let S be the state space, i.e., set of all possible states of the system.'...
         ' Assume that S is finite, and that the system has Markov property, i.e., \n'...
         ' P(X(s+t) = j| X(s) = i, X(u), 0 <= u <= s) =\n'
      '                     P(X(t) = j|X(0) = i),   t >= 0, i,j in S.\n'...
         ' {X(t), t >= 0} is said to be a Continuous Time Markov Model of the system evolution.\n']
   ['     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Continuous Time Markov Chain Models.'...
         ' Click on  "Create a model" to create a new Continuous Time Markov Chain model. '...
         ' In this case you will be asked to input name of the new model,'...
         ' the number of states, the numeric state-labels,'...
         ' and the rate matrix (see textbook) as the parameters of the new model.'...
         ' Click on "Get model from a file" to retrieve a model that is already created'...
         ' and saved by using "Create a new model" option in a previous MAXIM session.']};
case 5
   message_string = ['Generalized Markov Models.\n'...
         '     Suppose a system with finite state-space changes states by jumps at random times'...
         ' as follows: It stays in the current state (say i) for a random amount of time'...
         ' with mean w_i and then jumps to state j with probability p_(i,j),'...
         ' regardless of the history so far. Once in state j, it behaves in a similar way.'...
         ' Such a system is described by a generalized  (or Semi-)Markov Model.\n'...         
      '     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Semi-Markov Models.'...
         ' Click on  "Create a model" to create a new Semi-Markov model. '...
         ' In this case you will be asked to input name of the new model,'...
         ' the number of states, the numeric state-labels,'...
         ' the mean sojourn time vector and the transition probability matrix'...
         ' (see textbook) as the parameters of the new model.'...
         ' Click on "Get model from a file" to retrieve a model that is already created'...
         ' and saved by using "Create a new model" option in a previous MAXIM session.'];
case 6
   message_string = ['Queueing Models.\n'...
         '    A single station queueing model is described by 4 part designation: A/B/C/D as follows.'...
         ' A and B are symbols representing the inter-arrival and service-time distributions:'...
         ' M for exponential and  G for general; C is the number of servers; and D is the'...
         ' capacity of the waiting room, including those in service If D is not specified'...
         ' it is assumed to be infinity.\n'...
      '     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Queueing Models.'...
         ' The options "Create a model" and "Get model from a file" are not available in this'...
         ' version of MAXIM.'];
   
case 7
   message_string = ['Design Models.\n'...
      '    Suppose the evolution of a system is described by a stochastic model'...
         ' with a few parameters. One can compute the long-run cost rate per unit time'...
         ' of operating the system as a function of these parameters.'...
         ' Then we can find the optimal value of the parameters'...
         ' that minimizes this cost rate. This is called the optimal design problem.\n'...
      '     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Design Models.'...
         ' The options "Create a model" and "Get model from a file" are not available in'...
         ' this version of MAXIM.'];
   
case 8
   message_string = {['Control Models.\n'...
         '     Suppose the evolution of a system is described by a stochastic model.'...
         ' It is possible to influence the future evolution of the system by taking'...
         ' appropriate decisions based on the current state of the system.'...
         ' Thus the aim is find the optimal decision as a function of the state'...
         ' (also called the optimal policy) so as to minimize the long run cost rate.'...
         ' This is called the optimal control problem.\n']
       [ '     Click on "Use  a Standard Model" to see the list of ' ...
         'standard Control Models.'...
         ' Click on  "Create a model" to create a new Control model. '...
         ' In this case you will be asked to input name of the new model,'...
         ' the number of states, the numeric state-labels,'...
         ' the number of actions, the numeric action labels,'...
         ' and the transition probability matrices for each action (see textbook)'...
         ' as the parameters of the new model.'...
         ' Click on "Get model from a file" to retrieve a model that is already created'...
         ' and saved by using "Create a new model" option in a previous MAXIM session.']};
case 9
   message_string = ['This is the list of standard Probability models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can compute their mean, variance, cdf and pdf/pmf.'...
      ' You can also view the graphs of their cdf, pdf/pmf. Click on one to continue.'];
   
case 10
   message_string = ['This is the list of standard Discrete Time Markov Models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can do transient analysis, limiting analysis, cost analysis, and first passage'...
      ' time analysis for these models. Click on the desired model to continue.'];
   
case 11
    message_string = ['This is the list of standard Continuous Time Markov Models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can do transient analysis, limiting analysis, cost analysis, and first passage'...
      ' time analysis for these models. Click on the desired model to continue.'];
   
case 12
   message_string = ['This is the list of standard Semi-Markov Models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can do limiting analysis, and cost analysis'...
      ' for these models. Click on the desired model to continue.'];
   
case 13
    message_string = ['This is the list of standard Queueing Models available.'...
       ' Details about the model can be obtained by clicking on it and then using the help'...
       ' menu on the subsequent window.'...
       ' You can compute the following steady state performance measures for most of these models.\n'...
       ' Mean number of customers in the system, and in the queue;\n'...
       ' Mean waiting time in the system, and in the queue;\n'...
       ' Mean number of busy servers, probability of system being full;'...
       ' Pmf of the number of customers in the system at an arbitrary time,'...
       ' and as seen by an arrival.'...
    ' Click on the desired model to continue.'];
   
case 14
   message_string = ['This is the list of standard design models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can compute the optimal value of the design parameter for these models.'...
      ' You can also view the graph of long run cost rate as a function of the '...
      ' design parameter. Click on the desired model to continue.'];
   
case 15
   message_string = ['This is the list of standard Control models available.'...
      ' Details about the model can be obtained by clicking on it and then using the help'...
      ' menu on the subsequent window.'...
      ' You can compute the optimal policy and the optimal long run cost rate for these models.'...
      ' Click on the desired model to continue.'];
   
case 20 %Binomial
   message_string = ['Let n be a non-negative integer, and p be a real number in [0,1].'...
            ' A random variable X is said to be a Binomial(n,p) random variable'...
            ' if it takes values in {0,1,...,n} with the following probabilities:\n'...
            ' P(X = k) = (n!/(k!*(n-k)!))*p^k *(1-p)^(n-k),   0 <= k <= n.\n'...
         ' Enter the parameters n and p to work with a Binomial(n,p) random variable.'];
         
case 21 %Erlang  
   message_string = ['Let k be a positive integer, and lambda be a positive real number.'...
            ' A random variable X is said to be an Erlang(k,lambda) random variable'...
  ' if it takes values in [0,infinity) with the following probability density function:\n'...
               ' f(x) = lambda * e^(-lambda*x) * (lambda*x)^(k-1)/(k-1)!,   x >= 0.\n'...
         ' Enter the parameters k and lambda to work with an Erlang(k,lambda) random variable.'];
      
case 22 %Exponential
   message_string = ['Let  lambda be a positive real number.'...
         ' A random variable X is said to be an Exponential(lambda) random variable'...
   ' if it takes values in [0,infinity) with the following probability density function:\n'...
               ' f(x) = lambda * e^(-lambda*x),   x >= 0.\n'...
         ' Enter the parameter lambda to work with an Exponential(lambda) random variable.'];
      
case 23 %Geometric
   message_string = ['Let 0 <= p <= 1 be a real number.'...
            ' A random variable X is said to be a Geometric(p) random variable'...
   ' if it takes values in {1,2,...} with the following probability mass function:\n'...
               ' P(X=k) = (1-p)^(k-1) * p,   k = 1,2,3,....\n'...
         ' Enter the parameter p to work with a Geometric(p) random variable.'];
    
case 24 %Negative Binomial
   message_string = ['Let r be a non-negative integer, and p be a real number in [0,1].'...
            ' A random variable X is said to be a Negative binomial(r,p) random variable'...
               ' if it takes values in {r,r+1,r+2,...} with the following probabilities:\n'...
               ' P(X = k) = ((r-1)!/((k-1)!*(r-k)!))*p^r *(1-p)^(k-r),   k=r,r+1,r+2,....\n'...
         ' Enter the parameters r and p to work with a Negative binomial(r,p) random variable.'];
        
case 25 %Normal
    message_string = ['Let mu be a real number, and sigma be a positive real number.'...
          ' A random variable X is said to be a Normal(mu,sigma) random variable'...
 ' if it takes all real values  with the following probability density function:\n'...
               ' f(x) = (1/sqrt(2*pi*sigma^2)) * e^(-.5(x-mu)^2/sigma^2)),   -infinity < x <infinity.\n'...
         ' Enter the parameters mu and sigma to work with a Normal(mu,sigma) random variable.'];
   
case 26 %Poisson
   message_string = ['Let lambda be a positive real number.'...
            ' A random variable X is said to be a Poisson(lambda) random variable'...
        ' if it takes values in {0,1,2,...} with the following probability mass function:\n'...
               ' P(X=k) = e^(-lambda) (lambda^k/k!),   k =0,1,2,3,....\n'...
         ' Enter the parameter lambda to work with a Poisson(lambda) random variable.'];
    

case 30 % Machine Reliability
   message_string ={ [ 'Machine Reliability Model.\n'...
         '      The Depend-On-Us company employees r repair persons to maintain k machines.'...
         ' Each  machine  is either up or down. If a machine  is up at the beginning of a day,'...
         ' then it is up at the beginning of the next day with probability uu=P(up|up),'...
         ' (regardless  of the history of the machine); or it fails with probability 1-uu.'...
         ' The failed machines are repaired by the r servers in a first come first served fashion.'...
         ' If the machine is under repair at the beginning of a day, it remains under repair'...
         ' at the beginning of the next day with probability with probability dd = P(down|down),'...
         ' (regardless of the history of the machine); or the repair completes' ...
         ' and the machine is up with probability 1-dd. A repaired machine is as good as new.']
      [' The state of the system is number of working machines at the beginning of the n th day.'...
         ' Enter the required parameters to work with this model. ']};   
case 31 %Weather model
   message_string = [' Weather Model.\n      The weather in the city of Heavenly is classified'...
         ' as (1) sunny, (2) cloudy or (3) rainy. Tommorow''s weather depends only on today''s weather as follows:'...
         ' If it is sunny today, it is cloudy tomorrow with probability .3 and rainy with probability .2;'...
         ' if it is cloudy today, it is sunny tommorow with probability .5 and rainy with probability .3;'...
         ' and finally, if it is rainy today, it is sunny tommorow with probability .4'...
         ' and cloudy with probability .5. The state of the system is  the weather condition'...
         ' in Heavenly on a given day. Return to work with this model.'];
   
 case 32 %Inventory system
   message_string = ['Inventory Model.\n      Computers-R-Us stocks a wide variety of PCs for'...
         ' retail sales.  At 5:00pm each Friday, the store clerk checks to see how many'...
         ' PCs  are still in stock. If the number is less than s, (called the base stock)'...
         ' then he orders enough PCs to bring the total in stock up to S (>s) (called the restock level)'...
         ' at the beginning of the business day Monday. If the number in stock is s or more'...
         ' no action is taken. The demand for the PCs during the week is a random variable'...
         ' with a given distribution. The demands in successive weeks are independent and'...
         ' identically distributed. Any demand that cannot be immediately satisfied is lost.'...
         ' The state of the system is the number of PCs in stock in Computers-R-Us at 8:00am Monday of the'...
         ' n th week. Enter the required parameters to work with this model'];
   
case 33 %Manufacturing
   message_string = ['Manufacturing Model.\n'...
      '     Gadgets-R-Us company has a manufacturing setup consisting of two'...
         ' machines, each producing one component per hour. Components produced by machine i'...
         ' (i=1,2) are non-defective with probability a_i, and defective with probability'...
         ' 1-a_i. The defective components are discarded and the non-defective ones are'...
         ' stored in two separate bins. Capacity of bin i is B_i. When a component is present'...
         ' in each bin, the two are instantly assembled and shipped out. When a bin is full'...
         ' the corresponding machine is turned off. It is turned on again when there is space'...
         ' at least one component in the bin. The state of the system is the number of'...
         ' components in bin 1 - the number of components in bin 2 at the end of n th hour.'...
         ' Enter the required parameters to work with this model.'];
   
case 34 %Manpower Planning
   message_string = ['Manpower Planning Model.\n'...
         '     Paper-Pushers, Inc. is an insurance company that employees K workers,'...
         ' organized into N grades, labeled 1,2,..,N. State of a worker at time n is the grade that'...
         ' the worker is in at the beginning of the n th week. A worker in grade i at the beginning'...
         ' of the n th week gets promoted to grade i+1 with probability p(i), or leaves'...
         ' the company with probability l(i), or stays in the same grade with probability'...
         ' 1-l(i)-p(i). (p(N) must be zero.) When a worker leaves, he/she is instantly'...
         ' replaced by a new worker in grade i with probability a(i). Enter the required'...
         ' parameters to study the state changes of a single worker and his subsequent'...
         ' replacements.'];
      
   
case 35 %Stock Market.
   message_string = ['Stock Market.\n'...
         '     The common stock of the Gadgets-R-Us company is traded in the stock market.'...
         ' The chief financial officer of the company buys and sells this stock so that'...
         ' the price never falls below L, and never goes above U. The stock value is an'...
         ' integer L,L+1,...,U-1,U. The potential increment in the stock in one day, in the absence of'...
         ' intervention is -2,-1,0,1,2 with probability .2 each, the daily potential increments being iid.'...
         ' The state of the system is the value of the stock at the end of a day.'...
         ' Enter the required parameters to work with this model.'];
   
case 36 %telecommunications
   message_string = ['Telecommunication Model.\n'...
         '     Tel_All Switch Corporation manufactures a digital telecommunication switch'...
         ' that can hold K constant length packets. The time is slotted into intervals'...
         ' of fixed length, so that the switch can remove exactly one packet in one time slot.'...
         ' The number of packets arriving at the switch during a single time slot are iid'...
         ' random variables with a given distribution. If there are no packets in the'...
         ' switch at the beginning of a time slot, none can be removed; else exactly one'...
         ' is removed. The state of the system at time n is the number of packets in the'...
         ' switch at the end of the n th time slot. Enter the required parameters of'...
         ' the problem to work with this model.'];
   
case 40 %General Machine Shop
   message_string = ['General Machine Shop.\n'...
         '     A machine shop consists of N machines and M repair persons. (M <= N.)'...
         ' The machines are identical and the lifetimes of the machines are independent'...
         ' Exp(mu) random variables. Thus the failure rate is mu.'...
         ' When the machines fail, they are served in the order'...
         ' of failure by the M repair persons. Each failed machine needs'...
         ' one and only one repair person, and the repair times are independent'...
         ' Exp(lambda) random variables. Thus the repair rate is lambda.'...
         ' A repaired machine behaves like a new machine. Let X(t) be the number'...
         ' of machines that are functioning at time t. Then {X(t), t >= 0} is a CTMC.'...
         ' Enter the required parameters to work with this model.'];
   
case 41
   message_string = ['Finite Capacity Single Server Queue.\n'...
         '     Customers arrive at an automatic teller machine (ATM) according'...
         ' to a Poisson Process with rate lambda. The space in front of the ATM'...
         ' can accommodate at most K customers. Thus if there are K'...
         ' customers waiting at the ATM, and a new customer arrives, he or she simply'...
         ' walks away and is lost forever. The customers form a single line and use'...
         ' the ATM in a first come first served fashion. The processing times at the'...
         ' ATM for the customers are iid Exp(mu) random variables. Thus the service'...
         ' rate is mu. Let X(t) be the number of customers at the ATM at time t.'...
         '  Then {X(t), t >= 0} is a CTMC.'...
         ' Enter the required parameters to work with this model.'];
   
case 42
   message_string = ['Inventory Model.\n'...
         '     A retail store manages inventory of washing machines as follows. When the'...
         ' number of washing machines in stock decreases to a fixed number k (base stock),'...
         ' an order is placed with the manufacturer for r (called the order size)'...
         ' new washing machines. It takes an Exp(lambda) amount of time for an order'...
         ' to be delivered to the retailer. Thus the delivery rate is lambda.'...
         ' If the inventory is at most k when an order is delivered (including the newly'...
         ' delivered order), another order for r items is placed immediately.'...
         ' The demands for the washing machines  occur according to a Poisson'...
         ' Process with rate mu. Demands that cannot be immediately satisfied'...
         ' Let X(t) be the number of machines in stock at time t. Then {X(t), t >= 0}'...
         ' is a CTMC. Enter the required parameters to work with this model.'];
   
case 43 %Finite Birth and Death Process.
   message_string = ['Finite Birth and Death Process. \n'...
         '    A CTMC on state space {0,1,2,...,K} with the following transition rates'...
         ' (see textbook) is called a birth and death process with finite state space.\n'...
         ' r_(i,i+1) = lambda_i = birth rate in state i, 0 <=0 i < K,\n'...
         ' r_(i,i-1) = mu_i = death rate in state i, 1 <= i <= K.\n'...
         ' All other transition rates are zero. Enter the birth and death rates to'...
         ' work with this model. Note that birth rate in state K and death rate in state'...
         ' 0 must be zero.'];
    
case 44 % Telephone Switch
   message_string = ['Telephone Switch.\n'...
         '     A telephone switch can handle K (the switch capacity) calls at one time. Calls arrive according'...
         ' to a Poisson Process with rate lambda. If the switch is already serving K'...
         ' calls when a new call arrives, then the new call is lost. If a call is'...
         ' accepted, it lasts for an Exp(mu) amount of time. Thus the call completion'...
         ' rate is mu. All call durations are independent of each other. Let X(t) be'...
         ' the number of calls that are being handled by the switch at time t.'...
         ' Then {X(t), t >= 0} is a CTMC. Enter the required parameters to work with this model.'];
   
   
case 45
   message_string = ['Call Center.\n'...
         '     An airline phone-reservation system is called a call center,'...
         ' and is staffed by M reservation clerks called agents. An incoming call for'...
         ' reservations is handled by an agent if one is available, otherwise the'...
         ' caller is put on hold. The system can put a maximum of  H callers on hold.'...
         ' When an agent becomes available, the callers on hold are served in order'...
         ' of arrival. When all the agents are busy and there are H calls on hold,'...
         ' any additional callers get a busy signal and are permanently lost.'...
         ' Let X(t) be the number of calls in the system, those handled by the agents'...
         ' plus any on hold, at time t. The calls arrive according to a Poisson Process'...
         ' with rate lambda and the processing time of the calls are iid Exp(mu) random'...
         ' variables. {X(t), t >= 0} is a CTMC. Enter appropriate parameters to work'...
         ' with this model'];
   
case 46 %manufacturing
   message_string = {['Manufacturing.\n'...
         '     A simple manufacturing facility consists of a single machine that can'...
         ' be turned on or off. If the machine is on it produces items according to a'...
         ' Poisson process with rate lambda. Demands for the items arrive according to'...
         '  a Poisson Process with rate mu. The machine is controlled as follows:'...
         ' if the number of items in stock reaches a maximum number K, (the storage'...
         ' capacity) the machine is turned off. It is turned on again when the number'...
         ' of items in stock decreases to k, the lower control limit. (k <K).']
   ['     Let X(t) be the number of items in stock at time t, and Y(t) be the state'...
         ' of the machine at time t, 1 if it is on and 0 if it is off. Then'...
         ' {(X(t),Y(t)), t >= 0} is a CTMC with state space\n'...
         '  S = {(i,1), 0 <= i < K}  union {(i,0), K >= i > k}. \n'...
         ' The state space has 2*K - k states and they are numbered'...
         ' 0 through 2*K - k -1 in the order they are listed below:\n'...
         ' {(0,1),(1,1),...,(K-1,1),(K,0),(K-1,0),...,(k+1,0)}.\n'...
         ' Enter the appropriate parameters to work with this model.']};
   
case 47 %Airplane Reliability
   message_string = ['Airplane Reliability.\n'...
         '     A commercial jet airplane has four engines, two on each wing.'...
         ' Each engine lasts for an Exp(lambda) amount of time, independent of each other.'...
         ' If the failure takes place in flight, there can be no repair.'...
         ' The airplane needs at least one engine on each wing to function'...
         ' properly in order to fly safely. Let X_L(t) be number of functioning'...
         ' engines on the left wing at time t, and X_R(t) be the number of'...
         ' functioning engines on the right wing at time t. The state of the system at'...
         ' time t is given by X(t) = (X_L(t), X_R(t)). {X(t), t >= 0}  is a CTMC on\n'...
         ' S = {(0,0),(0,1),(0,2),(1,0),(1,1),(1,2),(2,0),(2,1),(2,2)}. \n'...
         ' The states are numbered 1 through 9 in the order listed above.'...
         ' Enter the appropriate parameters to work with this model.'];
   
case 48 % Leaky bucket
   message_string = {['Leaky Bucket.\n'...
         '     Leaky bucket is traffic control mechanism used in high-speed digital'...
         ' telecommunication networks. It consists of two buffers: a token buffer'...
         ' of size M and a data buffer of size D. Tokens are generated according'...
         ' to a Poisson Process with rate mu and are stored in the token buffer.'...
         ' Tokens generated while the token buffer is full are lost. Data packets arrive'...
         ' according to a Poisson Process with rate lambda. If there is a token in the'...
         ' token buffer when a packet arrives, it immediately removes one token from the'...
         ' token buffer and enters the network. If there are no tokens in the token buffer,'...
         ' it waits in the data buffer, if the data buffer is not full. If the data buffer'...
         ' is full, the packet is lost.']
   ['     Let Y(t) be the number of tokens in the token'...
         ' buffer at time t, and Z(t) be the number of data packets in the data buffer'...
         ' at time t. Define \n'...
         '    X(t) = M - Y(t) + Z(t).\n'...
         ' Then {X(t), t >= 0} is a CTMC with  state space {0,1,...,M+D}.'...
         ' Enter appropriate parameters to work with this model.']};
   
case 50
   message_string = ['Series System.\n'...
         ' A series system of N components fails as soon as any one of the components'...
         ' fails. The lifetime of the i th (1 <= i <= N) component is an Exp(v_i) random'...
         ' variable, and the lifetimes of the components are independent. When a component'...
         ' fails, the entire system is shut down, and the failed component is repaired.'...
         ' The  mean repair time of the i th component is tau_i. The repair times are'...
         ' mutually independent as well. When a component is under repair no other'...
         ' component can fail since the system is down. Let X(t) be the state of the'...
         ' system at time t: 0 if it is functioning, i.e., all components are up;'...
         ' and i if the system is down and the i th component is under repair.'...
         ' {X(t), t >= 0} is a semi-Markov process with state space {0,1,2,...,N}.'...
         ' Enter appropriate parameters to work with this model.'];
   

   
case 60 %MM1K
   message_string = ['M/M/1/K Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. There is a single server and the capacity is K. Thus'...
         ' any arriving customer that sees K customers in the system ahead of him is'...
         ' lost permanently. Enter the appropriate parameters to work with this model.'];
   
case 61 %MMsK
   message_string = ['M/M/s/K Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. There are s identical servers and each customer'...
         ' is served by the first available server. The capacity is K. Thus'...
         ' any arriving customer that sees K customers in the system ahead of him is'...
         ' lost permanently. Enter the appropriate parameters to work with this model.'];
   
   
case 62 %MM1
   message_string = ['M/M/1 Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. There is a single server and the capacity is infinite.'...
         ' Enter the appropriate parameters to work with this model.'];
    
case 63 %MMs
   message_string = ['M/M/s Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. There are s identical servers and each customer'...
         ' is served by the first available server. The capacity is infinite.'...
         ' Enter the appropriate parameters to work with this model.'];
     
case 64 %MMinf
   message_string = ['M/M/Infinity Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. (Note: The steady state results are in fact independent of the'...
         ' service time distribution. Thus this model can used for an M/G/Infinity'...
         ' model as well.) There are an infinite number of  identical servers.'...
         ' The capacity is infinite.'...
         ' Enter the appropriate parameters to work with this model.'];
     
case 65 %MG1
   message_string = ['M/G/1 Queue. \n'...
         '     In this queueing system the customers arrive according to a Poisson Process'...
         ' with rate lambda and request iid  service times with mean tau, and variance sigma^2.'...
         ' There is a single server and the capacity is infinite.'...
         ' Enter the appropriate parameters to work with this model.'];
    
case 66 %GM1
   message_string = ['G/M/1 Queue. \n'...
         '     In this queueing system the customers arrive according to a Renewal Process'...
         ' with a general inter-arrival-time distribution and request iid exponential service times with mean 1/mu,'...
         ' i.e., service rate mu. There is a single server and the capacity is infinite.'...
         ' Enter the appropriate parameters to work with this model.'];
    
case 67 %Jackson Networks.
   message_string = {['Jackson Network.\n'...
         ' A Jackson network is a network of queues satisfying the following assumptions:\n'...
         ' 1. The network has N single-station queues.\n'...
         ' 2. The i th station has s_i servers.\n'...
         ' 3. There is an unlimited waiting room at each station.\n'...
         ' 4. Customers arrive at station $i$ from outside the network according to'...
         '    Poisson Process with rate lambda_i. All arrival processes are independent'...
         '    of each other.\n'...
         ' 5. Service times of customers at station i are iid Exp(mu_i) random variables.\n']
   [' 6. Customers finishing service at station i join the queue at station j with'...
         '    routing probability p_{i,j}, or leave the network altogether with probability r_i,'...
         '    independently of each other.\n'...
         ' Enter the appropriate parameters to work with this model.']};
   
case 70 % Optimal Leasing.
   message_string = ['Optimal Leasing of Phone Lines.\n'...
      '    A small private telephone company leases lines from ATT and charges its'... 
 ' customers to place calls on them.   If all the leased lines are busy when a new'... 
 ' call arrives, then the new call is lost; otherwise it is accepted. Each accepted'... 
 ' call pays $c per unit time. The cost of leasing is D dollars per unit time'... 
 ' per line.  Calls arrive according to a Poisson process with rate lambda, and'... 
 ' an accepted call lasts for an Exp(mu) amount of time. All call durations'... 
   ' are independent of each other. How many lines should the company lease to'...
 ' maximize  the long run revenue rate?'...
 ' Enter the appropriate parameters to work with this model.'];
   
case 71 % Tellers
   message_string = ['Optimal Number of Tellers.\n'...
         '     Customers arrive according to a Poisson Process at a bank'...
         ' form a single queue for service and'...
         ' are served by the available tellers. The service times are iid exponential'...
         ' random variables. The bank has space for'...
         '  at the most s tellers to be open simultaneously. The bank lobby can hold'...
         ' at the most K customers. No customer can enter the bank when the lobby is full.'...
         ' Suppose the tellers cost C_t dollars an hour, while the cost of waiting is'...
         ' quantified as C_w dollars per customer per hour. The bank manager has'...
         ' to decide how many tellers to keep open to minimize the long run cost rate.'...
         ' Enter the appropriate parameters to work with this model.'];
  
   
case 72 %optimal replacement
   message_string = ['Optimal Replacement.\n'...
      '     The age replacement policy dictates that an item be replaced upon failure'...
      ' or upon reaching the age of T years. Suppose the lifetimes of successive'...
      ' items are iid random variables with common cdf G. Each new item'...
      ' costs $C, including installation. If the item fails at or before it reaches age'...
      ' T, there is an additional cost of $D that includes the cost of failure on-line.'...
      ' Find the optimal value of T that minimizes the maintenance cost rate.'...
      ' Enter appropriate parameters to work with this model.'];

case 73 %server allocation
   message_string = ['Optimal Server Allocation.\n'...
         '     Customers arrive according to a Poisson Process with rate lambda'...
         ' at a service facility consisting of two queues in tandem. They wait at the'...
         ' first service station and, after service completion, join the second service'...
         ' station. After completing the service at the second station, they depart.'...
         ' There is infinite waiting room at each service station. The service times'...
         ' at station i are exponentially distributed with parameter mu_i, i = 1, 2.'...
         ' There are s identical servers available in total, and we have to decide'...
         ' how many of them should be employed at station 1, and how many at station 2'...
         ' so that the expected total number of customers in the system is minimized.'...
         ' Enter the appropriate parameters to work with this model.'];
   
case 80 %optimal group maintenance
   message_string = {['Optimal Group Maintenance.\n'...
         '     A machine shop consists of K independent and identical machines'...
         ' that are subject to failures and repairs.  We have an'...
         ' option of replacing any number of machines  based upon  the observed'...
         ' number of working machines at the beginning of a day. Replacing a machine'...
         ' costs C_r dollars. The repair person charges C_v dollars per visit and'...
         ' takes exactly one day to complete the replacements regardless of how many'...
         ' machines  are replaced. (Thus, it costs nothing and takes'...
         ' no time to replace zero machines, while it costs C_v + kC_r dollars and takes'...
         ' one day to replace 1 <= k <= K machines.)']
      ['     During the replacement operation'...
         ' all machines are turned off. Each  machine earns revenue of R per day that it'...
         ' is functioning, and earns no revenue when it is in failed condition, or is'...
         ' under maintenance, or is turned off. If a machine is turned off, it does not'...
         ' fail. If a machine is working (and not turned off) at the beginning of the n th'...
         ' day, it is in working condition at the beginning of the (n+1) st day with'...
         ' probability p, (or in failed condition with probability q=1-p) regardless of'...
         ' its age or state of the other machines. A maintenance policy specifies how many'...
         ' machines to replace on the n th day based on how many are working on that day.'...
         ' The aim is to determine an optimal maintenance policy which  minimizes  the'...
         ' expected cost per day in the long run. Enter the appropriate parameters to'...
         ' work with this model.']};
   
   
case 81 %Optimal inventory 
   message_string = {['Optimal Inventory Control.\n'...
         ' A store operates from Monday to Friday every week, and sells PCs.'...
         ' The weekly demands for the PCs are iid random variables with a given'...
         ' distribution. Any demand that cannot be satisfied immediately is lost, i.e.,'...
         ' there is no back-logging or rain checks.   After the store closes on Friday,'...
         ' the store manager checks the inventory of the PCs'...
         ' (the state of the system) and decides how many'...
         ' to order. The order is delivered over the weekend so that the new PCs are'...
         ' available on Monday morning when the store opens.']
   ['The store buys the PCs for $c and sells them for $p > $c. The weekly storage cost'...
         ' is $h per PC that is in the store at the end of the week. There is'...
         ' also a fixed delivery charge of $d (regardless of the size of the delivery).'...
         ' Compute the optimal ordering policy, i.e., number of PCs to order as a'...
         ' function of number of PCs on the shelf at 5:00pm on Friday.'...
         ' Enter the appropriate parameters to work with this model.']};
   
case 82 %proc sharing
   message_string = {['Optimal Processor Scheduling.\n'...
            '     Consider a  multiprocessor multiprogramming computer system with K identical'...
            ' processors and multiprogramming level M (i.e., it can handle at most'...
            ' M jobs at a time). Jobs (computer programs) arrive according a'...
            ' Poisson Process with rate lambda to this computer system and form a'...
            ' single queue. The processing times are iid Exp(mu) random variables.'...
            ' Each program needs exactly one processor, and each processor'...
            ' can execute at the most one program at a time. If  an arriving job finds M'...
            ' jobs in the system, it is lost.  At each arrival and departure epoch we'...
            ' have to decide how many of the K processors should be assigned to execute'...
            ' waiting programs.']
      ['     Switching a processor on or off does not cost anything.'...
            ' Keeping a job in the system costs C_h dollars per hour, while keeping a'...
            ' processor on costs C_p dollars per hour. Each lost job costs C_l dollars.'...
            ' The scheduling policy  specifies how many processors should continue'...
            ' to execute programs after observing the number of jobs in the system after'...
            ' an arrival or a departure epoch. The aim is to find an optimal scheduling policy'...
            ' that minimizes the waiting costs plus processor operating costs plus cost'...
            ' of lost jobs per hour in the long run.']};
   
case 83 %machine operation
   message_string = {['Optimal Machine Operation.\n'...
            '     A machine takes an exponential amount of time to produce one item, with'...
            ' mean production time being 1/lambda hours.  The manufactured items are stored'...
            ' in a warehouse of capacity K. If an item is manufactured and there is no space'...
            ' to store it, it has to be thrown away. The demands for the items arrive according'...
            ' to  a Poisson Process with rate mu per hour. If there is an item in the'...
            ' warehouse when a demand occurs, the demand is satisfied immediately; else it is'...
            ' lost.']
      ['Each satisfied demand produces a revenue of $r. Keeping an item in the'...
            ' warehouse costs $h per hour. The operating cost of the  machine'...
            ' is $c per hour when it is on, and 0 when it is off. The machine can be'...
            ' switched on and off whenever needed.    Turning the machine off costs nothing,'...
            ' but it costs $s  to turn it on. The aim is to minimize the long run cost per hour'...
            ' by turning the machine on and off intermittently.']}; 
   
case 110
   message_string = {[' The workbench window shows the four possible computations'...
            ' that can be performed for the chosen probability model.'...
                        ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window. These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' The four options are described below.']
       ['1.  Mean and Variance. Computes and displays the mean and variance of the chosen distribution.\n'...
          '2. CDF and PMF/PDF. Computes and displays the numerical values of the cumulative distribution'...
          ' function (CDF), and the probability mass function (PMF) for the discrete'...
          ' distributions, and the probability density function (PDF) for the continuous'...
          ' random variables. For continuous random variables the CDF and PDF is displayed'...
          ' for a predetermined discrete set of points. Use the scroll bars to view the'...
          ' values. Sometimes the entire numerical value may not be visible in the cell.'...
          ' Click on the cell and use the left/right arrow keys to see all the digits.']
       ['3. Plot of CDF. Computes and displays the plot of the CDF F(x) = P(X <= x) vs x. x is on the'...
          ' horizontal axis and the CDF is on the vertical axis. The scale is predetermined.'...
          ' The plot appears in a separate MATLAB plot window.\n'...
          '4. Plot of PMF/PDF. Computes and displays the plot of PMF for discrete random variables,'...
          ' and the plot of PDF for the continuous random variables.'...
          ' The plot appears in a separate MATLAB plot window.']};
   
case 120
   message_string = {[' The workbench window shows the six possible computations'...
            ' that can be performed for the chosen discrete time Markov model.'...
            ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window.'...
      ' The output window shows pre-allocated space for all the available computations.'...
      ' However only the computation that is actually requested will appear on it.'...
      ' For this reason it is not necessary to close the output window if more than'...
   ' one computation is going to be performed.'...
   ' These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' The six options are described below.']
 ['1. Transition Matrix. Computes and displays the transition matrix P = [P_(i,j)] for the'...
      ' chosen model.\n'...
      '2. Transient Distribution. A prompt will appear for a non-negative integer n.'...
   ' Enter it in the blank cell provided, and click okay. (Click on cancel to return to the workbench'...
      ' menu.) Computes'...
      ' and displays the pmf of X_n, the state of the system at time n.\n'...
      '3. Occupancy Times. (See the textbook.) A prompt  appears for a non-negative integer n.'...
   ' Enter it in the blank cell provided, and click okay. (Click on cancel to return to the workbench'...
   ' menu.) Computes'...
   ' and displays the occupancy matrix M(n) = [M_(i,j)(n)], where'...
   ' M_(i,j)(n) = the expected number of visits to state j starting from state i'...
   ' during the time interval {0,1,2,...,n}.']
  ['4. Limiting/Occupancy Distribution. The transition probability matrix P is assumed to be'...
      ' irreducible. The package does not check for irreducibility or aperiodicity.'...
      ' Computes and displays the solution to pi = pi*P, sum(pi) = 1. If P is aperiodic'...
      ' pi is the limiting distribution as well as occupancy distribution. If P is'...
      ' periodic pi is the occupancy distribution. (See the textbook.)\n']
     [ '5. Cost Models. A window appears with an option to choose either "total cost" or "long run cost rate".'...
      ' If you wish to compute g(i,n), the expected total cost over time 0 thru n, starting from'...
      ' initial state i, for each i, click on "total cost".  A prompt  appears for a non-negative integer n.'...
   ' Enter it in the blank cell provided, and click okay. (Cancel will return to the workbench'...
   ' menu.) If you wish to compute g, the expected long run cost per unit time'...
   ' click on "long run cost rate". In either case a series of prompts will appear'...
   ' for the cost parameters (either scalars or vectors).'...
   ' Enter them in the blank cells provided, and click okay. (Clicking cancel will return'...
      ' to workbench menu.) Computes and displays the vector [g(i,n)] or the scalar g as desired.']
['6. First Passage Times. A prompt appears for n, the number of target states. Enter a positive integer'...
      ' in the blank cell provided. Click okay to proceed, and cancel to return to'...
      ' workbench menu. Clicking okay produces a prompt to enter a vector of size n. Enter'...
      ' the desired set A of n target states in the n blank cells provided. Click okay to proceed, and cancel to return to'...
      ' workbench menu. Clicking okay produces the mean m_i(A) and variance v_i(A) of the'...
      ' the time taken by the Markov chain, starting from state i, to visit any one of the states'...
      ' in the set A. (See textbook for m_i(A). The textbook does not deal with v_i(A).)']};
   
case 130
   message_string = {[' The workbench window shows the six possible computations'...
            ' that can be performed for the chosen continuous time Markov model.'...
            ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window.'...
      ' The output window shows pre-allocated space for all the available computations.'...
      ' However only the computation that is actually requested will appear on it.'...
      ' For this reason it is not necessary to close the output window if more than'...
   ' one computation is going to be performed.'...
   ' These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' The six options are described below.']
 ['1. Rate Matrix. Computes and displays the rate matrix R = [r_(i,j)] for the'...
       ' chosen model. Rate matrix is the same as the generator matrix, except with'...
       ' zeros along the diagonal. (See textbook.) \n'...
      '2. Transient Distribution. A prompt appears for a non-negative number t.'...
   ' Enter it in the blank cell provided, and click okay. (Click on cancel to return to the workbench'...
      ' menu.) Computes'...
      ' and displays the pmf of X(t), the state of the system at time t'...
   ' Uniformization algorithm is used as described in the textbook.']
      ['3. Occupancy Times. (See the textbook.) A prompt will appear for a non-negative number t.'...
   ' Enter it in the blank cell provided, and click okay. (Cancel will return to the workbench'...
   ' menu.) Computes'...
   ' and displays the occupancy matrix M(t) = [M_(i,j)(t)], where'...
   ' M_(i,j)(t) = the expected amount of time spent in state j starting from state i'...
   ' during the time interval [0,t].\n'...
  '4. Limiting/Occupancy Distribution. The rate probability matrix R is assumed to be'...
      ' irreducible. The package does not check for irreducibility.'...
      ' Computes and displays the solution to pi*D = pi*R, sum(pi) = 1, where'...
      ' D is a diagonal matrix with d_(i,i) = sum(r_(i,.)).  pi is the limiting, stationary'...
      ' as well as the occupancy distribution. (See the textbook.)\n']
     [ '5. Cost Models. Prompt will appear to choose either "total cost" or "long run cost rate".'...
      ' If you wish to compute g(i,T), the expected total cost over the time interval 0 thru T, starting from'...
      ' initial state i, for each i, click on "total cost".  A prompt will appear for a non-negative number T.'...
   ' Enter it in the blank cell provided, and click okay. (Click on cancel to return to the workbench'...
   ' menu.) If you wish to compute g, the expected long run cost per unit time'...
   ' click on "long run cost rate". In either case a series of prompts will appear'...
   ' for the cost parameters (either scalars or vectors).'...
   ' Enter them in the blank cells provided, and click okay. (Click on cancel to return'...
      ' to workbench menu.) Computes and displays the vector [g(i,T)] or the scalar g as desired.']
['6. First Passage Times. A prompt appears for n, the number of target states. Enter a positive integer'...
      ' in the blank cell provided. Click on okay to proceed, and cancel to return to'...
      ' workbench menu. Clicking okay produces a prompt to enter a vector of size n. Enter'...
      ' the desired set A of n target states in the n blank cells provided. Click okay to'...
      ' proceed, and cancel to return to'...
      ' workbench menu. Clicking okay produces the mean m_i(A) and variance v_i(A) of the'...
      ' the time taken by the Markov chain, starting from state i, to visit any one of the states'...
      ' in the set A. (See textbook for m_i(A). The textbook does not deal with v_i(A).)']};
   

   
case 140
   message_string = {[' The workbench window shows the four possible computational options'...
            ' available for the chosen generalized Markov model.'...
            ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window.'...
      ' The output window shows pre-allocated space for all the available computations.'...
      ' However only the computation that is actually requested will appear on it.'...
      ' For this reason it is not necessary to close the output window if more than'...
   ' one computation is going to be performed.'...
   ' These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' The four options are described below.']
['1. Transition Matrix (P = [P_(i,j)]. Click on this to view the one-step transition probability matrix of the'...
   ' embedded discrete time Markov chain.\n'...
   '2. Sojourn Time Vector (w = [w_i]). Click on this to view  the expected sojourn time in each state.\n'...
   '3. Limiting/Occupancy Distribution (p = [p_i]). Displays the long run fraction of the time'...
   ' spent in each state.\n'...
   '4. Cost Models. Click on this to compute the long run cost rate.'...
   ' A series of prompts will appear'...
   ' for the cost parameters (either vectors or matrices).'...
   ' Enter them in the blank cells provided, and click okay.']}; 

case 150
   message_string = {[' Click on the sole workbench option to view the results.'...
      ' The results appear in a separate output window.'...
         ' These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
   ' The list of performance measures computed is given below:']
[       '1. Mean number of customers in the system (L),\n'...
      '2. Mean number of customers  in the queue (L_q),\n'...
      '3. Mean waiting time in the system (includes time in service) (W),\n'...
      '4. Mean waiting time in the queue (excludes time in service) (W_q),\n'...
      '5. Mean number of busy servers (B),\n'...
      '6. The probability of system being full,\n'...
      '7. CDF of the number of customers in the system at an arbitrary time'...
   ' (not available for M/G/1 queue)\n'...
      '8. CDF of the number of customers in the system as seen by an arrival'...
      ' (not available for the M/G/1 queue).\n'...
       ' For the Jackson network, a prompt will appear for the node'...
       ' for which you desire to see these computations.'...
       ' Enter a node number in the blank cell provided and click okay to continue.'...
       ' Click to continue.']};

   


   
case 160
   message_string =  { [   ' The workbench window shows the two computational options'...
            ' available for the chosen Design Model.'...
            ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window.'...
         ' These results can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' Click on the desired option to continue.'...
   ' The two options are described below.']
[' 1. Optimal Long Run Cost/Revenue Rate. Click on this to view the optimal'...
      ' value of the design parameter and the optimal cost/revenue rate in the long run.\n'...
      '2. Plot of Objective Function. Click on this to see the plot'...
      ' of the long run cost/revenue rate as a function of the revenue rate.']};
case 170
   message_string = {[' The workbench window shows the four computational options'...
            ' available for the chosen Control Model.'...
            ' Click on the desired option to view the results.'...
      ' The results appear in a separate output window.'...
         ' Only the last result can be'...
      ' saved in a file by clicking on the "save results" option on the menu bar.'...
      ' The saved file can then be printed out to obtain a hard copy.'...
      ' Close the output window by clicking on "close window" option on the menu bar.'...
      ' Click on the desired option to continue.'...
      ' The four options are described below.']
['1. Cost Matrix. Click on this to see the cost matrix C = [C(i,a)]'...
      ' where C(i,a) is the expected cost incurred if action a is chosen in state i.'...
      ' This result cannot be saved.\n'...
      '2. Transition Probability Matrices. Click on this to get a prompt for the'...
      ' the action a for which you wish to see the transition probability matrix'...
      ' P(a) = P_(i,j)(a)], where P_(i,j)(a) is the conditional probability that the'...
      ' system jumps to state j if it is in state i, and action a is chosen.'...
      ' This result cannot be saved.\n'...
      '3. Sojourn Time Matrix. Click on this to see the sojourn time matrix'...
      ' W = [W(i,a)], where W(i,a) is the expected time spent in state i before'...
      ' the next jump, if action a is chosen.'...
      'This result cannot be saved.']
['4. Optimal Policy and Cost Rate. Click on this to view the optimal long run cost rate'...
      ' and the optimal policy which will achieve it. The optimal policy is found'...
      ' by solving a linear program. (See textbook.) Sometimes the optimal policy is'...
      ' not defined for all states, since the system may not visit some'...
      ' states under the optimal policy. In such a case, the optimal action'...
      ' in state i is denoted by -1.']};
      
   

    
end %switch

      