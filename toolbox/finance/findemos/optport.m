function optport()
%OPTPORT Portfolio optimization demonstration.
%   OPTPORT demonstrates portfolio optimization using given funds.
%
%   See also FRONTIER, MINVAR, PORTRAND, PORTVAR, RARETURN.
%

%       Author(s): C.F. Garvin, 3-31-95
%       Copyright 1995-2002 The MathWorks, Inc.
%       $Revision: 1.14 $   $Date: 2002/04/14 21:45:49 $

SCR = get(0,'screensize');
if SCR(3) < 1024
  Fig = figure('pointer','crosshair','numbertitle','off',...
               'position',[SCR(3)*.05 SCR(4)*.05 SCR(3)*.85 SCR(4)*.85],...
               'name','Portfolio Optimization');
else
Fig = figure('pointer','crosshair','numbertitle','off',...
             'name','Portfolio Optimization');
end
set(gcf,'pointer','watch')
FigPos = get(gcf,'position');
set(gca,'position',[.1 .2 .6 .7],'box','on')
asset = rand(50,6)*50;
raret = rand(1,6)*20;
xlabel('Standard Deviation (Volatility)')
ylabel('Rate of Return')
title('Mutual Fund Portfolio')
text(.1,.7,'Select two or more funds from the list','fontweight','bold'); 
text(.1,.6,'and click Generate Frontier.','fontweight','bold');
text(.1,.4,'Click Help for more information.','fontweight','bold');
Top = FigPos(4);
Right = FigPos(3);
BSpace = 3;
BWidth = 83;
TBWidth = 60;
LongWidth = BWidth+TBWidth+BSpace;
BHeight = 20;
BLabels = ['Equity        ';...
           'Balanced      ';...
           'SmallCap      ';...
           'International ';...
           'Index         ';...
           'Core Bond     ';...
           ];
for i = 1:6
FBut(i) = uicontrol('style','check','value',0,...
          'position',[Right-(BSpace+BWidth) Top-((i+1)*(BSpace+BHeight)) BWidth BHeight],...
          'userdata',i,...
          'string',BLabels(i,:)); 
WBut(i) = uicontrol('style','edit',...
          'horizontalalignment','center',...
          'tag','WField',...
          'string','0.0000',...
          'position',[Right-2*BSpace-BWidth-TBWidth Top-((i+1)*(BSpace+BHeight)) TBWidth BHeight]);
end
WHeadBut = uicontrol('style','text','foregroundcolor','black',...
                     'string','Weights',...
                     'position',...
           [Right-4*BSpace-BWidth-TBWidth Top-(BSpace+BHeight) BWidth BHeight]);
FHeadBut = uicontrol('style','text','foregroundcolor','black',...
                     'string','Funds',...
                     'position',...
           [Right-BSpace-BWidth Top-(BSpace+BHeight) BWidth BHeight]);
TRate = uicontrol('style','text','foregroundcolor','black',...
                    'string','Expected Return',...
                    'position',[Right-(BSpace+LongWidth) Top-((9)*(BSpace+BHeight)) LongWidth BHeight]);
VRate = uicontrol('style','edit',...
                    'horizontalalignment','center',...
                    'tag','ratebox',...
                    'string','0.0000',...
                    'callback',[...
                    'if length(get(gca,''children'')) == 1,'...
                      'set(gcf,''pointer'',''arrow''),'...
                      'errordlg(''Please generate efficient frontier first.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                      'return,'...
                    'end,'...
                    'cols = [];'...
                    'asset = get(findobj(gcf,''string'',''Plot Current Weights''),''userdata'');'...
                    'raret = get(findobj(gcf,''string'',''Main Map''),''userdata'');'...
                    'Funds = findobj(gcf,''style'',''checkbox'');'...
                    'for i = 1:length(Funds),'...
                      'if get(Funds(i),''value''),'...
                         'cols = [cols get(Funds(i),''userdata'')];'...
                      'end,'...
                    'end,'...
                    'cols = sort(cols);'...
                    'asset = asset(:,cols);'... 
                    'raret = raret(:,cols);'... 
                    '[m,n] = size(asset);'...
                   'if exist(''ws''),'...
                     'sizew = size(ws);'...
                     'if sizew(2) ~= n,'...
                      'set(gcf,''pointer'',''crosshair''),'...
                      'errordlg(''Please generate efficient frontier.  Number of weights and assets are unequal.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                      'return,'...
                     'end,'...
                   'end,'...
                    'if n < 2,'...
                     'set(gcf,''pointer'',''crosshair''),'...
                     'errordlg(''Please select at least two funds from list.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                     'return,'...
                    'end,'...
                    'ret = str2double(get(gco,''string''));'...
                    'if ret > max(raret) | ret < min(raret),'...
                     'set(gcf,''pointer'',''crosshair''),'...
                     'errordlg(''Please choose rate within bounds of efficient frontier.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                     'return,'...
                    'else,'...
                     'ws =[];'...
                     '[dum1,dum2,ws] = frontier(asset,raret,2,ret);'...
                     'ws(find(ws<1e-6)) = zeros(size(ws(find(ws<1e-6))));'...
                     'risk = sqrt(portvar(asset,ws));'...
                     'point = findobj(gcf,''marker'',''o'');'...
                     'set(point,''color'',''black'',''erasemode'',''xor''),'...
                     'set(point,''color'',''red'',''Xdata'',risk,''Ydata'',ret),'...
                     'set(findobj(gcf,''tag'',''ratebox''),''string'',num2str(ret)),'...
                     'set(findobj(gcf,''tag'',''sigbox''),''string'',num2str(risk)),'...
                     'WBut = sort(findobj(gcf,''tag'',''WField'',''visible'',''on''));'...
                     'for i = 1:length(ws),'...
                       'set(WBut(i),''string'',num2str(ws(i))),'...
                     'end,'...
                    'end,'...
                    ],...
                    'position',[Right-(BSpace+LongWidth) Top-((10)*(BSpace+BHeight)) LongWidth BHeight]);
TSigma = uicontrol('style','text','foregroundcolor','black',...
                   'string','Volatility',...
                   'position',[Right-(BSpace+LongWidth) Top-((11)*(BSpace+BHeight)) LongWidth BHeight]);
VSigma = uicontrol('style','text','foregroundcolor','black',...
                   'tag','sigbox',...
                   'string','0.0000',...
                   'position',[Right-(BSpace+LongWidth) Top-((12)*(BSpace+BHeight)) LongWidth BHeight]);
FrontierBut = uicontrol('string','Generate Frontier',...
                   'position',[Right-(BSpace+LongWidth) Top-((13)*(BSpace+BHeight)) LongWidth BHeight]);
MainMapBut = uicontrol('visible','off', 'string','Main Map',...
                     'userdata',raret,...
                     'position',[Right-(BSpace+LongWidth) Top-((15)*(BSpace+BHeight)) LongWidth BHeight],...
                 'callback','close;figure(findobj(0,''tag'',''MAINMAP''));');

%------------------------

out1 = str2mat(...
' In this demonstration MATLAB and the Financial and Optimization ',...
' Toolboxes optimize a portfolio of mutual funds.  A portfolio must contain at ',...
' least two of the six Funds listed in the upper right of the screen, each ',...
' of which has a rate of return and some risk.',...
'.',...
'    Click on (select) at least two funds.  Click the Generate Frontier ',...
'    button to generate the efficient frontier.',...
'.',...
' A light blue line shows the efficient frontier for this portfolio:  the ',...
' set of points that achieves the highest rate of return for a given ');
out2 = str2mat(...
' amount of risk.  The dark blue points represent random weighting ',...
' combinations of the selected funds.  The Weights, Expected Return, and ',...
' Volatility values pertain to the optimum fund allocation:  the highest ',...
' return with the least risk.  The red circle on the graph also shows this ',...
' optimum point.',...
'.',...
' You can now look at tradeoffs between risk and return for this mix of ',...
' funds and their efficient frontier.  You can vary the rate of return or ',...
' the weights of funds in the portfolio.',...
'.');
out3 = str2mat(...
'    Edit the rate in the Expected Return box and press Enter, or click on ',...
'    the desired rate within the graph.  The weights will change to show ',...
'    the relative amount of money to invest in each fund in order to ',...
'    achieve that rate.  The value for volatility will also change, ',...
'    indicating the associated level of risk.',...
'.',...
'    Edit the values in the Weights boxes.  The weights must be decimal ',...
'    fractions whose sum equals 1 (0.25, 0.25, and 0.5 for example.)  Then ',...
'    click the Plot Current Weights button to see the rate of return and ',...
'    risk (volatility) associated with the new mix of selected funds.');
out4 = str2mat(...
'    A green X on the graph shows this new mix. ',...
'.',...
' To examine more alternatives, select a different mix of at least two ',...
' funds, click Generate Frontier, and proceed as before.');
HelpDlgString = str2mat(out1,out2,out3,out4);
HelpBut = uicontrol('string','Help',...
                    'userdata',HelpDlgString,...
                    'position',[Right-(BSpace+LongWidth) Top-((16)*(BSpace+BHeight)) LongWidth BHeight],...
                    'callback',[...
                    'helpwin(get(gco,''userdata''),''Portfolio Optimization Help'');'...
    ]);

CloseBut = uicontrol('String', 'Close',...
    'Position',[Right-(BSpace+LongWidth) Top-((17)*(BSpace+BHeight)) LongWidth BHeight], ...
    'Style','Pushbutton', 'Callback','close');

PlotBut = uicontrol('string','Plot Current Weights',...
                    'position',[Right-(BSpace+LongWidth) Top-((14)*(BSpace+BHeight)) LongWidth BHeight],...
                    'userdata',asset);
set([FBut WBut FHeadBut WHeadBut MainMapBut HelpBut PlotBut CloseBut],'units','normal')
set([TRate VRate TSigma VSigma FrontierBut],'units','normal')
FrontierButCall = [...
              'set(gcf,''pointer'',''watch''),'...
              'cla,'...
              'cols = [];'...
              'asset = get(findobj(gcf,''string'',''Plot Current Weights''),''userdata'');'...
              'raret = get(findobj(gcf,''string'',''Main Map''),''userdata'');'...
              'Funds = findobj(gcf,''style'',''checkbox'');'...
              'for i = 1:length(Funds),'...
               'if get(Funds(i),''value''),'...
                 'cols = [cols get(Funds(i),''userdata'')];'...
               'end,'...
              'end,'...
              'cols = sort(cols);'...
              'asset = asset(:,cols);'... 
              'raret = raret(:,cols);'... 
              '[m,n] = size(asset);'...
             'if n < 2,'...
              'set(gcf,''pointer'',''crosshair''),'...
              'errordlg(''Please select at least two funds from list.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
             'else,'...
              'portrand(asset,raret,3000);'...
              'set(findobj(gcf,''color'',[0 1 1]),''color'',[0 0 1]),'...
              'xlabel(''% Standard Deviation (Volatility)''),'...
              'ylabel(''Rate of Return (%)''),'...
              'title(''Mutual Fund Portfolio''),'...
              'set(gca,''position'',[.1 .2 .6 .7]),'...
              'grid on,'...
              'hold on,'...
              'drawnow,'...
              'ws = [];'...
              '[v,r,dum3] = frontier(asset,raret,50);'...
              'plot(v,r,''c-'',''linewidth'',3);,'...
              'risk = min(v);'...
              'ret = r(find(v==risk));'...
              'plot(risk,ret,''ro'',''linewidth'',5,''erasemode'',''xor''),'...
              'set(findobj(gcf,''tag'',''ratebox''),''string'',num2str(ret)),'...
              'set(findobj(gcf,''tag'',''sigbox''),''string'',num2str(risk)),'...
              'hold off,'...
              'n = length(cols);'... 
              '[dum1,dum2,ws] = frontier(asset,raret,2,ret);'...
              'ws(find(ws<1e-6)) = zeros(size(ws(find(ws<1e-6))));'...
              'WBut = sort(findobj(gcf,''tag'',''WField''));'...
              'set(WBut,''visible'',''off'');'...
              'for i = 1:length(ws),'...
                'set(WBut(cols(i)),''string'',num2str(ws(i)),''visible'',''on''),'...
              'end,'...
              'set(gcf,''pointer'',''crosshair''),'...
             'end,'...
             'hold off,'...
              ];
set(FrontierBut,'callback',FrontierButCall)
PlotButCall = [...
              'set(gcf,''pointer'',''watch''),'...
              'hold on,'...
              'if isempty(get(gca,''children'')),'...
                 'set(gcf,''pointer'',''crosshair''),'...
                 'errordlg(''Please generate efficient frontier first.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                 'return,'...
              'end,'...
              'cols = [];'...
              'asset = get(findobj(gcf,''string'',''Plot Current Weights''),''userdata'');'...
              'raret = get(findobj(gcf,''string'',''Main Map''),''userdata'');'...
              'Funds = findobj(gcf,''style'',''checkbox'');'...
              'for i = 1:length(Funds),'...
               'if get(Funds(i),''value''),'...
                'cols = [cols get(Funds(i),''userdata'')];'...
               'end,'...
              'end,'...
              'cols = sort(cols);'...
              'asset = asset(:,cols);'...
              'raret = raret(:,cols);'...
              '[m,n] = size(asset);'...
             'if exist(''ws''),'...
               'sizew = size(ws);'...
               'if sizew(2) ~= n,'...
                'set(gcf,''pointer'',''crosshair''),'...
                'errordlg(''Please generate efficient frontier.  Number of weights and assets are unequal.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
                'return,'...
               'end,'...
             'end,'...
             'if n < 2,'...
              'set(gcf,''pointer'',''crosshair''),'...
              'errordlg(''Please select at least two funds from list.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
             'else,'...
              'WBut = sort(findobj(gcf,''tag'',''WField'',''visible'',''on''));'...
              'ws = [];'...
              'for i = 1:length(WBut),'...
               'ws = [ws,str2double(get(WBut(i),''string''))];'...
              'end,'...
             'if (sum(ws) > 1+1e-3 | sum(ws) < 1-1e-3),'...
              'set(gcf,''pointer'',''crosshair''),'...
              'errordlg(''Sum of weights must equal one.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
             'else,'...
              'risk = sqrt(portvar(asset,ws));'...
              'ret = portror(raret,ws);'...
              'if isempty(findobj(gcf,''marker'',''x'')),'...
                'plot(risk,ret,''gx'',''linewidth'',2,''markersize'',8,''erasemode'',''xor''),'...
              'else,'...
                'set(findobj(gcf,''marker'',''x''),''Xdata'',risk,''Ydata'',ret),'...
              'end,'...
              'set(findobj(gcf,''tag'',''ratebox''),''string'',num2str(ret)),'...
              'set(findobj(gcf,''tag'',''sigbox''),''string'',num2str(risk)),'...
              'set(gcf,''pointer'',''crosshair''),'...
             'end,'...
             'end,'...
             'hold off,'...
              ];
set(PlotBut,'callback',PlotButCall)
set(gcf,'windowbuttondownfcn','set(gcf,''pointer'',''watch''),p = get(gca,''currentpoint'');',...
    'windowbuttonupfcn',[...
    'set(gcf,''pointer'',''watch''),'...
    'if isempty(get(gca,''children'')),'...
       'set(gcf,''pointer'',''crosshair''),'...
       'errordlg(''Please generate efficient frontier first.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
       'set(gcf,''pointer'',''arrow''),'...
       'return,'...
    'end,'...
    'cols = [];'...
    'asset = get(findobj(gcf,''string'',''Plot Current Weights''),''userdata'');'...
    'raret = get(findobj(gcf,''string'',''Main Map''),''userdata'');'...
    'Funds = findobj(gcf,''style'',''checkbox'');'...
    'for i = 1:length(Funds),'...
     'if get(Funds(i),''value''),'...
       'cols = [cols get(Funds(i),''userdata'')];'...
     'end,'...
    'end,'...
    'cols = sort(cols);'...
    'asset = asset(:,cols);'...
    'raret = raret(:,cols);'...
    '[m,n] = size(asset);'...
    'if exist(''ws''),'...
     'sizew = size(ws);'...
     'if sizew(2) ~= n,'...
       'set(gcf,''pointer'',''crosshair''),'...
       'errordlg(''Please generate efficient frontier.  Number of weights and assets are unequal.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
       'return,'...
      'end,'...
    'end,'...
    'if n < 2,'...
      'set(gcf,''pointer'',''crosshair''),'...
      'errordlg(''Please select at least two funds from list.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
    'else,'...
      'if p(1,2) > max(raret) | p(1,2) < min(raret),'...
        'set(gcf,''pointer'',''crosshair''),'...
        'errordlg(''Please choose rate within bounds of efficient frontier.'');'...
    'set(findobj(gcf,''type'',''uicontrol''),''backgroundcolor'',''white''),'...
        'return,'...
      'end,'...
      'ws = [];'...
      '[dum1,dum2,ws] = frontier(asset,raret,2,p(1,2));'...
      'ws(find(ws<1e-6)) = zeros(size(ws(find(ws<1e-6))));'...
      'WBut = sort(findobj(gcf,''tag'',''WField'',''visible'',''on''));'...
      'for i = 1:length(ws),'...
       'set(WBut(i),''string'',num2str(ws(i))),'...
      'end,'...
      'risk = sqrt(portvar(asset,ws));'...
      'point = findobj(gcf,''marker'',''o'');'...
      'set(point,''color'',''black'',''erasemode'',''xor''),'...
      'set(point,''color'',''red'',''Xdata'',risk,''Ydata'',p(1,2)),'...
      'set(findobj(gcf,''tag'',''ratebox''),''string'',num2str(p(1,2))),'...
      'set(findobj(gcf,''tag'',''sigbox''),''string'',num2str(risk)),'...
    'end,'...
    'set(gcf,''pointer'',''crosshair''),'...
    ]);
TXT = findobj(gcf,'style','text');
set(TXT,'backgroundcolor',get(gcf,'color'))
set(gcf,'pointer','crosshair')
