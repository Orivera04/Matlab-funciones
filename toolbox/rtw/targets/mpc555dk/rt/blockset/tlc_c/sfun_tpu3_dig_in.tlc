%% File: sfun_tpu3_dig_out.tlc
%%
%% Abstract:
%%   Implement device driver for digital output using Timer Processing
%%   Unit, TPU3.
%%
%% Disclaimers / restrictions if any.
%%
%% $Revision: 1.6 $
%% $Date: 2002/12/10 16:49:06 $
%%
%% Copyright 2002 The MathWorks, Inc.

%implements sfun_tpu3_dig_in "C"
%include "mpc555_common_includes.tlc"
%include "tpu3_function_library.tlc"

%% Function: BlockInstanceSetup ===============================================
%% Abstract:
%%   Pre-code generation work
%%
%function BlockInstanceSetup(block, system) void
%endfunction

%% Function: Start ==========================================================
%% Abstract:
%%      Sets up TPU channels for PWM
%%
%function Start(block, system) Output 
   %if !SLibCodeGenForSim()
      %% only generate code for RT
      /* %<Type> Block: %<Name> */
      /* Digital input setup for TPU3 module %<SFcnParamSettings.Module> */
      %assign module = SFcnParamSettings.Module
      %assign channel = SFcnParamSettings.Channel
      %assign channelPri = SFcnParamSettings.ChannelPriority
      %<tpuFunctionSelect(module, channel, "TPU_FN_DIO", "Select DIO TPU Function")>
      %<tpuSetParam(module, channel, "TPU_DIO_CHANNEL_CONTROL_PARAM", "TPU_DIO_INPUT_CHANNEL_CONTROL", "Set CHANNEL_CONTROL")>
      %<tpuSetHSQR(module, channel, "TPU_DIO_HSQR_TRANSITION_MODE", "Set TPU Host Sequence Register")> 
      %<tpuSetHSRR(module, channel, "TPU_DIO_HSRR_INIT_AS_PER_HSQR", "Set TPU Host Service Request Register")> 
      %<tpuSetChannelPriority(module, channel, channelPri, "Set Channel Priority Register to enable DIO")>
      %<tpuWaitForClearHSRR(module, channel)>
   %endif
%endfunction


%% Function: Outputs ==========================================================
%% Abstract:
%%      Sets digital output
%%
%function Outputs(block, system) Output
   %if !SLibCodeGenForSim()
      %% only generate code for RT
      /* %<Type> Block: %<Name> */
      /* Digital input for TPU3 module %<SFcnParamSettings.Module> */
      %assign module = SFcnParamSettings.Module
      %assign channel = SFcnParamSettings.Channel
      %% get reference to the output signal
      %assign outputSignal = LibBlockOutputSignal(0, "", "", 0)
      /* read PIN_LEVEL parameter (bit 15) */
      %<outputSignal> =  %<tpuGetParam(module, channel, "TPU_DIO_PIN_LEVEL_PARAM")> >> 15;
   %endif
%endfunction
