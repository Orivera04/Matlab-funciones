%% File: ert_pil_lib.tlc
%%
%% $Revision: 1.11.2.1 $
%% $Date: 2004/04/19 01:27:23 $
%%
%% Copyright 2001-2002 The MathWorks, Inc.
%%
%% Abstract: Embedded real-time system target file for Processor in 
%% the Loop Simulation.TLC function library for target's main TLC file.
%%

%include "pilmarshal_lib.tlc"

%function DumpListOfGeneratedSourceFiles() Output
%%  <H2>Generated Source Files</H2>
  %assign rec = FEVAL("rtwprivate","rtwreport", "getStateflowSourceFiles")
%%  <TABLE BORDER="1" CELLPADDING="5" CELLSPACING="1">
%%  <TR><TD><B> Generated Source <TD> File Subsystem Block </B></TR>
  %foreach systemIdx = NumSystems-1
    %assign tmpName    = LibMangledPathName(System[systemIdx].Name)
    %assign magledName = FEVAL("rtwprivate", "rtworigname", tmpName)
%%    <TR> <TD> %<SLibGetSystemOutputFileName(System[systemIdx])></TR>
%%    <TD> "<A href="matlab: rtwprivate rtwctags_hilite %<magledName>;"> \
%%    %<magledName></A>"
  %endforeach %% systemIdx = NumSystems - 1
  %with rec
    %foreach chartIdx = NumberOfStateflowFiles
      %assign tmpName    = Chart[chartIdx].Name
      %assign magledName = FEVAL("rtwprivate", "rtworigname", tmpName)
%%      <TR> <TD> %<Chart[chartIdx].File>.c </TR>
%%      <TD> "<A href="matlab: rtwprivate rtwctags_hilite %<magledName>;"> \
%%      %<magledName></A>"
    %endforeach
  %endwith   
%%  </TABLE>
%endfunction

%function PilSetInputsToAuto() void
%with CompiledModel
  %if NumModelInputs > 0
    %foreach idx = ExternalInputs.NumExternalInputs
      %assign extInp = ExternalInputs.ExternalInput[idx]
      %with extInp
	%% 
	%% Change inputs with unsupported storage classes to storage class auto.
	%% Warn once that this is happening.
	%% 
	%if extInp.StorageClass == "Auto"
	  %%
	  %% inputs with Auto storage class do not have to be modified
	  %%
	  %continue
	%endif
	%if extInp.StorageClass == "Custom"
	  %assign extInp.StorageClass = "Auto"
	  %continue
	%endif

	%if extInp.StorageClass == "ExportedGlobal"
	  %assign extInp.StorageClass = "Auto"
	  %continue
	%endif

	%if extInp.StorageClass == "ImportedExtern"
	  %assign extInp.StorageClass = "Auto"
	  %continue
	%endif

	%if extInp.StorageClass == "ImportedExternPointer"
	  %assign extInp.StorageClass = "Auto"
	  %continue
	%endif

	%%
	%% Report any unhandled cases
	%%
	%assign warnstring = "Unsupported/Unhandled input signal StorageClass: %<extInp.StorageClass>"
	%<LibReportWarning(warnstring)>
	%<LibReportError(warnstring)>
	
      %endwith %% extInp
    %endforeach
  %endif
%endwith %% CompiledModel
%endfunction

%function PilLibManageInputs() void
  %<PilSetInputsToAuto()>
%endfunction

%function PilCacheExportPrototype(buffer) void
  %assign pc = CompiledModel.CustomCode
  %assign pc.ExportFileHeader = pc.ExportFileHeader + buffer
%endfunction

%function PilCacheDataPrototype(buffer) void
  %assign pc = CompiledModel.CustomCode
  %assign pc.HeaderFileTrailer = pc.HeaderFileTrailer + buffer
%endfunction

%function PilCacheDataInstance(buffer) void
  %assign pc = CompiledModel.CustomCode
  %assign pc.PrmFileHeader = pc.PrmFileHeader + buffer
%endfunction

%function PilCacheDataInstanceToPRM(buffer) void
  %assign pc = CompiledModel.CustomCode
  %assign pc.PrmFileHeader = pc.PrmFileHeader + buffer
%endfunction

%function PilAddModelChecksum() void

  %%
  %% Make typedef declaration available for Checksum structure
  %%
  %openfile mdlChecksumProto
  typedef struct PILModelChecksum_tag {
    uint32_T Checksum[4];
  } PILModelChecksum;
  %closefile mdlChecksumProto
  %<PilCacheExportPrototype(mdlChecksumProto)>

  %openfile mdlChecksumExports
  extern int pil_error(void *,char *);
  extern PILModelChecksum mdlChecksum;
  %closefile mdlChecksumExports
  %<PilCacheExportPrototype(mdlChecksumExports)>

  %openfile mdlChecksumBuf
    %with CompiledModel
    PILModelChecksum mdlChecksum={%<ModelChecksum[0]>,
			      %<ModelChecksum[1]>,
			      %<ModelChecksum[2]>,
			      %<ModelChecksum[3]>};
    %endwith
  %closefile mdlChecksumBuf
  %<PilCacheDataInstance(mdlChecksumBuf)>
%endfunction

%function PilManageInfStopTime() void
  %if ISINF(CompiledModel.StopTime)
    %assign CompiledModel.StopTime = -1
  %endif
%endfunction

%%
%% Force all inputs' storage classes to auto.
%%
%<PilLibManageInputs()>
%<PilManageInfStopTime()>

%% Function: cache_source_file_names =========================================
%% Transfer the names of the source file names generated by RTW to the
%% rtwattic making the list available to TLC and M through a single
%% repository. 
%%
%% Adopted from toolbox/rtw/targets/tic6000/tic6000/c6000_sourcefiles.tlc.
%%
%function cache_source_file_names() void
  %with CompiledModel
    %assign SourceFiles = []
    %assign HeaderFiles = []
    %foreach idx = LibGetNumModelFiles()
      %assign ThisFile = LibGetModelFileAttribute(idx,"Name")
      %if LibGetModelFileAttribute(idx,"Type") == "SystemHeader"
	%assign HeaderFiles = HeaderFiles + "%<ThisFile>"
      %else
	%assign SourceFiles = SourceFiles + "%<ThisFile>"
      %endif
    %endforeach
  %endwith

  %<FEVAL("rtwprivate","rtwattic","AtticData","HeaderFiles",HeaderFiles)>
  %<FEVAL("rtwprivate","rtwattic","AtticData","SourceFiles",SourceFiles)>
  
%endfunction %% cache_source_file_names
