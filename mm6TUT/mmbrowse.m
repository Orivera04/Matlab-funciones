function mmbrowse(a)
%MMBROWSE Graphical Matrix Browser. (MM)
% MMBROWSE(A) opens a spreadsheet-like window for
% viewing the real Matrix A.
%
% If the array is large, scrollbars appear. Clicking on arrows
% scrolls one line, clicking on the trough scrolls one page.
%
% Close the window by clicking on the 'X' pushbutton in the
% lower right corner or the operating system window close box.

% Uses: mmgetpos mmdeal 

% D.C. Hanselman, University of Maine, Orono, ME, 04469
% 1/12/97, 3/35/98, 9/23/98
% Mastering MATLAB 5, Prentice Hall, ISBN 0-13-858366-8

if ~ischar(a)  % create a new browser
   
   tmp=get(0,'ShowHiddenHandles');
   set(0,'ShowHiddenHandles','on');
   delete(findobj(0,'Type','figure','Tag','MMBROWSE figure'))
   set(0,'ShowHiddenHandles',tmp)
   
   dima=size(a);
   if max(dima)==1|ndims(a)>2, error('Input Must be 2D Array.'), end
   if ~isnumeric(a),           error('Input Must be Numeric.'),  end
   if ~isreal(a),              error('Input Must be Real.'),     end
   
   MaxRows=30;
   MaxCols=8;
   WSlide=16;
   FontSize=get(0,'DefaultUicontrolFontSize');
   WCol=FontSize*7;
   WLabel=FontSize*3;
   HRow=FontSize+3;
   HLabel=FontSize+5;
   FigSide=10;
   FigTop=80;
   FLeft=10;
   FBott=25;
   Border=5;
   WS=2;
   Color=[1 1 1];
   FColor=0.85*[1 1 1];
   
   ss=mmgetpos(0,'points');
   maxcols=fix((ss(3)-FLeft-2*FigSide-WSlide-WLabel-3*Border)/(WCol+WS));
   maxcols=min(maxcols,MaxCols);
   maxrows=fix((ss(4)-FBott-FigTop-FigSide-WSlide-HLabel-3*Border)/HRow);
   maxrows=min(maxrows,MaxRows);
   if dima(1)>maxrows
      rowscroll=1; rows=maxrows; rowm=dima(1)-rows+1;
   else
      rowscroll=0; rows=dima(1); rowm=0;
   end
   if dima(2)>maxcols
      colscroll=1; cols=maxcols; colm=dima(2)-cols+1;
   else
      colscroll=0; cols=dima(2); colm=0;
   end
   HData=rows*HRow;
   WData=cols*(WCol+WS);
   
   Hf=figure('Units','points',...
      'BackingStore','off',...
      'Color',[1 1 1]/2,...
      'ColorMap',[],...
      'Menubar',menubar,...
      'Numbertitle','off',...
      'Name','MM Browse',...
      'HandleVisibility','callback',...
      'IntegerHandle','off',...
      'Interruptible','off',...
      'Resize','off',...
      'UserData',a,...
      'Visible','off',...
      'Tag','MMBROWSE figure');
   
   RowIndex=sprintf('%3.0f\n',1:rows);
   RowIndex(end)=[];
   Hl=uicontrol('Parent',Hf,...
      'BackGroundColor',FColor,...
      'Style','Text',...
      'HorizontalAlignment','Right',...
      'Units','points',...
      'FontSize',FontSize,...
      'Position',[Border Border+WSlide+WS WLabel HData],...
      'Tag','RowLabel',...
      'String',RowIndex);
   tmp=get(Hl,'Extent');
   HData=tmp(4)+rows; %%%%%%%%
   set(Hl,'Position',[Border Border+WSlide+WS WLabel HData])
   
   fpos=[FLeft FBott...
         (WData+WLabel+WSlide+3*Border)...
         (HData+WSlide+HLabel+3*Border)];
   set(Hf,'Position',fpos,'Visible','on')
   
   
   if rowscroll
      uicontrol('Parent',Hf,...
         'Style','Slider',...
         'Units','points',...
         'Position',[2*Border+WLabel+WData Border+WSlide+WS WSlide HData],...
         'Min',-1,'Max',0,...
         'Value',0,...
         'SliderStep',[1/rowm min(1,(rows-1)/rowm)],...
         'UserData',[rows-1 rowm cols-1 colm],...
         'Tag','RowScroll',...
         'Callback','mmbrowse(''row'')')
   end
   if colscroll
      uicontrol('Parent',Hf,...
         'Style','Slider',...
         'Units','points',...
         'Position',[2*Border+WLabel Border WData WSlide],...
         'Min',0,'Max',1,...
         'Value',0,...
         'SliderStep',[1/colm min(1,(cols-1)/colm)],...
         'UserData',[rows-1 rowm cols-1 colm],...
         'Tag','ColScroll',...
         'Callback','mmbrowse(''column'')')
   end
   uicontrol('Parent',Hf,...
      'Style','Pushbutton',...
      'Units','points',...
      'Position',[2*Border+WLabel+WData Border WSlide WSlide],...
      'FontSize',FontSize,...
      'String','X',...
      'Callback','delete(get(gcbo,''parent''))')
   
   for i=1:cols
      SData=sprintf('%.4g\n',a(1:rows,i));
      SData(end)=[];
      uicontrol('Parent',Hf,...
         'BackGroundColor',Color,...
         'Style','text',...
         'HorizontalAlignment','right',...
         'Units','points',...
         'Position',[2*Border+WLabel+(i-1)*(WCol+WS) Border+WSlide+WS WCol HData],...
         'FontSize',FontSize,...
         'Tag','Data',...
         'UserData',i,...
         'String',SData);
      uicontrol('Parent',Hf,...
         'BackGroundColor',FColor,...
         'Style','text',...
         'HorizontalAlignment','center',...
         'Units','points',...
         'Position',[2*Border+WLabel+(i-1)*(WCol+WS) 2*Border+WSlide+WS+HData WCol HLabel],...
         'FontSize',FontSize,...
         'Tag','ColLabel',...
         'UserData',i,...
         'String',sprintf('%.0f',i));
   end
else  % callback
   
   switch a
   case 'row'
      [Hr,Hf]=gcbo;
      a=get(Hf,'UserData');
      [row,rowm,col,colm]=mmdeal(get(Hr,'UserData'));
      rv=abs(get(Hr,'Value'));
      rv=round(1-rv + rv*rowm);
      r=rv:rv+row;
      rstr=sprintf('%.0f\n',r); rstr(end)=[];
      set(findobj(Hf,'Tag','RowLabel'),'String',rstr)
      if colm>0  % ColScroll exists
         cv=get(findobj(Hf,'Tag','ColScroll'),'Value');
         cv=round(1-cv + cv*colm);
      else
         cv=1;
      end
      c=cv:cv+col;
      Hd=findobj(Hf,'Tag','Data');
      for i=1:length(Hd)
         j=get(Hd(i),'UserData');
         SData=sprintf('%.4g\n',a(r,c(j)));
         SData(end)=[];
         set(Hd(i),'String',SData)
      end
      
   case 'column'
      [Hc,Hf]=gcbo;
      a=get(Hf,'UserData');
      [row,rowm,col,colm]=mmdeal(get(Hc,'UserData'));
      cv=abs(get(Hc,'Value'));
      cv=round(1-cv + cv*colm);
      c=cv:cv+col;
      if rowm>0  % RowScroll exists
         rv=get(findobj(Hf,'Tag','RowScroll'),'Value');
         rv=round(1-rv + rv*rowm);
      else
         rv=1;
      end
      r=rv:rv+row;
      Hd=findobj(Hf,'Tag','Data');
      for i=1:length(Hd)
         H=findobj(Hf,'Tag','ColLabel','UserData',i);
         set(H,'String',sprintf('%.0f',c(i)))
         j=get(Hd(i),'UserData');
         SData=sprintf('%.4g\n',a(r,c(j)));
         SData(end)=[];
         set(Hd(i),'String',SData)
      end
   otherwise
      error('Input Must be a Numeric Array.')
   end
end
