%% $RCSfile: c28xcanxmt.tlc,v $
%% $Revision: 1.1.6.2 $ $Date: 2004/04/08 20:59:43 $
%% Copyright 2003-2004 The MathWorks, Inc.



%implements c28xcanxmt "C"

%% Function: JustCreatedCompiledModelRecord ==================================
%function JustCreatedCompiledModelRecord(recordName) void

    %assign fullRecordName = "::CompiledModel." + recordName
    %%
    %if !EXISTS("%<fullRecordName>")
        %assign retval = 1  %% First call

        %% Create record since it does not yet exist:
        %assign %<recordName> = 1
        %assign ::CompiledModel = ::CompiledModel + %<recordName>
        %undef %<recordName>  %% Remove from current scope
    %else
        %assign retval = 0  %% Subsequent call

    %endif
    %return retval

%endfunction %% JustCreatedCompiledModelRecord


%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

    %openfile buffer
    #include "DSP281x_Device.h"
    %closefile buffer
    %<LibCacheIncludes(buffer)>
    
    %% guard is needed since both eCAN blocks declare this function
    %if JustCreatedCompiledModelRecord("config_eCANmbx_prototype") 
        %openfile buffer
        void config_eCANmbx (uint16_T mbxType, uint16_T mbxNo, uint32_T msgID, uint16_T msgType);
        %closefile buffer
        %<LibCacheDefine(buffer)>
    %endif        
    
%endfunction %% BlockTypeSetup



%% Function: BlockInstanceSetup ===============================================
%%
%function BlockInstanceSetup(block,system) void

    %<AddParamsToBlock(block)>
    
%endfunction %% BlockInstanceSetup



%% Function: Start ============================================================
%%
%%  Initialize eCAN transmit mailbox.
%%
%function Start(block,system) Output

    /* Configure mailbox %<mailboxNo> to transmit messages with the ID: %<messageID> */
    config_eCANmbx (1U, %<mailboxNo>, %<messageID>, %<messageType>);
    
%endfunction %% Start



%% Function: Outputs ==========================================================
%%
%%  Write the message received from the Simulink model to CAN
%%
%function Outputs(block,system) Output  

/* %<Type> Block: %<Name> (%<ParamSettings.FunctionName>) */
{
    %assign dataType = LibBlockInputSignalDataTypeName(0,"")
    %assign dataWidth = LibBlockInputSignalWidth(0)
    %%
    %switch (dataType)
    %case "uint16_T"
        %assign messageLength = dataWidth * 2
        %switch (dataWidth)
        %case 4
            ECanaMboxes.MBOX%<mailboxNo>.MDH.word.HI_WORD = %<LibBlockInputSignal(0,"","",3)>;        
        %case 3
            ECanaMboxes.MBOX%<mailboxNo>.MDH.word.LOW_WORD = %<LibBlockInputSignal(0,"","",2)>;        
        %case 2
            ECanaMboxes.MBOX%<mailboxNo>.MDL.word.HI_WORD = %<LibBlockInputSignal(0,"","",1)>;
        %case 1
            ECanaMboxes.MBOX%<mailboxNo>.MDL.word.LOW_WORD = %<LibBlockInputSignal(0,"","",0)>;
        %endswitch        
        %break
    %case "uint32_T"
        %assign messageLength = dataWidth * 4 
        %switch (dataWidth)
        %case 2
            ECanaMboxes.MBOX%<mailboxNo>.MDH.all = %<LibBlockInputSignal(0,"","",1)>;
        %case 1
            ECanaMboxes.MBOX%<mailboxNo>.MDL.all = %<LibBlockInputSignal(0,"","",0)>;
        %endswitch
        %break
    %endswitch
    
    ECanaMboxes.MBOX%<mailboxNo>.MSGCTRL.bit.DLC = %<messageLength>;
	ECanaRegs.CANTRS.bit.TRS%<mailboxNo> = 1;             // set eCAN Transmit Request Set register
	while(ECanaRegs.CANTA.bit.TA%<mailboxNo> != 1 ) {}    // check eCAN Transmit Acknowledge register
	ECanaRegs.CANTA.bit.TA%<mailboxNo> = 1;               // clear eCAN Transmit Acknowledge register        
}

%endfunction %% Outputs


%% Function: AddParamsToBlock =================================================
%%
%%  Rename the S-Function parameter for easy reference.
%%
%function AddParamsToBlock(block) void

    %assign mailboxNo   = SFcnParamSettings.mailboxNo
    %assign messageID   = SFcnParamSettings.messageID
    %assign messageType = SFcnParamSettings.messageType    
    %assign block = block + mailboxNo + messageID + messageType
    
%endfunction  %% AddParamsToBlock

%% [EOF] c28xcanxmt.tlc
