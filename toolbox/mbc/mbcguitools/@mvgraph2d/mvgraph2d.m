function gr=graph2d(varargin)
%MVGRAPH2D  Graph2d constructor function
%   Constructor function for a mvgraph2d object.
%   Usage:
%     GR=MVGRAPH2D
%     GR=MVGRAPH2D(FIG)
%     GR=MVGRAPH2D('Property1',Value1,...)
%     GR=MVGRAPH2D(FIG,'Property1',Value1,...)
%

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.4.2.2 $  $Date: 2004/02/09 07:19:07 $


if nargin>0 & ishandle(varargin{1})
   figh=varargin{1};
else
   figh=gcf;
end

% initial position
pos=[30 30 500 360];

gr.patch=xregrectangle('parent',getbgaxes(xregGui.figureaxes,figh),...
   'edgecolor','k',...
   'facecolor','w',...
   'position',pos,...
   'tag','graph2d_obj',...
   'visible','off',...
   'hittest','off');

fa=getaxes(xregGui.figureaxes,figh);
cp=floor(pos(1:2)+pos(3:4).*0.5)-15;
gr.badim=xregimage('parent',fa,...
   'cdata',pr_badim,...
   'xdata',[cp(1) cp(1)+31],...
   'ydata',[cp(2) cp(2)+31],...
   'visible','off',...
   'hittest','off');

gr.axes=xregaxes('parent',figh,...
   'units','pixels',...
   'position',[pos(1)+50 pos(2)+80 pos(3)-80 pos(4)-105],...
   'layer','top',...
   'xlim',[0 1],...
   'ylim',[0 1],...
   'clim',[0 1],...
   'visible','off',...
   'color','none',...
   'fontsize',8);
gr.line=line('xdata',[],...
   'ydata',[],...
   'parent',gr.axes,...
   'marker','o',...
   'linestyle','none',...
   'markeredgecolor','none',...
   'markerfacecolor','b',...
   'visible','off');
gr.image=image('parent',gr.axes,...
   'xdata',[0 1],...
   'ydata',[0 1],...
   'cdata',[0],...
   'parent',gr.axes,...
   'visible','off',...
   'cdatamapping','scaled');

cmap=get(figh,'colormap');
gr.colorbar.axes=xregaxes('parent',figh,...
   'units','pixels',...
   'position',[pos(1)+pos(3)/10 pos(2)+25 0.8*pos(3) 20],...
   'layer','top',...
   'xlim',[0.5 size(cmap,1)+0.5],...
   'ylim',[0 1],...
   'visible','off',...
   'ytick',[],...
   'box','on');
gr.colorbar.bar=patch('parent',gr.colorbar.axes,...
   'visible','off',...
   'vertices',[0 0 0;0 1 0;1 1 0;1 0 0],...
   'facevertexcdata',[0],...
   'cdatamapping','scaled',...
   'faces',[1 2 3 4],...
   'edgecolor','none',...
   'facecolor','flat');

% set up faces for colorbar
pr_cbarfaces(gr.colorbar.bar,cmap);

% set up labels according to color limits in axis
labpoints=get(gr.colorbar.axes,'xtick');
actpoints=(labpoints-1)./(size(cmap,1));
set(gr.colorbar.axes,'xticklabel',cellstr(num2str(actpoints',2)));

gr.xfactor=xreguicontrol('style','popupmenu',...
   'parent',figh,...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','1');
gr.xtext=xreguicontrol('style','text',...
   'parent',figh,...
   'position',[0 0 70 15],...
   'string','X-axis factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive',...
   'hittest','off');
gr.yfactor=xreguicontrol('style','popupmenu',...
   'parent',figh,...
   'string',' ',...
   'backgroundcolor','w',...
   'visible','off',...
   'tag','2');
gr.ytext=xreguicontrol('style','text',...
   'parent',figh,...
   'position',[0 0 70 15],...
   'string','Y-axis factor:',...
   'backgroundcolor','w',...
   'visible','off',...
   'enable','inactive',...
   'hittest','off');

gr.controls=xreggridbaglayout(figh,'packgroup','XX_MVGRAPH2D','dimension',[5,7],...
   'rowsizes',[-1 2 15 3 -1],'colsizes',[-1 70 -1 -1 70 -1 -1],'colratios',[1 1 3 2 1 3 1],...
   'mergeblock',{[2 4],[3 3]},'mergeblock',{[2 4], [6 6]},...
   'elements',{[],[],[],[],[],[],[];...
      [],[],gr.xfactor,[],[],gr.yfactor,[];...
      [],gr.xtext,[],[],gr.ytext,[],[];...
      [],[],[],[],[],[],[];...
      [],[],[],[],[],[],[]},...
   'position',[pos(1) pos(2) pos(3) 50],...
   'packstatus','on');


% DATA STORAGE.  
s.visible = 'on';
s.position = pos;
s.data = [];
s.type = 'graph';
s.transcolor = get(figh,'color');
s.grid = 0;
s.limits = {};
s.factors = {};
s.callback = '';
s.userdata = [];
s.factorselection = 0;  % normal
s.datatags = 0;         % 0 = 'none', 1 = 'enumerate', 2 = 'custom'
s.customdatatags = {};
s.datataghandles = [];
p = xregGui.RunTimePointer(s);
p.LinkToObject(gr.axes);

gr.DataPointer = p;

gr=class(gr,'mvgraph2d');

set([gr.xfactor;gr.yfactor],'callback',{@i_factor_change,gr});
set(gr.image,'buttondownfcn',{@i_imagecb,gr});
set(gr.colorbar.bar,'buttondownfcn',{@i_cmapcb,gr});

% set extra props if specified
if nargin>1 & ishandle(varargin{1}); 
   % Set properties that are passed in
   gr=set(gr,'visible','on',varargin{2:end});
elseif nargin>0 & ~ishandle(varargin{1})
   gr=set(gr,'visible','on',varargin{:});
else
   set([gr.axes;gr.patch;gr.xfactor;gr.yfactor;gr.xtext;gr.ytext;gr.line],'visible','on');
end



function i_factor_change(src,evt,obj)
factor_change(obj);

function i_imagecb(src,evt,obj)
imagecb(obj,'create');

function i_cmapcb(src,evt,obj)
cmapcb(obj);