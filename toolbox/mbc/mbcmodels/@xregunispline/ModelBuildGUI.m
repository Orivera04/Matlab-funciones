function varargout= ModelBuildGUI(m,action,varargin)
% This routine will build the small model building
% window that allows the user to select the 
% number of models they would like to build

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.


%   $Revision: 1.5.2.2 $  $Date: 2004/02/09 07:58:09 $

switch lower(action)
case 'create'
   [varargout{1:3}] = i_create(m, varargin{1});
case 'build'
   i_build;
end

function [minK,maxK,ok]= i_create(m, numObs)


knots= get(m,'knots');
num_knots=length(knots);

fH= findobj('name','Model Building Dialog');
delete(fH);
ScrPos= get(0,'screensize');
fPos= [ScrPos(3:4)/2-[125 200] 250 370];
fH= xregfigure('name','Model Building Dialog',...
   'units','pixels',...
   'position',fPos,...
   'menubar','none',...
   'WindowStyle','modal',...
   'resize','off',...
   'numbertitle','off',...
   'visible','off');
fH= double(fH);
set(fH,'CloseRequestFcn',{@i_Cancel,fH});
bgc= get(fH,'color');

str= ['This dialog will allow creation of a family ',...
      'of Free Knot Spline models. All models will be ',...
      'built with the same parameters. ',...
      sprintf('\n\n'),...
      'Fit parameters are picked up from the ',...
      'selected node on the Model Tree.',...
      'To change these parameters go to ',...
      'Model Set Up.',...
      sprintf('\n\n'),...
      'Specify the initial number of knots and the ',...
      'final number of knots in the spaces below.'];
% create a text object
t= uicontrol('parent',fH,...
   'style','text',...
   'backgroundcolor',bgc,...
   'string',str,...
   'HorizontalAlignment','Left');

% Create a FrameTitleLayout to store this
textFr= xregframetitlelayout(fH,...
   'Title','Model build information',...
   'Center',t,...
   'TitleColor',bgc,...
   'packstatus','off');

% Create 2 text and 2 push controls
strT= {'Minimum number of knots:',...
      'Maximum number of knots:'};
% get the size of the data and hence the max no of knots
max_knots= max(1,numObs-get(m,'order')-1);
strE={num_knots,max_knots};

for i=1:2
   t(i)= uicontrol('parent',fH,...
      'style','text',...
      'horizontalalign','left',...
      'backgroundcolor',bgc,...
      'string',strT{i});
   ud.e{i}= xregGui.clickedit(fH,'min',1,'max',max_knots,...
      'dragincrement',1,...
      'backgroundcolor',[1 1 1],...
      'value',strE{i},...
      'rule','int');
end
% Create a 2x2 gridlayout To store min/max knot selection
knotGrd= xreggridbaglayout(fH,...
   'border',[0 5 0 5],...
   'dimension',[5,2],...
   'colsizes',[-1 50],...
   'rowsizes',[3 17 10 3 17],...
   'elements',{[],t(1),[],[],t(2),...
      ud.e{1},[],[],ud.e{2},[]},...
   'mergeblock',{[1 2],[2 2]},...
   'mergeblock',{[4 5],[2 2]});

% % Create a 2x2 gridlayout To store min/max knot selection

knotFr= xregframetitlelayout(fH,...
   'Center',knotGrd,...
   'Title','Number of knots',...
   'TitleColor',bgc);

% create a 2x1 gridlayout to store other two layouts
globalGrd= xreggridlayout(fH,...
   'correctalg','on',...
   'dimension',[2 1],...
   'rowsizes',[-1 90],...
   'gapy',20,...
   'elements',{textFr knotFr},...
   'position',[10 55 fPos(3)-20 fPos(4)-65],...
   'packstatus','on');

% % create a 2x1 gridlayout to store other two layouts

% build the OK and Cancel buttons
p= uicontrol('parent',fH,...
   'style','push',...
   'position',[fPos(3)/2-70 15 70 25],...
   'backgroundcolor',bgc,...
   'string','Build',...
   'callback',{@i_build,fH});
p= uicontrol('parent',fH,...
   'style','push',...
   'position',[fPos(3)/2+10 15 70 25],...
   'backgroundcolor',bgc,...
   'string','Cancel',...
   'Callback',{@i_Cancel,fH});

set(fH,'userdata',ud,'visible','on');


%% finished creating - now wait for button press
set(fH,'tag','null');
drawnow
waitfor(fH,'tag');

tg=get(fH,'tag');
switch lower(tg)
case 'ok'
   %num_knots= get(m,'max_knots');
   minK= get(ud.e{1},'value');
   maxK= get(ud.e{2},'value');
   ok=1;
otherwise
   ok=0;
   minK=[];
   maxK=[];
end
delete(fH);
%----------------------------------------------------
% function i_build
%----------------------------------------------------
function i_build(h,evt,fH)
set(fH,'tag','ok');

%----------------------------------------------------
% function i_Cancel
%----------------------------------------------------
function i_Cancel(src,null,fH)
set(fH,'tag','cancel');
