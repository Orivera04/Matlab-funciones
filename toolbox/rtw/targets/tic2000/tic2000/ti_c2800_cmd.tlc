%% $RCSfile: ti_c2800_cmd.tlc,v $
%% $Revision: 1.8.6.3 $ $Date: 2004/04/08 20:59:01 $
%% Copyright 2003-2004 The MathWorks, Inc.
%%
%% Abstract:
%%  This file reads various tlc parameters and constructs a linker command
%%  file for the TMS320C2000 Linker. The output file is "ModelName".cmd



%if EXISTS("_C2800_CMD_") == 0
%assign _C2800_CMD_ = 1

%% Function: constructMemoryAllocationF2812eZDSP ===============================
%%
%function constructMemoryAllocationF2812eZDSP() void

%openfile memoryAllocation

%if (c2000ModelIRInfo.numRTDXs != 0)
	_RTDX_interrupt_mask = ~0x0000;
%endif

MEMORY
{
PAGE 0:    /* Program Memory */
   ZONE6       : origin = 0x100000, length = 0x008000
   OTP         : origin = 0x3D7800, length = 0x000800
   BEGIN       : origin = 0x3F7FF6, length = 0x000002
   RAMH0       : origin = 0x3F8000, length = 0x002000
   ROM         : origin = 0x3FF000, length = 0x000FC0
   RESET       : origin = 0x3FFFC0, length = 0x000002
   VECTORS     : origin = 0x3FFFC2, length = 0x00003E
PAGE 1 :   /* Data Memory */
   RAMM0       : origin = 0x000000, length = 0x000400
   RAMM1       : origin = 0x000400, length = 0x000400
   DEV_EMU     : origin = 0x000880, length = 0x000180
   PIE_VECT    : origin = 0x000D00, length = 0x000100
   FLASH_REGS  : origin = 0x000A80, length = 0x000060
   CSM         : origin = 0x000AE0, length = 0x000010
   XINTF       : origin = 0x000B20, length = 0x000020
   CPU_TIMER0  : origin = 0x000C00, length = 0x000008
   PIE_CTRL    : origin = 0x000CE0, length = 0x000020
   ECANA       : origin = 0x006000, length = 0x000040
   ECANA_LAM   : origin = 0x006040, length = 0x000040
   ECANA_MOTS  : origin = 0x006080, length = 0x000040
   ECANA_MOTO  : origin = 0x0060C0, length = 0x000040
   ECANA_MBOX  : origin = 0x006100, length = 0x000100
   SYSTEM      : origin = 0x007010, length = 0x000020
   SPIA        : origin = 0x007040, length = 0x000010
   SCIA        : origin = 0x007050, length = 0x000010 
   XINTRUPT    : origin = 0x007070, length = 0x000010 
   GPIOMUX     : origin = 0x0070C0, length = 0x000020 
   GPIODAT     : origin = 0x0070E0, length = 0x000020 
   ADC         : origin = 0x007100, length = 0x000020  
   EVA         : origin = 0x007400, length = 0x000040
   EVB         : origin = 0x007500, length = 0x000040   
   SCIB        : origin = 0x007750, length = 0x000010   
   MCBSPA      : origin = 0x007800, length = 0x000040 
   RAML0       : origin = 0x008000, length = 0x001000
   RAML1       : origin = 0x009000, length = 0x001000
   ZONE6       : origin = 0x108000, length = 0x008000
   CSM_PWL     : origin = 0x3F7FF8, length = 0x000008
}

%closefile memoryAllocation

%return memoryAllocation

%endfunction %% constructMemoryAllocationF2812eZDSP



%% Function: constructSectionAllocationF2812eZDSP ==============================
%%
%function constructSectionAllocationF2812eZDSP() void

%openfile sectionAllocation
 
SECTIONS
{
   codestart           : > BEGIN       PAGE = 0
   .text               : > ZONE6       PAGE = 0
   .cinit              : > ZONE6       PAGE = 0
   .pinit              : > ZONE6,      PAGE = 0
   .reset              : > RESET,      PAGE = 0, TYPE = DSECT
%if (c2000ModelIRInfo.numRTDXs != 0)
   .rtdx_text          : > RAMH0,      PAGE = 0
%endif
   IQmath              : > ZONE6       PAGE = 0
   IQmathTables        : > ROM         PAGE = 0, TYPE = NOLOAD
   .stack              : > RAML1       PAGE = 1
   .ebss               : > ZONE6       PAGE = 1
   .econst             : > ZONE6       PAGE = 1
   .esysmem            : > ZONE6       PAGE = 1
%if (c2000ModelIRInfo.numRTDXs != 0)
   .rtdx_data          : > RAML1,      PAGE = 1
%endif
   PieVectTableFile  : > PIE_VECT,     PAGE = 1
/*** Peripheral Frame 0 Register Structures ***/
   DevEmuRegsFile    : > DEV_EMU,      PAGE = 1
   FlashRegsFile     : > FLASH_REGS,   PAGE = 1
   CsmRegsFile       : > CSM,          PAGE = 1
   XintfRegsFile     : > XINTF,        PAGE = 1
   CpuTimer0RegsFile : > CPU_TIMER0,   PAGE = 1  
   PieCtrlRegsFile   : > PIE_CTRL,     PAGE = 1      
/*** Peripheral Frame 1 Register Structures ***/
   SysCtrlRegsFile   : > SYSTEM,       PAGE = 1
   SpiaRegsFile      : > SPIA,         PAGE = 1
   SciaRegsFile      : > SCIA,         PAGE = 1
   XIntruptRegsFile  : > XINTRUPT,     PAGE = 1
   GpioMuxRegsFile   : > GPIOMUX,      PAGE = 1
   GpioDataRegsFile  : > GPIODAT       PAGE = 1
   AdcRegsFile       : > ADC,          PAGE = 1
   EvaRegsFile       : > EVA,          PAGE = 1
   EvbRegsFile       : > EVB,          PAGE = 1
   ScibRegsFile      : > SCIB,         PAGE = 1
   McbspaRegsFile    : > MCBSPA,       PAGE = 1
/*** Peripheral Frame 2 Register Structures ***/
   ECanaRegsFile     : > ECANA,        PAGE = 1
   ECanaLAMRegsFile  : > ECANA_LAM     PAGE = 1   
   ECanaMboxesFile   : > ECANA_MBOX    PAGE = 1
   ECanaMOTSRegsFile : > ECANA_MOTS    PAGE = 1
   ECanaMOTORegsFile : > ECANA_MOTO    PAGE = 1
/*** Code Security Module Register Structures ***/
   CsmPwlFile        : > CSM_PWL,      PAGE = 1
}

%closefile sectionAllocation

%return sectionAllocation

%endfunction %% constructSectionAllocationF2812eZDSP



%% Function: constructMemoryAllocationF2812DSP =================================
%%
%function constructMemoryAllocationF2812DSP() void

%openfile memoryAllocation

%if (c2000ModelIRInfo.numRTDXs != 0)
	/* rtdx int mask */
	_RTDX_interrupt_mask = ~0x0000;
%endif

MEMORY
{
PAGE 0 :
   PRAMH0      : origin = 0x3F8000, length = 0x002000
   RESET       : origin = 0x3FFFC0, length = 0x000002   
   BOOTROM     : origin = 0x3FF000, length = 0x000fc0    
PAGE 1 :   
   RAMM0       : origin = 0x000000, length = 0x000400
   RAMM1       : origin = 0x000400, length = 0x000400 
   DRAMH0      : origin = 0x008000, length = 0x002000    
   DEV_EMU     : origin = 0x000880, length = 0x000180
   PIE_VECT    : origin = 0x000D00, length = 0x000100
   FLASH_REGS  : origin = 0x000A80, length = 0x000060
   CSM         : origin = 0x000AE0, length = 0x000010
   XINTF       : origin = 0x000B20, length = 0x000020
   CPU_TIMER0  : origin = 0x000C00, length = 0x000008
   PIE_CTRL    : origin = 0x000CE0, length = 0x000020
   ECANA       : origin = 0x006000, length = 0x000040
   ECANA_LAM   : origin = 0x006040, length = 0x000040
   ECANA_MOTS  : origin = 0x006080, length = 0x000040
   ECANA_MOTO  : origin = 0x0060C0, length = 0x000040
   ECANA_MBOX  : origin = 0x006100, length = 0x000100
   SYSTEM      : origin = 0x007010, length = 0x000020
   SPIA        : origin = 0x007040, length = 0x000010
   SCIA        : origin = 0x007050, length = 0x000010 
   XINTRUPT    : origin = 0x007070, length = 0x000010 
   GPIOMUX     : origin = 0x0070C0, length = 0x000020 
   GPIODAT     : origin = 0x0070E0, length = 0x000020 
   ADC         : origin = 0x007100, length = 0x000020  
   EVA         : origin = 0x007400, length = 0x000040
   EVB         : origin = 0x007500, length = 0x000040   
   SCIB        : origin = 0x007750, length = 0x000010   
   MCBSPA      : origin = 0x007800, length = 0x000040 
   CSM_PWL     : origin = 0x3F7FF8, length = 0x000008
}

%closefile memoryAllocation

%return memoryAllocation

%endfunction %% constructMemoryAllocationF2812DSP



%% Function: constructSectionAllocationF2812DSP ================================
%%
%function constructSectionAllocationF2812DSP() void

%openfile sectionAllocation

SECTIONS
{
   codestart        : > PRAMH0,       PAGE = 0
   .text            : > PRAMH0,       PAGE = 0
   .cinit           : > PRAMH0,       PAGE = 0
   ramfuncs         : > PRAMH0,       PAGE = 0, TYPE = DSECT
   .reset           : > RESET,        PAGE = 0, TYPE = DSECT   
%if (c2000ModelIRInfo.numRTDXs != 0)
   .rtdx_text       : > PRAMH0,       PAGE = 0
%endif
   IQmath           : > PRAMH0        PAGE = 0
   IQmathTables     : > BOOTROM       PAGE = 0, TYPE = NOLOAD
   .stack           : > RAMM1,        PAGE = 1
   .bss             : > DRAMH0,       PAGE = 1
   .ebss            : > DRAMH0,       PAGE = 1
   .const           : > DRAMH0,       PAGE = 1
   .econst          : > DRAMH0,       PAGE = 1      
   .sysmem          : > DRAMH0,       PAGE = 1
%if (c2000ModelIRInfo.numRTDXs != 0)
   .rtdx_data       : > DRAMH0,       PAGE = 1
%endif
   PieVectTableFile  : > PIE_VECT,    PAGE = 1
/*** Peripheral Frame 0 Register Structures ***/
   DevEmuRegsFile    : > DEV_EMU,     PAGE = 1
   FlashRegsFile     : > FLASH_REGS,  PAGE = 1
   CsmRegsFile       : > CSM,         PAGE = 1
   XintfRegsFile     : > XINTF,       PAGE = 1
   CpuTimer0RegsFile : > CPU_TIMER0,  PAGE = 1  
   PieCtrlRegsFile   : > PIE_CTRL,    PAGE = 1      
/*** Peripheral Frame 1 Register Structures ***/
   SysCtrlRegsFile   : > SYSTEM,      PAGE = 1
   SpiaRegsFile      : > SPIA,        PAGE = 1
   SciaRegsFile      : > SCIA,        PAGE = 1
   XIntruptRegsFile  : > XINTRUPT,    PAGE = 1
   GpioMuxRegsFile   : > GPIOMUX,     PAGE = 1
   GpioDataRegsFile  : > GPIODAT      PAGE = 1
   AdcRegsFile       : > ADC,         PAGE = 1
   EvaRegsFile       : > EVA,         PAGE = 1
   EvbRegsFile       : > EVB,         PAGE = 1
   ScibRegsFile      : > SCIB,        PAGE = 1
   McbspaRegsFile    : > MCBSPA,      PAGE = 1
/*** Peripheral Frame 2 Register Structures ***/
   ECanaRegsFile     : > ECANA,       PAGE = 1
   ECanaLAMRegsFile  : > ECANA_LAM    PAGE = 1   
   ECanaMboxesFile   : > ECANA_MBOX   PAGE = 1
   ECanaMOTSRegsFile : > ECANA_MOTS   PAGE = 1
   ECanaMOTORegsFile : > ECANA_MOTO   PAGE = 1
/*** Code Security Module Register Structures ***/
   CsmPwlFile        : > CSM_PWL,     PAGE = 1
}

%closefile sectionAllocation

%return sectionAllocation

%endfunction %% constructSectionAllocationF2812DSP



%% Entry point for creating command linker file =============================
%%

 %openfile cmdFile = "%<CompiledModel.Name>.cmd"
/* This linker command file is generated by the Target for TI C2000(tm). */

%if c2000TgtPrefOptions.BuildOptionsLinkerOptionsLinkerCMDFile == "Internal_memory_map"
    %<constructMemoryAllocationF2812DSP()>
    %<constructSectionAllocationF2812DSP()>
%elseif c2000TgtPrefOptions.BuildOptionsLinkerOptionsLinkerCMDFile == "Full_memory_map"
    %<constructMemoryAllocationF2812eZDSP()>
    %<constructSectionAllocationF2812eZDSP()>
%endif

/* [EOF] %<CompiledModel.Name>.cmd */
%%
%closefile cmdFile



%endif  %% _C2800_CMD_

%% [EOF] c2800_cmd.tlc
