function [d,ok]=propdlg(d)
%PROPDLG Create a property dialog for design
%
%  [D,OK]=PROPDLG(D)

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.5.2.4 $  $Date: 2004/04/04 03:27:15 $

[d,ok]=i_createfig(d);


function [dout,ok]=i_createfig(d)


figh=xregdialog('name','Design Properties',...
   'resize','off');
xregcenterfigure(figh,[380 420]);


p=xregGui.RunTimePointer(d);
p.LinkToObject(figh);

lyt=i_createlyt(figh,p);


okbtn=uicontrol('parent',figh,...
   'style','pushbutton',...
   'string','OK',...
   'callback','set(gcbf,''tag'',''ok'',''visible'',''off'');',...
   'interruptible','off');
cancbtn=uicontrol('parent',figh,...
   'style','pushbutton',...
   'string','Cancel',...
   'callback','set(gcbf,''visible'',''off'');',...
   'interruptible','off');
helpbtn=mv_helpbutton(figh,'xreg_desProps');

grd=xreggridbaglayout(figh,...
   'dimension',[2 4],...
   'rowsizes',[-1 25],...
   'colsizes',[-1 65 65 65],...
   'gapy',10,'gapx',7,...
   'border',[7 7 7 7],...
   'mergeblock',{[1 1],[1 4]},...
   'elements',{lyt,[],[],okbtn,[],cancbtn,[],helpbtn});
figh.LayoutManager=grd;
set(grd,'packstatus','on');

figh.showDialog(okbtn);

%dialog blocks here

tg=get(figh,'tag');
if ~isempty(tg)
   i_finalise(lyt);
   dout=p.info;
   ok=1;
else
   dout=d;
   ok=0;
end
delete(figh);
return




function lyt=i_createlyt(figh,p)
% Create first pane: information only
udp=xregGui.RunTimePointer;
udp.LinkToObject(figh);
ud.pointer=p;
d=p.info;
imdata=xregresload(iconfile(d),'bmp');
sc=xregGui.SystemColors;
imdata=replacecolor(imdata,[0 255 0],double(sc.CTRL_BACK));
im=xregGui.axesimage('parent',figh,...
   'image',imdata);
nmtxt=uicontrol('style','edit',...
   'backgroundcolor','w',...
   'parent',figh,...
   'string',name(d),...
   'horizontalalignment','left',...
   'callback',{@i_namechange,udp});
divl=xregGui.dividerline('parent',figh);

txt(1)=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'string','Style:',...
   'horizontalalignment','left');
txt(2)=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'string','Size:',...
   'horizontalalignment','left');
txt(3)=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'string','Number of constraints:',...
   'horizontalalignment','left');
txt(4)=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'string','Last changed:',...
   'horizontalalignment','left');

ud.styletxt=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'horizontalalignment','left');
ud.sizetxt=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'horizontalalignment','left');
ud.numconstraintstxt=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'horizontalalignment','left');
ud.datetxt=uicontrol('style','text',...
   'parent',figh,...
   'hittest','off',...
   'enable','inactive',...
   'horizontalalignment','left');

pane1=xreggridbaglayout(figh,...
   'packstatus','off',...
   'dimension',[13 5],...
   'colsizes',[16 10 90 5 -1],...
   'rowsizes',[2 16 2 10 2 10 15 5 15 5 15 5 15],...
   'mergeblock',{[1 3],[3 5]},...
   'mergeblock',{[5 5],[1 5]},...
   'mergeblock',{[7 7],[1 3]},...
   'mergeblock',{[9 9],[1 3]},...
   'mergeblock',{[11 11],[1 3]},...
   'mergeblock',{[13 13],[1 3]},...
   'elements',{[],[],nmtxt,[],[];...
      im,[],[],[],[];...
      [],[],[],[],[];...
      [],[],[],[],[];...
      divl,[],[],[],[];...
      [],[],[],[],[];...
      txt(1),[],[],[],ud.styletxt;...
      [],[],[],[],[];...
      txt(2),[],[],[],ud.sizetxt;...
      [],[],[],[],[];...
      txt(3),[],[],[],ud.numconstraintstxt;...
      [],[],[],[],[];...
      txt(4),[],[],[],ud.datetxt});

[s,info]=getstyle(d);
ud.pane2.cset=0;
switch s
case 2
   % space filling
   ud.pane2.needsfinalise=0;
   ud.pane2.cset=1;
   ud.pane2.cspointer=xregGui.RunTimePointer(info);
   ud.pane2.cspointer.LinkToObject(figh);
   pane2=propertypage(info,'layout',figh,'callback',{@i_registerchange,udp});
   lbls={'General','Space-Filling'};
   Nc=2;
   ud.pane2.layout=pane2;
   % add the name of the design generator
   csi=CandidateSetInformation(info);
   txt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'string',['Design type:   ' csi],...
      'horizontalalignment','left');
   pane2=xreggridlayout(figh,...
      'correctalg','on',...
      'dimension',[3 1],...
      'rowsizes',[15 2 -1],...
      'border',[0 0 0 5],...
      'gapy',10,...
      'elements',{txt,xregGui.dividerline(figh),pane2});
   
case 3
   % classical
   ud.pane2.needsfinalise=0;
   ud.pane2.cset=1;
   ud.pane2.cspointer=xregGui.RunTimePointer(info);
   ud.pane2.cspointer.LinkToObject(figh);
   pane2=propertypage(info,'layout',figh,'callback',{@i_registerchange,udp});
   lbls={'General','Classical'};
   Nc=2;
   ud.pane2.layout=pane2;
   % add the name of the design generator
   csi=CandidateSetInformation(info);
   txt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'string',['Design type:   ' csi],...
      'horizontalalignment','left');
   pane2=xreggridlayout(figh,...
      'correctalg','on',...
      'dimension',[3 1],...
      'rowsizes',[15 2 -1],...
      'border',[0 0 0 5],...
      'gapy',10,...
      'elements',{txt,xregGui.dividerline(figh),pane2});
   
case 1
   % optimal 
   txt(1)=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'string','D-optimal value:',...
      'horizontalalignment','left',...
      'visible','off');
   txt(2)=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'string','V-optimal value:',...
      'horizontalalignment','left',...
      'visible','off');
   txt(3)=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'string','A-optimal value:',...
      'horizontalalignment','left',...
      'visible','off');
   ud.pane2.lastopt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'horizontalalignment','left',...
      'visible','off');
   ud.pane2.dopt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'horizontalalignment','left',...
      'visible','off');
   ud.pane2.vopt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'horizontalalignment','left',...
      'visible','off');
   ud.pane2.aopt=uicontrol('style','text',...
      'parent',figh,...
      'hittest','off',...
      'enable','inactive',...
      'horizontalalignment','left',...
      'visible','off');
   divl=xregGui.dividerline('parent',figh);
   
   pane2=xreggridbaglayout(figh,...
      'dimension',[9 2],...
      'rowsizes',[15 10 2 10 15 5 15 5 15],...
      'colsizes',[110 -1],...
      'gapx',10,...
      'border',[0 0 0 5],...
      'mergeblock',{[1 1],[1 2]},...
      'mergeblock',{[3 3],[1 2]},...
      'elements',{ud.pane2.lastopt,[],divl,[],txt(1),[],txt(2),[],txt(3),...
         [],[],[],[],ud.pane2.dopt,[],ud.pane2.vopt,[],ud.pane2.aopt});
      
   lbls={'General','Optimal'};
   Nc=2;
otherwise
   % no extra pane
   Nc=1;
   lbls={'General'}; 
end


lyt=xregtablayout2(figh,'numcards',Nc,...
   'tablabels',lbls,...
   'innerborder',[10 10 10 10],...
   'userdata',udp);
attach(lyt,pane1,1);
if Nc>1
   attach(lyt,pane2,2);
end

udp.info=ud;
i_setpane1(udp);
i_setpane2(udp);
return



function i_setpane1(udp)
ud=udp.info;
d=ud.pointer.info;
set([ud.styletxt;ud.sizetxt;ud.numconstraintstxt;ud.datetxt],{'string'},...
   {getstyleinfo(d);sprintf('%d factors, %d points',nfactors(d),npoints(d));...
      sprintf('%d',numConstraints(d));[datestamp(d) ', ' timestamp(d)]});
return


function i_setpane2(udp)
ud=udp.info;
d=ud.pointer.info;
[s,info]=getstyle(d);
switch s
case 1
   if isempty(info)
      optimstr='';
   elseif strcmp(info,'Hybrid')
      optimstr='Optimised using more than one optimality criterion';
   else
      optimstr=['Optimised using ' info 'ity'];
   end
   set([ud.pane2.lastopt;ud.pane2.dopt;ud.pane2.vopt;ud.pane2.aopt],{'string'},...
      {optimstr;sprintf('%f',dcalc(d));...
         sprintf('%f',vcalc(d));sprintf('%f',acalc(d))});
case {2,3}
   propertypage(info,'update',ud.pane2.layout,ud.pane2.cspointer,model(d));
   if getlock(d)
      propertypage(info,'enable',ud.pane2.layout,'off');
   end
end
return

function i_registerchange(src,evt,udp)
ud=udp.info;
ud.pane2.needsfinalise=1;
udp.info=ud;
return

function i_finalise(lyt)
udp=get(lyt,'userdata');
ud=udp.info;
if ud.pane2.cset
   % finalise second pane
   if ud.pane2.needsfinalise;
      propertypage(ud.pane2.cspointer.info,'finalise',ud.pane2.layout);
      
      cs=ud.pane2.cspointer.info;
      d=ud.pointer.info;
      [nul,nul,tp]= CandidateSetInformation(cs);
      if tp==2
         [d,rankok]= ClassicDesign(d,cs,'replace','constrain');
      elseif tp==1
         [d,rankok]= SpaceFillDesign(d,cs,'replace','constrain');
      end
      ud.pointer.info=d;
   end
end
return



function i_namechange(src,evt,udp)
ud=udp.info;
des=ud.pointer.info;
nm=get(src,'string');
if ~isempty(nm)
   des=name(des,nm);
   ud.pointer.info=des;
else
   set(src,'string',name(des));
end