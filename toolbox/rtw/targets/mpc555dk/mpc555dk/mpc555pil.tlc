%% SYSTLC: Embedded Target for Motorola MPC555 (processor-in-the-loop) \
%% TMF: mpc555pil_default_tmf MAKE: make_rtw EXTMODE: no_ext_comm
%%
%% File: mpc555pil.tlc
%%
%% $Revision: 1.12.4.8 $
%% $Date: 2004/04/19 01:27:01 $
%%
%% Copyright 2001-2004 The MathWorks, Inc.
%%
%% Abstract:
%%  System target file for Embedded Target for Motorola MPC555
%%  processor-in-the-loop (PIL) simulation.
%%
%selectfile NULL_FILE

%assign CodeFormat = "Embedded-C"
%assign CodeGenForPIL = 1

%assign AutoBuildProcedure = 1
%assign TargetType = "RT"
%assign Language   = "C"


%% global variables 
%assign FullRootOutportVector = 1

%% include environment routines
%assign PATH_SEP = FEVAL("filesep")
%assign MPC555DKROOT = FEVAL("mpc555dkroot")
%addincludepath "%<MPC555DKROOT>%<PATH_SEP>..%<PATH_SEP>common%<PATH_SEP>configuration%<PATH_SEP>environment"
%include "env.tlc"

%% set the environment as mpc555pil
%<set_env("mpc555pil")>

%% import global settings
%include "mpc555_settings.tlc"

%include "ert_pil_lib.tlc"

%%
%% mdlvars.tlc provides an example of how to get hooks into code
%% generation using the following sequence instead of the single
%% %include "codegenentry.tlc" 
%%
%% %include "mylib.tlc"
%% %include "mygenmap.tlc"
%% %include "commonsetup.tlc"
%% %include "myhooks.tlc"
%% %include "commonentry.tlc"
%%
%% Where codegenentry <at the time of writting> would:
%%
%% %include "genmap.tlc"
%% %include "commonsetup.tlc"
%% %include "commonentry.tlc"
%%

%include "genmap.tlc"
%include "commonsetup.tlc"
%<PilAddModelChecksum()>
%include "commonentry.tlc"

%% generate code profiling report
%include "profilegen.tlc"

%% generate each files needed for build mpc555pil targets
%include "mpc555pil_genfiles.tlc"


%% The contents between 'BEGIN_RTW_OPTIONS' and 'END_RTW_OPTIONS' are strictly 
%% written by the standard format. We need to use this structure in RTW 
%% options GUI function rtwoptionsdlg.m file.
%%
/%
  BEGIN_RTW_OPTIONS

  tp =  RTW.TargetPrefs.load('mpc555.prefs');  
  opt_flags_default = tp.ToolChainOptions.CompilerOptimizationSwitches.Speed;
  
  rtwoption_index = 0;
				   
  rtwoption_index = rtwoption_index + 1;
  rtwoptions(rtwoption_index).prompt         = 'ET MPC555 (processor-in-the-loop) options';
  rtwoptions(rtwoption_index).type           = 'Category';
  rtwoptions(rtwoption_index).enable         = 'on';  
  rtwoptions(rtwoption_index).default        = 4;   % number of items under this category
  rtwoptions(rtwoption_index).popupstrings   = '';
  rtwoptions(rtwoption_index).tlcvariable    = '';
  rtwoptions(rtwoption_index).tooltip        = '';
  rtwoptions(rtwoption_index).callback       = '';
  rtwoptions(rtwoption_index).opencallback   = '';
  rtwoptions(rtwoption_index).closecallback  = '';
  rtwoptions(rtwoption_index).makevariable   = '';

  rtwoption_index = rtwoption_index + 1;
  n = sprintf('\n');
  rtwoptions(rtwoption_index).prompt        = 'Optimize compiler for';
  rtwoptions(rtwoption_index).type           = 'Popup';
  rtwoptions(rtwoption_index).default        = 'speed';
  rtwoptions(rtwoption_index).popupstrings   = 'speed|size|debug|custom';
  rtwoptions(rtwoption_index).tlcvariable    = 'MPC555_OPTIMIZATION_SWITCH';
  rtwoptions(rtwoption_index).makevariable   = 'MPC555_OPTIMIZATION_SWITCH';
  rtwoptions(rtwoption_index).tooltip        = ['Apply C compiler optimizations to minimize execution time',...
                                               n,'or to minimize code size.'];
  %% dummy callback to trigger FLAGS get function on switch selection %%
  rtwoptions(rtwoption_index).callback      = 'mpc555_callback_handler(''callback'', hSrc, hDlg, currentVar)';
  rtwoptions(rtwoption_index).opencallback  = '';
  rtwoptions(rtwoption_index).closecallback = '';


  rtwoption_index = rtwoption_index + 1;
  rtwoptions(rtwoption_index).prompt        = 'Compiler optimization switches';
  rtwoptions(rtwoption_index).type           = 'Edit';
  rtwoptions(rtwoption_index).enable         = 'on';  
  rtwoptions(rtwoption_index).default        = [ '''' opt_flags_default '''' ]; 
  rtwoptions(rtwoption_index).tlcvariable    = 'MPC555_OPTIMIZATION_FLAGS';
  rtwoptions(rtwoption_index).makevariable   = '';
  rtwoptions(rtwoption_index).tooltip        = ['Custom optimisation flags'];
  %% set the SWITCH to custom %%
  rtwoptions(rtwoption_index).callback      = 'mpc555_callback_handler(''callback'', hSrc, hDlg, currentVar)';
  rtwoptions(rtwoption_index).opencallback  = '';
  rtwoptions(rtwoption_index).closecallback = '';
  %% get function handles whether to use Target Prefs or custom flags
  rtwoptions(rtwoption_index).getfunction   = '@mpc555rt_optflags_getfcn';

  rtwoption_index = rtwoption_index + 1;
  rtwoptions(rtwoption_index).prompt         = 'Build action:';
  rtwoptions(rtwoption_index).type           = 'Popup';
  rtwoptions(rtwoption_index).popupstrings   = 'None|Launch_Download_Control_Panel|Run_via_BDM|Debug_via_BDM';
  rtwoptions(rtwoption_index).default        = 'None';
  rtwoptions(rtwoption_index).tlcvariable    = 'BuildAction';
  rtwoptions(rtwoption_index).makevariable   = 'BUILDACTION';
  rtwoptions(rtwoption_index).tooltip        = ['Action to perform after building target.'];

  rtwoption_index = rtwoption_index + 1;
  rtwoptions(rtwoption_index).prompt = 'Use prebuilt (static) RTW Libraries';
  rtwoptions(rtwoption_index).type = 'Checkbox';
  rtwoptions(rtwoption_index).default = 'on';
  rtwoptions(rtwoption_index).tlcvariable = 'STATIC_RTWLIB';
  rtwoptions(rtwoption_index).makevariable = 'STATIC_RTWLIB';
  rtwoptions(rtwoption_index).tooltip = 'A prebuilt version of the rtwlib sources are provided and can result in faster builds if selected.';
  rtwoptions(rtwoption_index).callback       =  '';
  rtwoptions(rtwoption_index).opencallback   =  '';
  rtwoptions(rtwoption_index).closecallback  =  '';

  % Inherit ERT options
  rtwgensettings.DerivedFrom = 'ert.tlc';
  rtwgensettings.BuildDirSuffix = '_mpc555pil';
  rtwgensettings.Version = '1'; % Specify callbacks' compliance with DAStudio dialog   
  rtwgensettings.SelectCallback      = 'mpc555_callback_handler(''SelectCallback'',hSrc,hDlg);';
  rtwgensettings.UnselectCallback    = 'mpc555_callback_handler(''UnselectCallback'',hSrc,hDlg);';

  END_RTW_OPTIONS 
 %/
