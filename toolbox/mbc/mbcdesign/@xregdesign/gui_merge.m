function [desout, ok, exist] = gui_merge(des, cDesigns, idxSelection)
%GUI_MERGE Open a dialog for merging designs
%
%  [DES, OK, EXIST] = GUI_MERGE(DES, DESIGNLIST, INITIALSEL) displays a
%  dialog for merging designs.  DESIGNLIST is a cell array of designs that
%  can be selected from for merging.  INITIALSEL is a list of indicies into
%  this list which defines the initial selection that the dialog will
%  display. The input DES is not used.  
%
%  The output DES is the merged design.  OK indicates whether any operation
%  has taken place and EXIST indicates whether the user has asked for this to
%  be a new design or placed into an existing design.  If EXIST is 0 then
%  it should be a new design.   If EXIST is non-zero then it is the index
%  into the original DESIGNLIST that DES should replace.

%  Copyright 2000-2004 The MathWorks, Inc. and Ford Global Technologies, Inc.

%  $Revision: 1.2.6.3 $    $Date: 2004/04/04 03:27:10 $ 


fig = xregdialog('Name', 'Merge Designs');
xregcenterfigure(fig, [500 350]);
fig.MinimumSize = [400 290];

p = xregGui.RunTimePointer;
p.LinkToObject(fig);

sc = xregGui.SystemColorsDbl;

ud.ListPrompt = uicontrol('parent', fig, ...
    'style', 'text', ...
    'string', 'Select two or more designs to merge:', ...
    'horizontalalignment', 'left');
ud.List = xregdesgui.designList('parent', fig, ...
    'designs', cDesigns, ...
    'selectedindex', idxSelection);
ud.mergeNew = uicontrol('parent', fig, ...
    'style', 'radiobutton', ...
    'string', 'Merge to new design', ...
    'value', 1, ...
    'enable', 'off');
ud.mergeExist = uicontrol('parent', fig, ...
    'style', 'radiobutton', ...
    'string', 'Merge to existing design', ...
    'enable', 'off');
base = uicontrol('parent', fig, ...
    'style', 'popupmenu', ...
    'string', ' ', ...
    'value', 1, ...
    'backgroundcolor', sc.WINDOW_BG);
ud.newBase = xregGui.labelcontrol('parent', fig, ...
    'Control', base, ...
    'labelsizemode', 'absolute', ...
    'labelsize', 120, ...
    'controlsizemode', 'relative', ...
    'controlsize', 1, ...
    'string', 'Base new design on:');
base = uicontrol('parent', fig, ...
    'style', 'popupmenu', ...
    'string', ' ', ...
    'value', 1, ...
    'backgroundcolor', sc.WINDOW_BG);
ud.existBase = xregGui.labelcontrol('parent', fig, ...
    'Control', base, ...
    'labelsizemode', 'absolute', ...
    'labelsize', 120, ...
    'controlsizemode', 'relative', ...
    'controlsize', 1, ...
    'string', 'Copy points into design:');
set(ud.newBase.Control, 'callback', {@i_popvalSync, ud.existBase.Control});
set(ud.existBase.Control, 'callback', {@i_popvalSync, ud.newBase.Control});
set(ud.mergeNew, 'callback', {@i_radioExclusive, ud.mergeExist, ud.newBase, ud.existBase});
set(ud.mergeExist, 'callback', {@i_radioExclusive, ud.mergeNew, ud.existBase, ud.newBase});

ud.OK = uicontrol('parent', fig, ...
    'style', 'pushbutton', ...
    'string', 'OK', ...
    'callback', 'set(gcbf, ''tag'', ''ok'', ''visible'', ''off'');', ...
    'enable', 'off');
ud.Cancel = uicontrol('parent', fig, ...
    'style', 'pushbutton', ...
    'string', 'Cancel', ...
    'callback', 'set(gcbf, ''visible'', ''off'');');

ud.ListListener = handle.listener(ud.List, 'DesignSelected', {@i_DesignSelection, p});
p.info = ud;

lyt = xreggridbaglayout(fig, ...
    'packstatus', 'off', ...
    'dimension', [9 4], ...
    'rowsizes', [15 -1 0 20 21 20 21 0 25], ...
    'colsizes', [20 -1 65 65], ...
    'gapy', 5, ...
    'gapx', 7, ...
    'border', [7 7 7 10], ...
    'mergeblock', {[1 1], [1 2]}, ...
    'mergeblock', {[2 2], [1 4]}, ...
    'mergeblock', {[4 4], [1 2]}, ...
    'mergeblock', {[6 6], [1 2]}, ....
    'mergeblock', {[8 8], [1 2]}, ...
    'elements', {ud.ListPrompt, ud.List, [], ud.mergeNew, [], ud.mergeExist, [], [], [], ...
        [], [], [], [], ud.newBase, [], ud.existBase, [], [], ...
        [], [], [], [], [], [], [], [], ud.OK, ...
        [], [], [], [], [], [], [], [], ud.Cancel});
fig.LayoutManager = lyt;
set(lyt, 'packstatus', 'on');

i_DesignSelection(ud.List, [], p);

fig.showDialog(ud.OK);

tg = get(fig, 'tag');
ok = false;
exist = 0;
if strcmp(tg, 'ok')
    [desout, ok, exist] = i_finalise(p);
    if ~ok
        desout = des;
    end
else
    desout = des;
end
delete(fig);



function i_DesignSelection(src, evt, p)
selDes = src.SelectedDesigns;
ud = p.info;
if length(selDes)<2
    % Disable the OK route
    set(ud.OK, 'enable', 'off');
    set([ud.mergeNew, ud.mergeExist], 'enable', 'off');
    set([ud.newBase, ud.existBase], 'enable', 'off');
    set([ud.newBase.Control, ud.existBase.Control], 'string', ' ', 'value', 1);
else
    set(ud.OK, 'enable', 'on');
    set([ud.mergeNew, ud.mergeExist], 'enable', 'on');
    if get(ud.mergeNew, 'value')
        set([ud.newBase, ud.existBase], {'enable'}, {'on';'off'});
    else
        set([ud.newBase, ud.existBase], {'enable'}, {'off';'on'});
    end
    popstr = cell(1, length(selDes));
    for n = 1:length(popstr)
        popstr{n} = name(selDes{n});
    end
    set([ud.newBase.Control, ud.existBase.Control], 'string', popstr, 'value', 1);
end

function i_popvalSync(src, evt, hOther)
set(hOther, 'value', get(src, 'value'));

function i_radioExclusive(src, evt, hOtherRadio, hThisPopup, hOtherPopup)
set(src, 'value', 1);
set(hOtherRadio, 'value', 0);
set(hOtherPopup, 'enable', 'off');
set(hThisPopup, 'enable', 'on');

function [des, ok, exist] = i_finalise(p);
ud = p.info;

mergedes = ud.List.SelectedDesigns;
if length(mergedes)<2
    ok = false;
    exist = 0;
    des = [];
else
    ok = true;
    exist = 0;
    primaryidx = get(ud.newBase.Control, 'Value');
    des = mergedes{primaryidx};
    mergedes(primaryidx) = [];
    des = mergedesigns(des, mergedes{:});
    if get(ud.mergeNew, 'Value')
        exist = 0;
    else
        exist = ud.List.SelectedIndex(primaryidx);
    end
end
