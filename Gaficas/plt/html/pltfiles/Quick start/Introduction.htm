<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Introduction</title>
<style>
<!--
h3           { color: #006699 }
span.mcode   { font-family: Fixedsys; color: #993300; text-align:left }
-->
</style>
</head>

<body>

<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber1" height="86">
  <tr>
    <td width="70%" height="86">
    <h2>Introduction</h2>
    </td>
    <td width="3%" height="86">&nbsp;<p>&nbsp;</p>
    <p>&nbsp;</td>
    <td width="27%" height="86">
    <img border="0" src="../images/plt.png" width="214" height="98" align="right"></td>
  </tr>
</table>
<p style="MARGIN-BOTTOM: -10px">I developed a 2D Matlab plotting routine for an 
avionics application I've been working on, but I've recently realized that it 
should appeal to a wide audience as a general replacement for Matlab's
<span class="mcode">plot</span> routine. I call my routine <span class="mcode">
plt</span>. Like plot, plt is good for typing at the command prompt for 
visualizing your workspace arrays and also can be the core of your .m 
applications. Here are the reasons I believe plt is a significant advance over 
plot:</p>
<ul>
  <li>Improved zooming/panning/auto-scaling controls</li>
  <li>Interactive window to select vectors to plot (workspace plotting)</li>
  <li>Trace selection controls (up to 99 traces)</li>
  <li>Easier cursor movement </li>
  <li>Min/Max finder </li>
  <li>Way better looking grid lines </li>
  <li>User-entered annotations </li>
  <li>Support for metric prefixes </li>
  <li>Built-in support for dual y-axes (left/right) </li>
  <li>Avg, rms, y/x ratio, slope readouts</li>
  <li>Quick lin/log toggling for x or y axes </li>
  <li>Display expansion history</li>
  <li>Mouse and keyboard driven data modification</li>
  <li>Flexible command-line interface</li>
  <li>Includes auxiliary functions for building plotting based GUIs </li>
</ul>
<p>Ten example .m script and function files are included to demonstrate many plt 
features. The plt routine itself is provided in p-code form, however I will send 
you the code in .m form if you need to modify plt to add a credible enhancement. Matlab release 12.1 (ver 6.1) or later 
is required to run plt and all the example code. 
It has been tested extensively under release 12.1 and release 13 under Windows ME, 2000, and 
XP. Only brief testing has been done with a few Unix 
based platforms.</p>

<p>I hope using plt enhances your Matlab experience. Please let me know about 
any problems or suggestions you have relating to plt. You can reach me at
<a href="mailto:paul@mennen.org">paul@mennen.org</a>. </p>

</body>

</html>