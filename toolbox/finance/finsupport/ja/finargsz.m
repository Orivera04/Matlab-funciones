% FINARGSZ   スカラ次元の拡張により共通サイズの配列を出力
%
% [AEXP, BEXP] = finargsz('scalar', A, B) は、スカラ A、または、B を入力
% の最大サイズまで拡張することによって、等しいサイズの出力 AEXP 及び 
% BEXP を生成します。この関数への入力はスカラ、または、適合する行列でなく
% てはなりません。
%
% [AEXP, BEXP] = finargsz(1, A, B) は、同一の行数をもつ出力 AEXP と BEXP 
% を出力します。単一の行からなる入力は、一番目の次元にそって拡張されます。
% A および B の一番目の次元はスカラ、または、同一サイズでなくてはなりま
% せん。
%
% [AEXP, BEXP] = finargsz(EXPDIMS, A, B) は、ベクトル EXPDIMS に記載され
% た全ての次元において共通のサイズを有する出力 AEXP と BEXP を生成します。
%
% [AEXP, BEXP] = finargsz('all', A, B) は、全ての次元において共通のサイズ
% を有する出力 AEXP と BEXP を生成します。全てのスカラ次元が拡張の対象と
% なります。
%
% 2次元配列については、 FINARGSZ('all', A, B) が、FINARGSZ([1 2], A, B) 
% と同じ機能を実行します。この場合、行、列、または、スカラ入力が拡張の
% 対象となります。
%
% [AEXP1, AEXP2, AEXP3, ... ] = finargsz(EXPDIMS, A1, A2, A3, ...) は、
% 配列 A1, A2,.....が拡張の対象となります。なお、EXPDIMS には、拡張の
% 対象となる次元を設定するか、または、'scalar' や 'all' のような文字列を
% 設定することができます。
%
% 例題:
%   1)行、列、または、その双方を拡張します。
%   a = [1 2 3; 4 5 6]
%   b = [10; 20]
%   c = [100 200 300]
%   d = [1000]
%   [ae,be,ce,de] = finargsz('all', a,b,c,d)
%   ae =
%       1    2     3
%       4    5     6
%   be =
%       10    10    10
%       20    20    20
%   ce =
%      100   200   300
%      100   200   300
%   de =
%      1000  1000  1000
%      1000  1000  1000
%           
%   2)スカラを拡張します。
%   [ae,be] = finargsz('scalar', 10, [1 2;3 4])
%   ae =
%       10    10
%       10    10
%   be =
%       1    2
%       3     4
%
%   3)ベクトル [10;20] は、スカラ拡張の対象となりません。そのため、
%   [ae,be] = finargsz('scalar', [10; 20], [1 2;3 4])
%     は、エラーを出力します。
% 
%   4)ベクトル [10;20] は、2番目の次元に沿って拡張を行うことができます。
%   [ae,be] = finargsz(2, [10; 20], [1 2;3 4])
%   ae =
%       10    10
%       20    20
%   be =
%       1    2
%       3     4


%   Author(s): J. Akao, C. Bassignani, 03-30-98
%   Copyright 1995-2002 The MathWorks, Inc. 
