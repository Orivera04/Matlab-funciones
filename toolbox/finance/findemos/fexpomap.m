function fexpomap()
%FEXPOMAP MATLAB Financial Expo main map.

%       Author(s): C.F. Garvin, 3-07-95
%       Copyright 1995-2002 The MathWorks, Inc. 
%       $Revision: 1.13 $   $Date: 2002/04/14 21:43:43 $

SCR = get(0,'screensize');
BWU = 2.5;
BHU = 12;
Left = SCR(3)/BWU;
Width = SCR(3)/BWU;
if SCR(4) == 480
  Height = 480;
  Bottom = 0;
else
  Height = SCR(4)*(BHU-2)/BHU;
  Bottom = SCR(4)/BHU;
end

Fig = figure('position',[Left Bottom Width Height],...
       'Numbertitle','off','Name','MATLAB Financial Expo Main Map');
set(gcf,'pointer','watch')
load fexpo.mat
load ibm.dat
[row,col] = size(ibm);

AxBot = .84 - 0.1;
AxLeft = .1;
AxWidth = .8;
AxHeight = .125 + 0.1;
AxSpace = .06 + 0.02; 

ButL = AxLeft;
ButB = .8 - 0.1;
ButW = AxWidth;
ButH = .035;
ButS = .1875 + 0.12;
ButC = .01;

% Financial Charts
axes('position',[AxLeft AxBot AxWidth AxHeight]);
highlow(ibm(288:308,2),ibm(288:308,3),ibm(288:308,4),[])
ylabel('Price'),axis([0 21 -inf inf])
set(gca,'box','on','xtick',[],'ytick',[])

% Option sensitivities
axes('position',[AxLeft AxBot-(AxHeight+AxSpace) AxWidth AxHeight]);
seoption(30:50,[40 40 45],.1,[3 6 9],.1,[1 1 1],'blsgamma')
axis([-inf inf 1 9 -inf inf])
set(gca,'box','on','xtick',[],'ytick',[],'ztick',[])
zlabel('Gamma')

% Portfolio optimization
axes('position',[AxLeft AxBot-2*(AxHeight+AxSpace) AxWidth AxHeight]);
plot(vol,rate,'c')
ylabel('Return')
set(gca,'box','on','xtick',[],'ytick',[])

if (0)
% SIMULINK
axes('position',[AxLeft AxBot-3*(AxHeight+AxSpace) AxWidth AxHeight]);
hold on
 plot([1 1],[1 2]),plot([1 4],[1 1]),plot([1 4],[2 2]),plot([4 4],[1 2])
 plot([8 8],[.5 2.5]),plot([7 7],[.5 2.5]),plot([7 8],[.5 .5])
 plot([7 8],[2.5 2.5]),plot(7.1:.1:7.9,rand(1,9)+1),plot([4 7],[1.5 1.5])
 plot([6.8 7],[1.3 1.5]),plot([6.8 7],[1.7 1.5]),plot([10 12],[1 1])
 plot([10 12],[2 2]),plot([10 10],[1 2]),plot([12 12],[1 2])
 plot([10 12],[-.5 -.5]),plot([10 12],[-2.5 -2.5]),plot([10 10],[-.5 -2.5])
 plot([12 12],[-.5 -2.5]),plot([10.25 11.75],[-.75 -.75])
 plot([10.25 11.75],[-2 -2]),plot([10.25 10.25],[-.75 -2])
 plot([11.75 11.75],[-.75 -2]),plot([10.25:.1:11.75],-.5*sin(1:16)-1.35)
 plot([13.5 15],[1.25 1.25]),plot([13.5 15],[1.75 1.75])
 plot([13.5 13.5],[1.15 1.85]),plot([15 15],[1.15 1.85])
 plot([8 10],[1.5 1.5]),plot([9.8 10],[1.3 1.5]),plot([9.8 10],[1.7 1.5])
 plot([12 13.5],[1.5 1.5]),plot([13.3 13.5],[1.7 1.5])
 plot([13.3 13.5],[1.3 1.5]),plot([9 9],[1.5 -1.5]),plot([9 10],[-1.5 -1.5])
 plot([9.8 10],[-1.7 -1.5]),plot([9.8 10],[-1.3 -1.5]),axis([0 16 -5 5])
 text(1.5,1.5,'Asset'),text(1.5,0,'Initialize')
 text(6.25,3.5,'Random Walk')
 text(10.65,1.5,'PV'),text(13.8,1.5,'out')
 text(10,-3.5,'Graph Scope')
 %set(findobj(gca,'type','text'),'fontsize',8,'color','yellow')
ylabel('SIMULINK')
set(gca,'box','on','xtick',[],'ytick',[])

% Neural Net, Sys ID, etc.
ind = row-50:row;
subplot(5,1,5),plot([ibm(ind,4) ibm(ind,4)+randn(size(ibm(ind,4)))])
ylabel('Estimated')
grid
axis([0 52 -inf inf])
set(gca,'position',[AxLeft AxBot-4*(AxHeight+AxSpace) AxWidth AxHeight])
set(gca,'box','on','xtick',[],'ytick',[])
end

Button(1) = uicontrol('string','Financial Charts',...
                      'units','normal',...
                      'position',[ButL ButB ButW ButH],...
                      'callback','clear;finchart');
Button(2) = uicontrol('string','Financial Charts',...
                      'units','normal',...
                      'position',[ButL ButB-ButS ButW ButH],...
                      'style','popup',...
                      'userdata',Fig,...
                      'callback',[...
                      'clear,'...
                      'Fig = get(gco,''userdata'');'...
                      'set(Fig,''pointer'',''watch''),'...
                      'val = get(gco,''value'');'...
                      'if val == 1,'...
                       'greekdem,'...
                      'elseif val == 2,'...
                       'advgreek,'...
                      'end,'...
                      'set(Fig,''pointer'',''arrow''),'...
                      ],...
                      'string',[...
                      'Option Sensitivity - Individual';...
                      'Option Sensitivity - Portfolio ']...
                      );
Button(3) = uicontrol('string','Portfolio Optimization',...
                      'units','normal',...
                      'position',[ButL ButB-2*ButS ButW ButH],...
                      'callback','clear;optport');
if (0)                  
Button(4) = uicontrol('units','normal',...
                      'position',[ButL ButB-3*ButS ButW ButH],...
                      'style','popup',...
                      'userdata',Fig,...
                      'callback',[...
                      'clear,'...
                      'Fig = get(gco,''userdata'');'...
                      'set(Fig,''pointer'',''watch''),'...
                      'val = get(gco,''value'');'...
                      'if val == 1,'...
                       'monteopt,'...
                      'elseif val == 2,'...
                       'monteset,montecar,'...
                      'end,'...
                      'set(Fig,''pointer'',''arrow''),'...
                      ],...
                      'string',[...
                      'Option Valuation Model - Monte Carlo';...
                      'Business Model - Cash Flows         ']...
                      );
Button(5) = uicontrol('units','normal',...
                      'position',[ButL ButB-4*ButS ButW ButH],...
                      'style','popup',...
                      'userdata',Fig,...
                      'callback',[...
                      'clear,'...
                      'Fig = get(gco,''userdata'');'...
                      'set(Fig,''pointer'',''watch''),'...
                      'val = get(gco,''value'');'...
                      'if val == 1,'...
                       'neurdemo;'...
                      'elseif val == 2,'...
                       'sysid,'...
                      'elseif val == 3,'...
                       'fuzydemo,'...
                      'end,'...
                      'set(Fig,''pointer'',''arrow''),'...
                      ],...
                      'string',[...
                      'Neural Network - Price Behavior             ';...
                      'System Identification - Time Series Analysis';...
                      'Fuzzy Logic - Price Behavior                ']...
                      );
end

out1 = str2mat(...
' The Financial Expo provides these demonstrations:',...
'.',...
' Financial Charts - Charts that track stock prices over time,',...
' including high-low-close bars, candlesticks, moving averages, and',...
' Bollinger bands.',...
'.',...
' Option Sensitivity - 4-D and 5-D graphs that display the various',...
' price and time sensitivities of an individual call option or a',...
' portfolio of call options.',...
'.');
out2 = str2mat(...
' Portfolio Optimization - Functions that calculate and display the',...
' optimum balance between risk and rate of return for a portfolio of',...
' two or more mutual funds.',...
'.');
out3 = str2mat(...
'.',...
'      Choose a demonstration (some offer more than one choice),',...
'      then click Help on the subsequent screen for more',...
'      specific instructions.',...
'.',...
' Click Close to close the Main Map window and keep the Command window.',...
' Type "fexpomap" (without the quotes) to restore the Main Map window.',...
'.',...
' Click Exit MATLAB to close all windows and exit MATLAB.');

out = str2mat(out1,out2,out3);

Button(6) = uicontrol('string','Help',...
                      'units','normal',...
                      'userdata',out,...
                      'position',[ButL ButC ButW/3-ButC ButH],...
                      'callback',[...
                      'clear,'...
                      'out = get(gco,''userdata'');',...
                      'helpwin(out,''Financial Expo Main Map Help'');',...
                      ]); 
Button(7) = uicontrol('string','Close',...
                      'units','normal',...
                      'position',[ButL+ButW/3+ButC ButC ButW/3-ButC ButH],...
                      'callback','close');
Button(8) = uicontrol('string','Exit MATLAB',...
                      'units','normal',...
                      'position',[ButL+2*ButW/3+ButC ButC ButW/3-ButC ButH],...
                      'callback','exit');
set(gcf,'tag','MAINMAP','pointer','arrow')
