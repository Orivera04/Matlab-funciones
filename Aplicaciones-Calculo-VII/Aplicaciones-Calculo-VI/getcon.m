% GETCON - compute coordinates of contour lines (Matlab 7 or later)
%
% [xc,yc] = contour(X,Y,Z,v)
%
% X,Y,Z =   coordinates of a function Z=f(X,Y), where X and Y are matrices of
%           the sort generated by meshgrid or ndgrid and Z is the value of
%           the function of X and Y and each corresponding matrix element
%
% v       = one or optionally, more than one, contour altitude(s)
%
% If v is a scalar:
%
% [xc,yc] = Column vectors containing the NaN-delimited polygon(s) defining
%           the contour slice at altitude v
%
% If v is a vector:
%
% [xc,yc] = Cell arrays of column vectors. Each entry cell array entry
%           contains the NaN-delimited polygon(s) defining the contour
%           slice at the altitude in the corresponding entry in v. For
%           example, if v is a vector with three entries, then xc and yc
%           will be cell arrays, each with three entries. The first cell
%           array entry in xc and the first cell array entry in yc will
%           each contain a vector. Those vectors are the x and y
%           coordinates of the NaN-delimited polygons defining the contour
%           slice at the altitude specified by the first entry in v.
%
% Notes: (1) Version 1.0, initial writing, Michael Kleder, Sep 2005
%        (2) This application is VERY SENSITIVE TO MATLAB VERSION.
%            This function is written for MATLAB 7.
%        (3) No warranty. Use at your own risk.
%
% EXAMPLE:
%
% figure('renderer','zbuffer')
% hold on
% [x,y] = ndgrid(linspace(0,4*pi,100));
% z = abs(cos(x)+cos(y));
% h=surf(x,y,z);
% colormap gray
% set(h,'edgecolor','none')
% view(0,90)
% axis equal
% axis tight
% v=0.1;
% [xc,yc]=getcon(x,y,z,v);
% plot3(xc,yc,v+0*xc,'b-','linew',3)
% v=[-1 1.8 1.98 2.5];
% [xc,yc]=getcon(x,y,z,v);
% % note at this point that xc{1}, yc{1}, xc{4} and yc{4} are empty
% % vectors because the corresponding slice altitudes are outside of
% % the altitude range of the data
% for n=1:length(v)
%     % note curly braces below on xc and yc:
%     plot3(xc{n},yc{n},v(n)+0*xc{n},'r-','linew',3)
% end
% axis off
% title('Selected contours of abs(cos(x)+cos(y))','fontsize',14)

function [xc,yc] = getcon(X,Y,Z,v)
if sum(size(v)>1)>1
    error('Contour slice altitude has more than one non-singleton dimesion.')
end
v=v(:);
fg=figure('visible','off');
if length(v) == 1
    oneslice = 1;
    v = [v v];
else
    oneslice = 0;
    if length(unique(v)) ~= length(v)
        error('Contour slice altitudes must be unique')
    end
end
[c,h]=contour(X,Y,Z,v); 
xcg=get(get(h,'children'),'xdata'); 
ycg=get(get(h,'children'),'ydata');
if oneslice
    if iscell(xcg)
        xc=cat(1,xcg{:});
        yc=cat(1,ycg{:});
    else
        xc=xcg;
        yc=ycg;
    end
else % multiple slices; return cell array
    sa = get(get(h,'children'),'userdata'); % slice altitudes
    if iscell(sa) % if only one slice is nonempty, sa will be scalar
        sa = [sa{:}];
    end
    %if length(sa)
    % preallocate cell array space
    xc{length(v)}=[];
    yc{length(v)}=[];
    for n = 1:length(v) % loop through slice altitudes
        k = sa==v(n);
        if any(k)
            if iscell(xcg)
                xc{n}=cat(1,xcg{k});
                yc{n}=cat(1,ycg{k});
            else % non-cell when only one non-empty slice
                xc{n}=xcg(:);
                yc{n}=ycg(:);
            end
        end
    end
end
delete(fg)
return