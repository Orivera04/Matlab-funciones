%% $RCSfile: c28xgpio_di.tlc,v $
%% $Revision: 1.1.6.2 $ $Date: 2004/04/08 20:59:44 $
%% Copyright 2003-2004 The MathWorks, Inc.



%implements c28xgpio_di "C"

%% Function: GetUsedChannels ====================================================
%% Abstract:
%%     Encode indices of all used channels into an integer number
%%  
%function GetUsedChannels(GPIO_Bit0,GPIO_Bit1, GPIO_Bit2, GPIO_Bit3, GPIO_Bit4, GPIO_Bit5, GPIO_Bit6, GPIO_Bit7, \ 
                          GPIO_Bit8,GPIO_Bit9, GPIO_Bit10, GPIO_Bit11, GPIO_Bit12, GPIO_Bit13, GPIO_Bit14, GPIO_Bit15) Output
                          
    %assign usedChannels = (GPIO_Bit0==1)*1 + (GPIO_Bit1==1)*2 + (GPIO_Bit2==1)*4 + (GPIO_Bit3==1)*8 + \
                           (GPIO_Bit4==1)*16 + (GPIO_Bit5==1)*32 + (GPIO_Bit6==1)*64 + (GPIO_Bit7==1)*128 + \    
                           (GPIO_Bit8==1)*256 + (GPIO_Bit9==1)*512 + (GPIO_Bit10==1)*1024 + (GPIO_Bit11==1)*2048 + \
                           (GPIO_Bit12==1)*4096 + (GPIO_Bit13==1)*8192 + (GPIO_Bit14==1)*16384 + (GPIO_Bit15==1)*32768 
    %return usedChannels
    
%endfunction %% GetUsedChannels



%% Function: GetNextOutput ====================================================
%function GetNextOutput(block, chanIndex)

    %if (numChannels == 1)
        %assign OutputString = "%<LibBlockOutputSignal(0,"","",0)>"
    %else
        %assign OutputString = "%<LibBlockOutputSignal(0,"%<chanIndex>","",0)>"
    %endif
    %return OutputString
    
%endfunction %% GetNextOutput



%% Function: BlockTypeSetup ==============================================
%function BlockTypeSetup(block, system) void

    %openfile buffer
        #include "DSP281x_Device.h"
        #include "DSP281x_Gpio.h"
    %closefile buffer
    %<LibCacheIncludes(buffer)>
    
%endfunction %% BlockTypeSetup



%% Function: BlockInstanceSetup ===============================================
%%
%function BlockInstanceSetup(block,system) void

    %<AddParamsToBlock(block)>
       
%endfunction %% BlockInstanceSetup



%% Function: Start ============================================================
%%
%%  Initialize GPIO registers for GPIO mode. Set the direction at the same time
%%
%function Start(block,system) Output

	EALLOW;
    %switch(useIOPort)
        %case "GPIOA"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
        %break    
        %case "GPIOB"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
        %break
        %case "GPIOD"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
        %break
        %case "GPIOE"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
        %break
        %case "GPIOF"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
        %break
        %case "GPIOG"
            GpioMuxRegs.GP%<PortName>MUX.all &= %<muxAll>;
            GpioMuxRegs.GP%<PortName>DIR.all &= %<dirAll>;
       %break      
        %endswitch     	
	EDIS;  

%endfunction %% Start



%% Function: Outputs ==========================================================
%%
%%      Read the GPIO bit register and write it into the associated block input
%%      signal lines
%%
%function Outputs(block,system) Output  

/* %<Type> Block: %<Name> (%<ParamSettings.FunctionName>) */
{
  %assign chanIndex = 0        
    %if(GPIO_Bit0==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>0;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit1==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>1;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit2==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>2;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit3==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>3;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit4==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>4;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit5==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>5;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit6==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>6;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit7==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>7;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit8==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>8;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit9==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>9;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit10==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>10;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit11==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>11;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit12==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>12;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit13==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>13;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit14==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>14;
        %assign chanIndex = chanIndex + 1
    %endif
    %if(GPIO_Bit15==1)
        %<GetNextOutput(block, chanIndex)> = GpioDataRegs.GP%<PortName>DAT.bit.GPIO%<PortName>15;
        %assign chanIndex = chanIndex + 1
    %endif
}

%endfunction %% Outputs



%% Function: AddParamsToBlock =================================================
%function AddParamsToBlock(block) void

    %assign useIOPort   = SFcnParamSettings.useIOPort
    %assign GPIO_Bit0   = SFcnParamSettings.GPIO_Bit0
    %assign GPIO_Bit1   = SFcnParamSettings.GPIO_Bit1
    %assign GPIO_Bit2   = SFcnParamSettings.GPIO_Bit2
    %assign GPIO_Bit3   = SFcnParamSettings.GPIO_Bit3
    %assign GPIO_Bit4   = SFcnParamSettings.GPIO_Bit4
    %assign GPIO_Bit5   = SFcnParamSettings.GPIO_Bit5
    %assign GPIO_Bit6   = SFcnParamSettings.GPIO_Bit6
    %assign GPIO_Bit7   = SFcnParamSettings.GPIO_Bit7
    %assign GPIO_Bit8   = SFcnParamSettings.GPIO_Bit8
    %assign GPIO_Bit9   = SFcnParamSettings.GPIO_Bit9
    %assign GPIO_Bit10  = SFcnParamSettings.GPIO_Bit10
    %assign GPIO_Bit11  = SFcnParamSettings.GPIO_Bit11
    %assign GPIO_Bit12  = SFcnParamSettings.GPIO_Bit12
    %assign GPIO_Bit13  = SFcnParamSettings.GPIO_Bit13
    %assign GPIO_Bit14  = SFcnParamSettings.GPIO_Bit14
    %assign GPIO_Bit15  = SFcnParamSettings.GPIO_Bit15    
    %assign sampleTime  = SFcnParamSettings.sampleTime    
    %assign dataType    = SFcnParamSettings.dataType
    %assign numChannels = SFcnParamSettings.numChannels   
    %assign dirAll      = 65535 - SFcnParamSettings.dirAll
    %assign muxAll      = 65535 - SFcnParamSettings.muxAll
    
    %switch(useIOPort)     
        %case "GPIOA"
            %assign PortName = "A"
        %break
        %case "GPIOB"
            %assign PortName = "B"
        %break
        %case "GPIOD"
            %assign PortName = "D"
        %break
        %case "GPIOE"
            %assign PortName = "E"
        %break
        %case "GPIOF"
            %assign PortName = "F"
        %break
        %case "GPIOG"
            %assign PortName = "G"
        %break        
    %endswitch
    
    %assign usedChannels = GetUsedChannels (%<GPIO_Bit0>, %<GPIO_Bit1>, %<GPIO_Bit2>, %<GPIO_Bit3>, \
                                            %<GPIO_Bit4>, %<GPIO_Bit5>, %<GPIO_Bit6>, %<GPIO_Bit7>, \
                                            %<GPIO_Bit8>, %<GPIO_Bit9>, %<GPIO_Bit10>, %<GPIO_Bit11>, \
                                            %<GPIO_Bit12>, %<GPIO_Bit13>, %<GPIO_Bit14>, %<GPIO_Bit15> )

    %assign block = block + useIOPort + numChannels + usedChannels + sampleTime + dataType \
                          + GPIO_Bit0 + GPIO_Bit1 + GPIO_Bit2 + GPIO_Bit3 + GPIO_Bit4 + GPIO_Bit5 + GPIO_Bit6 + GPIO_Bit7  \
                          + GPIO_Bit8 + GPIO_Bit9 + GPIO_Bit10 + GPIO_Bit11 + GPIO_Bit12 + GPIO_Bit13 + GPIO_Bit14 + GPIO_Bit15 \
                          + dirAll + muxAll + PortName
            
%endfunction  %% AddParamsToBlock

%% [EOF] c28xgpio_di.tlc
